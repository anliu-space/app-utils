{"version":3,"file":"codemirror-b829ae8b.es.js","sources":["../../../../node_modules/.pnpm/@codemirror+state@6.2.1/node_modules/@codemirror/state/dist/index.js","../../../../node_modules/.pnpm/style-mod@4.0.3/node_modules/style-mod/src/style-mod.js","../../../../node_modules/.pnpm/w3c-keyname@2.2.8/node_modules/w3c-keyname/index.js","../../../../node_modules/.pnpm/@codemirror+view@6.13.0/node_modules/@codemirror/view/dist/index.js","../../../../node_modules/.pnpm/@lezer+common@1.0.3/node_modules/@lezer/common/dist/index.js","../../../../node_modules/.pnpm/@lezer+highlight@1.1.6/node_modules/@lezer/highlight/dist/index.js","../../../../node_modules/.pnpm/@codemirror+language@6.7.0/node_modules/@codemirror/language/dist/index.js","../../../../node_modules/.pnpm/@codemirror+commands@6.2.4/node_modules/@codemirror/commands/dist/index.js","../../../../node_modules/.pnpm/crelt@1.0.6/node_modules/crelt/index.js","../../../../node_modules/.pnpm/@codemirror+search@6.5.0/node_modules/@codemirror/search/dist/index.js","../../../../node_modules/.pnpm/@codemirror+autocomplete@6.7.1_@codemirror+language@6.7.0_@codemirror+state@6.2.1_@codemirror_7rd6563z6uk6b3oi57lsxsgwwe/node_modules/@codemirror/autocomplete/dist/index.js","../../../../node_modules/.pnpm/@codemirror+lint@6.2.2/node_modules/@codemirror/lint/dist/index.js","../../../../node_modules/.pnpm/codemirror@6.0.1_@lezer+common@1.0.3/node_modules/codemirror/dist/index.js"],"sourcesContent":["/**\nThe data structure for documents. @nonabstract\n*/\nclass Text {\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* Open.To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* Open.From */ | 2 /* Open.To */);\n        this.decompose(to, this.length, parts, 1 /* Open.From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    Return the document as a string, using newline characters to\n    separate lines.\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#state.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Tree.Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* Open.From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Tree.Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Tree.Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* Open.From */ : 0) | (end >= to ? 2 /* Open.To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* Tree.BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* Tree.BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Tree.Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Tree.Branch */, lines >> 5 /* Tree.BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Tree.Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#state.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\n\n// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = /*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters (when\n`includeExtending` is true), characters joined with zero-width\njoiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true, includeExtending = true) {\n    return (forward ? nextClusterBreak : prevClusterBreak)(str, pos, includeExtending);\n}\nfunction nextClusterBreak(str, pos, includeExtending) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || includeExtending && isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\nfunction prevClusterBreak(str, pos, includeExtending) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2, includeExtending);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe amount of positions a character takes up a JavaScript string.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes. `posA`\n    provides the position of the range in the old document, `posB`\n    the new position in the changed document.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    `fromA`/`toA` provides the extent of the change in the starting\n    document, `fromB`/`toB` the extent of the replacement in the\n    changed document.\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n    /**\n    @internal\n    */\n    static create(sections) { return new ChangeDesc(sections); }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each, with the range in the original document (`fromA`-`toA`)\n    and the range that replaces it in the new document\n    (`fromB`-`toB`).\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return ChangeDesc.create(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: ChangeDesc.create(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    @internal\n    */\n    static createSet(sections, inserted) {\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    // Produce a copy of setA that applies to the document after setB\n    // has been applied (assuming both start at the same document).\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    // Iterate over both sets in parallel. inserted tracks, for changes\n    // in A that have to be processed piece-by-piece, whether their\n    // content has been inserted already, and refers to the section\n    // index.\n    for (let inserted = -1;;) {\n        if (a.ins == -1 && b.ins == -1) {\n            // Move across ranges skipped by both sets.\n            let len = Math.min(a.len, b.len);\n            addSection(sections, len, -1);\n            a.forward(len);\n            b.forward(len);\n        }\n        else if (b.ins >= 0 && (a.ins < 0 || inserted == a.i || a.off == 0 && (b.len < a.len || b.len == a.len && !before))) {\n            // If there's a change in B that comes before the next change in\n            // A (ordered by start pos, then len, then before flag), skip\n            // that (and process any changes in A it covers).\n            let len = b.len;\n            addSection(sections, b.ins, -1);\n            while (len) {\n                let piece = Math.min(a.len, len);\n                if (a.ins >= 0 && inserted < a.i && a.len <= piece) {\n                    addSection(sections, 0, a.ins);\n                    if (insert)\n                        addInsert(insert, sections, a.text);\n                    inserted = a.i;\n                }\n                a.forward(piece);\n                len -= piece;\n            }\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            // Process the part of a change in A up to the start of the next\n            // non-deletion change in B (if overlapping).\n            let len = 0, left = a.len;\n            while (left) {\n                if (b.ins == -1) {\n                    let piece = Math.min(left, b.len);\n                    len += piece;\n                    left -= piece;\n                    b.forward(piece);\n                }\n                else if (b.ins == 0 && b.len < left) {\n                    left -= b.len;\n                    b.next();\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, inserted < a.i ? a.ins : 0);\n            if (insert && inserted < a.i)\n                addInsert(insert, sections, a.text);\n            inserted = a.i;\n            a.forward(a.len - left);\n        }\n        else if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? ChangeSet.createSet(sections, insert) : ChangeDesc.create(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 16 /* RangeFlag.Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 4 /* RangeFlag.AssocBefore */ ? -1 : this.flags & 8 /* RangeFlag.AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 3 /* RangeFlag.BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 5 /* RangeFlag.GoalColumnOffset */;\n        return value == 33554431 /* RangeFlag.NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from, to;\n        if (this.empty) {\n            from = to = change.mapPos(this.from, assoc);\n        }\n        else {\n            from = change.mapPos(this.from, 1);\n            to = change.mapPos(this.to, -1);\n        }\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n    /**\n    @internal\n    */\n    static create(from, to, flags) {\n        return new SelectionRange(from, to, flags);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection.\n    */\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main], 0);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return EditorSelection.normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return SelectionRange.create(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* RangeFlag.AssocBefore */ : 8 /* RangeFlag.AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn, bidiLevel) {\n        let flags = ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* RangeFlag.NoGoalColumn */) << 5 /* RangeFlag.GoalColumnOffset */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel));\n        return head < anchor ? SelectionRange.create(head, anchor, 16 /* RangeFlag.Inverted */ | 8 /* RangeFlag.AssocAfter */ | flags)\n            : SelectionRange.create(anchor, head, (head > anchor ? 4 /* RangeFlag.AssocBefore */ : 0) | flags);\n    }\n    /**\n    @internal\n    */\n    static normalized(ranges, mainIndex = 0) {\n        let main = ranges[mainIndex];\n        ranges.sort((a, b) => a.from - b.from);\n        mainIndex = ranges.indexOf(main);\n        for (let i = 1; i < ranges.length; i++) {\n            let range = ranges[i], prev = ranges[i - 1];\n            if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n                let from = prev.from, to = Math.max(range.to, prev.to);\n                if (i <= mainIndex)\n                    mainIndex--;\n                ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n            }\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of uses of facets are the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize), [editor\nattributes](https://codemirror.net/6/docs/ref/#view.EditorView^editorAttributes), and [update\nlisteners](https://codemirror.net/6/docs/ref/#view.EditorView^updateListener).\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, enables) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n        this.extensions = typeof enables == \"function\" ? enables(this) : enables;\n    }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value to this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Provider.Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In cases where your value depends only on a single field, you'll\n    want to use the [`from`](https://codemirror.net/6/docs/ref/#state.Facet.from) method instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Provider.Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Provider.Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let id = this.id, idx = addresses[id] >> 1, multi = this.type == 2 /* Provider.Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return {\n            create(state) {\n                state.values[idx] = getter(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update(state, tr) {\n                if ((depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) || ensureAll(state, depAddrs)) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, state.values[idx], compare) : !compare(newVal, state.values[idx])) {\n                        state.values[idx] = newVal;\n                        return 1 /* SlotStatus.Changed */;\n                    }\n                }\n                return 0;\n            },\n            reconfigure: (state, oldState) => {\n                let newVal, oldAddr = oldState.config.address[id];\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (this.dependencies.every(dep => {\n                        return dep instanceof Facet ? oldState.facet(dep) === state.facet(dep) :\n                            dep instanceof StateField ? oldState.field(dep, false) == state.field(dep, false) : true;\n                    }) || (multi ? compareArray(newVal = getter(state), oldVal, compare) : compare(newVal = getter(state), oldVal))) {\n                        state.values[idx] = oldVal;\n                        return 0;\n                    }\n                }\n                else {\n                    newVal = getter(state);\n                }\n                state.values[idx] = newVal;\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction ensureAll(state, addrs) {\n    let changed = false;\n    for (let addr of addrs)\n        if (ensureAddr(state, addr) & 1 /* SlotStatus.Changed */)\n            changed = true;\n    return changed;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    function get(state) {\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Provider.Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        return facet.combine(values);\n    }\n    return {\n        create(state) {\n            for (let addr of providerAddrs)\n                ensureAddr(state, addr);\n            state.values[idx] = get(state);\n            return 1 /* SlotStatus.Changed */;\n        },\n        update(state, tr) {\n            if (!ensureAll(state, dynamic))\n                return 0;\n            let value = get(state);\n            if (facet.compare(value, state.values[idx]))\n                return 0;\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        },\n        reconfigure(state, oldState) {\n            let depChanged = ensureAll(state, providerAddrs);\n            let oldProviders = oldState.config.facets[facet.id], oldValue = oldState.facet(facet);\n            if (oldProviders && !depChanged && sameArray(providers, oldProviders)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            let value = get(state);\n            if (facet.compare(value, oldValue)) {\n                state.values[idx] = oldValue;\n                return 0;\n            }\n            state.values[idx] = value;\n            return 1 /* SlotStatus.Changed */;\n        }\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return {\n            create: (state) => {\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            },\n            update: (state, tr) => {\n                let oldVal = state.values[idx];\n                let value = this.updateF(oldVal, tr);\n                if (this.compareF(oldVal, value))\n                    return 0;\n                state.values[idx] = value;\n                return 1 /* SlotStatus.Changed */;\n            },\n            reconfigure: (state, oldState) => {\n                if (oldState.config.address[this.id] != null) {\n                    state.values[idx] = oldState.field(this);\n                    return 0;\n                }\n                state.values[idx] = this.create(state);\n                return 1 /* SlotStatus.Changed */;\n            }\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A lower-than-default precedence.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues, facets) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.facets = facets;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* SlotStatus.Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n        }\n        let oldFacets = oldState === null || oldState === void 0 ? void 0 : oldState.config.facets;\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            let oldProviders = oldFacets && oldFacets[id] || [];\n            if (providers.every(p => p.type == 0 /* Provider.Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                if (sameArray(oldProviders, providers)) {\n                    staticValues.push(oldState.facet(facet));\n                }\n                else {\n                    let value = facet.combine(providers.map(p => p.value));\n                    staticValues.push(oldState && facet.compare(value, oldState.facet(facet)) ? oldState.facet(facet) : value);\n                }\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Provider.Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n            }\n        }\n        let dynamic = dynamicSlots.map(f => f(address));\n        return new Configuration(base, newCompartments, dynamic, address, staticValues, facets);\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known <= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, Prec_.default);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* SlotStatus.Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* SlotStatus.Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* SlotStatus.Computed */)\n        return status;\n    state.status[idx] = 4 /* SlotStatus.Computing */;\n    let changed = state.computeSlot(state, state.config.dynamicSlots[idx]);\n    return state.status[idx] = 2 /* SlotStatus.Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds. It should be a type that\n    doesn't include `undefined`, since that is used in\n    [mapping](https://codemirror.net/6/docs/ref/#state.StateEffect.map) to indicate that an effect is\n    removed.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update), or immediately\ndispatch one by calling\n[`EditorView.dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch).\n*/\nclass Transaction {\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    @internal\n    */\n    static create(startState, changes, selection, effects, annotations, scrollIntoView) {\n        return new Transaction(startState, changes, selection, effects, annotations, scrollIntoView);\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so it is recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps. Automatically\nadded to every transaction, holding `Date.now()`.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = Transaction.create(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.mapDesc(filtered.changes).invertedDesc;\n        }\n        tr = Transaction.create(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(spec, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : Transaction.create(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, computeSlot, tr) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        this.status = config.statusTemplate.slice();\n        this.computeSlot = computeSlot;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.computeSlot = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            conf = Configuration.resolve(base, compartments, this);\n            let intermediateState = new EditorState(conf, this.doc, this.selection, conf.dynamicSlots.map(() => null), (state, slot) => slot.reconfigure(state, this), null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        new EditorState(conf, tr.newDoc, tr.newSelection, startValues, (state, slot) => slot.update(state, tr), tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#state.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField && this.config.address[value.id] != null)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                if (Object.prototype.hasOwnProperty.call(json, prop)) {\n                    let field = fields[prop], value = json[prop];\n                    fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n                }\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let configuration = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, configuration.dynamicSlots.map(() => null), (state, slot) => slot.create(state), null);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    \n    If additional arguments are passed, they will be inserted in\n    place of markers like `$1` (for the first value) and `$2`, etc.\n    A single `$` is equivalent to `$1`, and `$$` will produce a\n    literal dollar sign.\n    */\n    phrase(phrase, ...insert) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase)) {\n                phrase = map[phrase];\n                break;\n            }\n        if (insert.length)\n            phrase = phrase.replace(/\\$(\\$|\\d*)/g, (m, i) => {\n                if (i == \"$\")\n                    return \"$\";\n                let n = +(i || 1);\n                return !n || n > insert.length ? m : insert[n - 1];\n            });\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    \n    Examples of language data fields are...\n    \n    - [`\"commentTokens\"`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) for specifying\n      comment syntax.\n    - [`\"autocomplete\"`](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion^config.override)\n      for providing language-specific completion sources.\n    - [`\"wordChars\"`](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) for adding\n      characters that should be considered part of words in this\n      language.\n    - [`\"closeBrackets\"`](https://codemirror.net/6/docs/ref/#autocomplete.CloseBracketConfig) controls\n      bracket closing behavior.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define({\n    compare(a, b) {\n        let kA = Object.keys(a), kB = Object.keys(b);\n        return kA.length == kB.length && kA.every(k => a[k] == b[k]);\n    }\n});\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two numbers indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even if the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are present.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. `defaults` should hold\ndefault values for all optional fields in `Config`.\n\nThe function will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. Used when comparing\n    rangesets. The default implementation compares by identity.\n    Unless you are only creating a fixed number of unique instances\n    of your value type, it is a good idea to implement this\n    properly.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#state.Range) with this value.\n    */\n    range(from, to = from) { return Range.create(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n    /**\n    @internal\n    */\n    static create(from, to, value) {\n        return new Range(from, to, value);\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* C.Far */, true), e = this.findIndex(to, 1000000000 /* C.Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n                if (val.startSide != val.endSide) {\n                    newTo = changes.mapPos(curFrom, val.endSide);\n                    if (newTo < newFrom)\n                        continue;\n                }\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#state.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#state.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#state.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    static create(chunkPos, chunk, nextLayer, maxPoint) {\n        return new RangeSet(chunkPos, chunk, nextLayer, maxPoint);\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (Note: The type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add = add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(Range.create(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.empty || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next || RangeSet.empty, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* C.Far */ - 1;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#state.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        let cursor = new SpanCursor(sets, null, minPointSize).goto(from), pos = from;\n        let openRanges = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                let active = cursor.activeForPoint(cursor.to);\n                let openCount = cursor.pointFrom < from ? active.length + 1 : Math.min(active.length, openRanges);\n                iterator.point(pos, curTo, cursor.point, active, openCount, cursor.pointRank);\n                openRanges = Math.min(cursor.openEnd(curTo), active.length);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, openRanges);\n                openRanges = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                return openRanges + (cursor.point && cursor.to > to ? 1 : 0);\n            pos = cursor.to;\n            cursor.next();\n        }\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#state.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#state.Range) objects.\n*/\nclass RangeSetBuilder {\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* C.Far */;\n        this.lastTo = -1000000000 /* C.Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* C.ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = RangeSet.create(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i] &&\n                !(textDiff === null || textDiff === void 0 ? void 0 : textDiff.touchesRange(known, known + set.chunk[i].length)))\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* C.Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.rank - other.rank ||\n            this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* C.Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint) {\n        this.minPoint = minPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* C.Far */;\n        this.endSide = 0;\n        // The amount of open active ranges at the start of the iterator.\n        // Not including points.\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* C.Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* C.Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    this.cursor.next();\n                    this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            this.openStart = 0;\n            for (let i = trackOpen.length - 1; i >= 0 && trackOpen[i] < from; i--)\n                this.openStart++;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* C.Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, Line, MapMode, Prec, Range, RangeSet, RangeSetBuilder, RangeValue, SelectionRange, StateEffect, StateEffectType, StateField, Text, Transaction, codePointAt, codePointSize, combineConfig, countColumn, findClusterBreak, findColumn, fromCodePoint };\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = new Map //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root) {\n    let doc = root.ownerDocument || root, win = doc.defaultView\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc)\n      if (adopted) {\n        root.adoptedStyleSheets = [adopted.sheet, ...root.adoptedStyleSheets]\n        return root[SET] = adopted\n      }\n      this.sheet = new win.CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets]\n      adoptedSet.set(doc, this)\n    } else {\n      this.styleTag = doc.createElement(\"style\")\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { Text, RangeSet, MapMode, RangeValue, Facet, StateEffect, ChangeSet, findClusterBreak, EditorSelection, EditorState, findColumn, CharCategory, Annotation, Prec, Transaction, codePointAt, codePointSize, combineConfig, StateField, RangeSetBuilder, countColumn } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { keyName, base, shift } from 'w3c-keyname';\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom == node || dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction deepActiveElement(doc) {\n    let elt = doc.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    for (let cur = dom; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.assignedSlot || cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = -(bounding.top - rect.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = -(bounding.top + moveY - rect.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = -(bounding.left - rect.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + moveX + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = -(bounding.left + moveX - rect.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    let movedX = 0, movedY = 0;\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        movedY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        movedX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - movedX, top: rect.top - movedY,\n                        right: rect.right - movedX, bottom: rect.bottom - movedY };\n                    if (movedX && Math.abs(movedX - moveX) < 1)\n                        x = \"nearest\";\n                    if (movedY && Math.abs(movedY - moveY) < 1)\n                        y = \"nearest\";\n                }\n            }\n            if (top)\n                break;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nfunction scrollableParent(dom) {\n    let doc = dom.ownerDocument;\n    for (let cur = dom.parentNode; cur;) {\n        if (cur == doc.body) {\n            break;\n        }\n        else if (cur.nodeType == 1) {\n            if (cur.scrollHeight > cur.clientHeight || cur.scrollWidth > cur.clientWidth)\n                return cur;\n            cur = cur.assignedSlot || cur.parentNode;\n        }\n        else if (cur.nodeType == 11) {\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n    return null;\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        let { anchorNode, focusNode } = range;\n        // Clip offsets to node size to avoid crashes when Safari reports bogus offsets (#1152)\n        this.set(anchorNode, Math.min(range.anchorOffset, anchorNode ? maxOffset(anchorNode) : 0), focusNode, Math.min(range.focusOffset, focusNode ? maxOffset(focusNode) : 0));\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\nfunction atElementStart(doc, selection) {\n    let node = selection.focusNode, offset = selection.focusOffset;\n    if (!node || selection.anchorNode != node || selection.anchorOffset != offset)\n        return false;\n    // Safari can report bogus offsets (#1152)\n    offset = Math.min(offset, maxOffset(node));\n    for (;;) {\n        if (offset) {\n            if (node.nodeType != 1)\n                return false;\n            let prev = node.childNodes[offset - 1];\n            if (prev.contentEditable == \"false\")\n                offset--;\n            else {\n                node = prev;\n                offset = maxOffset(node);\n            }\n        }\n        else if (node == doc) {\n            return true;\n        }\n        else {\n            offset = domIndex(node);\n            node = node.parentNode;\n        }\n    }\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    sync(view, track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom;\n            let prev = null, next;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    if (!child.dom && (next = prev ? prev.nextSibling : parent.firstChild)) {\n                        let contentView = ContentView.get(next);\n                        if (!contentView || !contentView.parent && contentView.canReuseDOM(child))\n                            child.reuseDOM(next);\n                    }\n                    child.sync(view, track);\n                    child.dirty = 0 /* Not */;\n                }\n                next = prev ? prev.nextSibling : parent.firstChild;\n                if (track && !track.written && track.node == parent && next != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (next && next != child.dom)\n                        next = rm$1(next);\n                }\n                else {\n                    parent.insertBefore(child.dom, next);\n                }\n                prev = child.dom;\n            }\n            next = prev ? prev.nextSibling : parent.firstChild;\n            if (next && track && track.node == parent)\n                track.written = true;\n            while (next)\n                next = rm$1(next);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(view, track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this)\n                child.destroy();\n        }\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    get isWidget() { return false; }\n    get isHidden() { return false; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    canReuseDOM(other) { return other.constructor == this.constructor; }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm$1(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && toOff < after.length) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet nav = typeof navigator != \"undefined\" ? navigator : { userAgent: \"\", vendor: \"\", platform: \"\" };\nlet doc = typeof document != \"undefined\" ? document : { documentElement: { style: {} } };\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(view, track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.dirty & 4 /* Attrs */)\n            this.setAttrs(this.dom);\n        super.sync(view, track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else if (to < length) {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else if (to < length)\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return null;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n        this.prevWidget = null;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync(view) {\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other instanceof WidgetView && other.side == this.side &&\n            this.widget.constructor == other.widget.constructor) {\n            if (!this.widget.compare(other.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let { view } = top, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return (this.length ? pos == 0 : this.side > 0)\n            ? DOMPos.before(this.dom)\n            : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let custom = this.widget.coordsAt(this.dom, pos, side);\n        if (custom)\n            return custom;\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return null;\n        let fromBack = this.side ? this.side < 0 : pos > 0;\n        for (let i = fromBack ? rects.length - 1 : 0;; i += (fromBack ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return this.length ? rect : flattenRect(rect, !fromBack);\n    }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    get isHidden() { return this.widget.isHidden; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return new DOMPos(text, Math.min(pos, text.nodeValue.length));\n        return scanCompositionTree(pos, 0, topView, text, this.length - topView.length, (v, p) => v.domAtPos(p), (text, p) => new DOMPos(text, Math.min(p, text.nodeValue.length)));\n    }\n    sync() { this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return Math.min(offset, this.length);\n        return posFromDOMInCompositionTree(node, offset, topView, text, this.length - topView.length);\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) {\n        let { topView, text } = this.widget;\n        if (!topView)\n            return textCoords(text, pos, side);\n        return scanCompositionTree(pos, side, topView, text, this.length - topView.length, (v, pos, side) => v.coordsAt(pos, side), (text, pos, side) => textCoords(text, pos, side));\n    }\n    destroy() {\n        var _a;\n        super.destroy();\n        (_a = this.widget.topView) === null || _a === void 0 ? void 0 : _a.destroy();\n    }\n    get isEditable() { return true; }\n    canReuseDOM() { return true; }\n}\n// Uses the old structure of a chunk of content view frozen for\n// composition to try and find a reasonable DOM location for the given\n// offset.\nfunction scanCompositionTree(pos, side, view, text, dLen, enterView, fromText) {\n    if (view instanceof MarkView) {\n        for (let child = view.dom.firstChild; child; child = child.nextSibling) {\n            let desc = ContentView.get(child);\n            if (!desc) {\n                let inner = scanCompositionNode(pos, side, child, fromText);\n                if (typeof inner != \"number\")\n                    return inner;\n                pos = inner;\n            }\n            else {\n                let hasComp = contains(child, text);\n                let len = desc.length + (hasComp ? dLen : 0);\n                if (pos < len || pos == len && desc.getSide() <= 0)\n                    return hasComp ? scanCompositionTree(pos, side, desc, text, dLen, enterView, fromText) : enterView(desc, pos, side);\n                pos -= len;\n            }\n        }\n        return enterView(view, view.length, -1);\n    }\n    else if (view.dom == text) {\n        return fromText(text, pos, side);\n    }\n    else {\n        return enterView(view, pos, side);\n    }\n}\nfunction scanCompositionNode(pos, side, node, fromText) {\n    if (node.nodeType == 3) {\n        let len = node.nodeValue.length;\n        if (pos <= len)\n            return fromText(node, pos, side);\n        pos -= len;\n    }\n    else if (node.nodeType == 1 && node.contentEditable != \"false\") {\n        for (let child = node.firstChild; child; child = child.nextSibling) {\n            let inner = scanCompositionNode(pos, side, child, fromText);\n            if (typeof inner != \"number\")\n                return inner;\n            pos = inner;\n        }\n    }\n    return pos;\n}\nfunction posFromDOMInCompositionTree(node, offset, view, text, dLen) {\n    if (view instanceof MarkView) {\n        let pos = 0;\n        for (let child = view.dom.firstChild; child; child = child.nextSibling) {\n            let childView = ContentView.get(child);\n            if (childView) {\n                let hasComp = contains(child, text);\n                if (contains(child, node))\n                    return pos + (hasComp ? posFromDOMInCompositionTree(node, offset, childView, text, dLen)\n                        : childView.localPosFromDOM(node, offset));\n                pos += childView.length + (hasComp ? dLen : 0);\n            }\n            else {\n                let inner = posFromDOMInOpaqueNode(node, offset, child);\n                if (inner.result != null)\n                    return pos + inner.result;\n                pos += inner.size;\n            }\n        }\n    }\n    else if (view.dom == text) {\n        return Math.min(offset, text.nodeValue.length);\n    }\n    return view.localPosFromDOM(node, offset);\n}\nfunction posFromDOMInOpaqueNode(node, offset, target) {\n    if (target.nodeType == 3) {\n        return node == target ? { result: offset } : { size: target.nodeValue.length };\n    }\n    else if (target.nodeType == 1 && target.contentEditable != \"false\") {\n        let pos = 0;\n        for (let child = target.firstChild, i = 0;; child = child.nextSibling, i++) {\n            if (node == target && i == offset)\n                return { result: pos };\n            if (!child)\n                return { size: pos };\n            let inner = posFromDOMInOpaqueNode(node, offset, child);\n            if (inner.result != null)\n                return { result: offset + inner.result };\n            pos += inner.size;\n        }\n    }\n    else {\n        return target.contains(node) ? { result: 0 } : { size: 0 };\n    }\n}\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom) {\n            let dom = document.createElement(\"img\");\n            dom.className = \"cm-widgetBuffer\";\n            dom.setAttribute(\"aria-hidden\", \"true\");\n            this.setDOM(dom);\n        }\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return this.side > 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        return this.dom.getBoundingClientRect();\n    }\n    get overrideDOMText() {\n        return Text.empty;\n    }\n    get isHidden() { return true; }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineDOMAtPos(parent, pos) {\n    let dom = parent.dom, { children } = parent, i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (let j = i; j > 0; j--) {\n        let prev = children[j - 1];\n        if (prev.dom.parentNode == dom)\n            return prev.domAtPos(prev.length);\n    }\n    for (let j = i; j < children.length; j++) {\n        let next = children[j];\n        if (next.dom.parentNode == dom)\n            return next.domAtPos(0);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    let before = null, beforePos = -1, after = null, afterPos = -1;\n    function scan(view, pos) {\n        for (let i = 0, off = 0; i < view.children.length && off <= pos; i++) {\n            let child = view.children[i], end = off + child.length;\n            if (end >= pos) {\n                if (child.children.length) {\n                    scan(child, pos - off);\n                }\n                else if ((!after || after.isHidden && side > 0) &&\n                    (end > pos || off == end && child.getSide() > 0)) {\n                    after = child;\n                    afterPos = pos - off;\n                }\n                else if (off < pos || (off == end && child.getSide() < 0) && !child.isHidden) {\n                    before = child;\n                    beforePos = pos - off;\n                }\n            }\n            off = end;\n        }\n    }\n    scan(view, pos);\n    let target = (side < 0 ? before : after) || before || after;\n    if (target)\n        return target.coordsAt(Math.max(0, target == before ? beforePos : afterPos), side);\n    return fallbackRect(view);\n}\nfunction fallbackRect(view) {\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    let changed = null;\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(changed = name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(changed = name, attrs[name]);\n    return !!changed;\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even if the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(dom, view) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    For inline widgets that are displayed inline (as opposed to\n    `inline-block`) and introduce line breaks (through `<br>` tags\n    or textual newlines), this must indicate the amount of line\n    breaks they introduce. Defaults to 0.\n    */\n    get lineBreaks() { return 0; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(event) { return true; }\n    /**\n    Override the way screen coordinates for positions at/in the\n    widget are found. `pos` will be the offset into the widget, and\n    `side` the side of the position that is being queried—less than\n    zero for before, greater than zero for after, and zero for\n    directly at that position.\n    */\n    coordsAt(dom, pos, side) { return null; }\n    /**\n    @internal\n    */\n    get customView() { return null; }\n    /**\n    @internal\n    */\n    get isHidden() { return false; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#state.Range), which adds a start and end position.\n@nonabstract\n*/\nclass Decoration extends RangeValue {\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), with\n    the higher-precedence decorations creating the inner DOM nodes.\n    Such elements are split on line boundaries and on the boundaries\n    of lower-precedence decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which displays a DOM element at the\n    given position.\n    */\n    static widget(spec) {\n        let side = Math.max(-10000, Math.min(10000, spec.side || 0)), block = !!spec.block;\n        side += block ? (side > 0 ? 300000000 /* BlockAfter */ : -400000000 /* BlockBefore */) : (side > 0 ? 100000000 /* InlineAfter */ : -100000000 /* InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block, startSide, endSide;\n        if (spec.isBlockGap) {\n            startSide = -500000000 /* GapStart */;\n            endSide = 400000000 /* GapEnd */;\n        }\n        else {\n            let { start, end } = getInclusive(spec, block);\n            startSide = (start ? (block ? -300000000 /* BlockIncStart */ : -1 /* InlineIncStart */) : 500000000 /* NonIncStart */) - 1;\n            endSide = (end ? (block ? 200000000 /* BlockIncEnd */ : 1 /* InlineIncEnd */) : -600000000 /* NonIncEnd */) + 1;\n        }\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* InlineIncStart */ : 500000000 /* NonIncStart */, end ? 1 /* InlineIncEnd */ : -600000000 /* NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Line */, -200000000 /* Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration &&\n            this.spec.class == other.spec.class &&\n            attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() {\n        return this.block || !!this.widget && (this.widget.estimatedHeight >= 5 || this.widget.lineBreaks > 0);\n    }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin >= from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        this.markDirty();\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs({ class: cls }, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(view, track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.dirty & 4 /* Attrs */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(view, track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last || !this.length ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0, textHeight;\n        for (let child of this.children) {\n            if (!(child instanceof TextView) || /[^ -~]/.test(child.text))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n            textHeight = rects[0].height;\n        }\n        return !totalWidth ? null : {\n            lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length,\n            textHeight\n        };\n    }\n    coordsAt(pos, side) {\n        let rect = coordsInChildren(this, pos, side);\n        // Correct rectangle height for empty lines when the returned\n        // height is larger than the text height.\n        if (!this.children.length && rect && this.parent) {\n            let { heightOracle } = this.parent.view.viewState, height = rect.bottom - rect.top;\n            if (Math.abs(height - heightOracle.lineHeight) < 2 && heightOracle.textHeight < height) {\n                let dist = (height - heightOracle.textHeight) / 2;\n                return { top: rect.top + dist, bottom: rect.bottom - dist, left: rect.left, right: rect.left };\n            }\n        }\n        return rect;\n    }\n    become(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n        this.prevWidget = null;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.type);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync(view) {\n        if (!this.dom || !this.widget.updateDOM(this.dom, view)) {\n            if (this.dom && this.prevWidget)\n                this.prevWidget.destroy(this.dom);\n            this.prevWidget = null;\n            this.setDOM(this.widget.toDOM(view));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.compare(this.widget))\n                this.markDirty(true);\n            if (this.dom && !this.prevWidget)\n                this.prevWidget = this.widget;\n            this.widget = other.widget;\n            this.length = other.length;\n            this.type = other.type;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get isEditable() { return false; }\n    get isWidget() { return true; }\n    coordsAt(pos, side) {\n        return this.widget.coordsAt(this.dom, pos, side);\n    }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsFor) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsFor = disallowBlockEffectsFor;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* No */;\n        this.bufferMarks = [];\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active = this.bufferMarks) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer();\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (this.pendingBuffer && openEnd <= this.bufferMarks.length)\n            this.flushBuffer();\n        else\n            this.pendingBuffer = 0 /* No */;\n        if (!this.posCovered())\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer();\n                    this.curLine = null;\n                    this.atCursorPos = true;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* Chunk */);\n            this.flushBuffer(active.slice(active.length - openStart));\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart, index) {\n        if (this.disallowBlockEffectsFor[index] && deco instanceof PointDecoration) {\n            if (deco.block)\n                throw new RangeError(\"Block decorations may not be specified via plugins\");\n            if (to > this.doc.lineAt(this.pos).to)\n                throw new RangeError(\"Decorations that replace line breaks may not be specified via plugins\");\n        }\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || new NullWidget(\"span\"), len, len ? 0 : deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length &&\n                    (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || openStart > active.length || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* IfCursor */ && !cursorBefore && !view.isEditable)\n                    this.pendingBuffer = 0 /* No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* No */ : from < to || openStart > active.length ? 1 /* Yes */ : 2 /* IfCursor */;\n                if (this.pendingBuffer)\n                    this.bufferMarks = active.slice();\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    static build(text, from, to, decorations, dynamicDecorationMap) {\n        let builder = new ContentBuilder(text, from, to, dynamicDecorationMap);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n    get isHidden() { return true; }\n}\n\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\nconst focusChangeEffect = /*@__PURE__*/Facet.define();\nconst perLineTextDirection = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nconst nativeSelectionHidden = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n    }\n    map(changes) {\n        return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);\n    }\n}\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    domEventHandlers, buildExtensions) {\n        this.id = id;\n        this.create = create;\n        this.domEventHandlers = domEventHandlers;\n        this.extension = buildExtensions(this);\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        const { eventHandlers, provide, decorations: deco } = spec || {};\n        return new ViewPlugin(nextPluginID++, create, eventHandlers, plugin => {\n            let ext = [viewPlugin.of(plugin)];\n            if (deco)\n                ext.push(decorations.of(view => {\n                    let pluginInst = view.plugin(plugin);\n                    return pluginInst ? deco(pluginInst) : Decoration.none;\n                }));\n            if (provide)\n                ext.push(provide(plugin));\n            return ext;\n        });\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `false`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.create(view);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst atomicRanges = /*@__PURE__*/Facet.define();\nconst scrollMargins = /*@__PURE__*/Facet.define();\nfunction getScrollMargins(view) {\n    let left = 0, right = 0, top = 0, bottom = 0;\n    for (let source of view.state.facet(scrollMargins)) {\n        let m = source(view);\n        if (m) {\n            if (m.left != null)\n                left = Math.max(left, m.left);\n            if (m.right != null)\n                right = Math.max(right, m.right);\n            if (m.top != null)\n                top = Math.max(top, m.top);\n            if (m.bottom != null)\n                bottom = Math.max(bottom, m.bottom);\n        }\n    }\n    return { left, right, top, bottom };\n}\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n    }\n    /**\n    @internal\n    */\n    static create(view, state, transactions) {\n        return new ViewUpdate(view, state, transactions);\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /**\n    Indicates whether the height of a block element in the editor\n    changed in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (8 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        0xfb50 <= ch && ch <= 0xfdff ? 4 /* AL */ :\n                            ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */, oppositeType = direction == LTR ? 2 /* R */ : 1 /* L */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N0. Process bracket pairs in an isolating run sequence\n    // sequentially in the logical order of the text positions of the\n    // opening paired brackets using the logic given below. Within this\n    // scope, bidirectional types EN and AN are treated as R.\n    for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {\n        // Keeps [startIndex, type, strongSeen] triples for each open\n        // bracket on BracketStack.\n        if (br = Brackets[ch = line.charCodeAt(i)]) {\n            if (br < 0) { // Closing bracket\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    if (BracketStack[sJ + 1] == -br) {\n                        let flags = BracketStack[sJ + 2];\n                        let type = (flags & 2 /* EmbedInside */) ? outerType :\n                            !(flags & 4 /* OppositeInside */) ? 0 :\n                                (flags & 1 /* OppositeBefore */) ? oppositeType : outerType;\n                        if (type)\n                            types[i] = types[BracketStack[sJ]] = type;\n                        sI = sJ;\n                        break;\n                    }\n                }\n            }\n            else if (BracketStack.length == 189 /* MaxDepth */) {\n                break;\n            }\n            else {\n                BracketStack[sI++] = i;\n                BracketStack[sI++] = ch;\n                BracketStack[sI++] = context;\n            }\n        }\n        else if ((type = types[i]) == 2 /* R */ || type == 1 /* L */) {\n            let embed = type == outerType;\n            context = embed ? 0 : 1 /* OppositeBefore */;\n            for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                let cur = BracketStack[sJ + 2];\n                if (cur & 2 /* EmbedInside */)\n                    break;\n                if (embed) {\n                    BracketStack[sJ + 2] |= 2 /* EmbedInside */;\n                }\n                else {\n                    if (cur & 4 /* OppositeInside */)\n                        break;\n                    BracketStack[sJ + 2] |= 4 /* OppositeInside */;\n                }\n            }\n        }\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = findClusterBreak(line.text, startIndex, indexForward);\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);\n}\n\nconst LineBreakPlaceholder = \"\\uffff\";\nclass DOMReader {\n    constructor(points, state) {\n        this.points = points;\n        this.text = \"\";\n        this.lineSeparator = state.facet(EditorState.lineSeparator);\n    }\n    append(text) {\n        this.text += text;\n    }\n    lineBreak() {\n        this.text += LineBreakPlaceholder;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            let oldLen = this.text.length;\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore) && this.text.length > oldLen))\n                this.lineBreak();\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readTextNode(node) {\n        let text = node.nodeValue;\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, text.length);\n        for (let off = 0, re = this.lineSeparator ? null : /\\r\\n?|\\n/g;;) {\n            let nextBreak = -1, breakSize = 1, m;\n            if (this.lineSeparator) {\n                nextBreak = text.indexOf(this.lineSeparator, off);\n                breakSize = this.lineSeparator.length;\n            }\n            else if (m = re.exec(text)) {\n                nextBreak = m.index;\n                breakSize = m[0].length;\n            }\n            this.append(text.slice(off, nextBreak < 0 ? text.length : nextBreak));\n            if (nextBreak < 0)\n                break;\n            this.lineBreak();\n            if (breakSize > 1)\n                for (let point of this.points)\n                    if (point.node == node && point.pos > this.text.length)\n                        point.pos -= breakSize - 1;\n            off = nextBreak + breakSize;\n        }\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        if (fromView != null) {\n            this.findPointInside(node, fromView.length);\n            for (let i = fromView.iter(); !i.next().done;) {\n                if (i.lineBreak)\n                    this.lineBreak();\n                else\n                    this.append(i.value);\n            }\n        }\n        else if (node.nodeType == 3) {\n            this.readTextNode(node);\n        }\n        else if (node.nodeName == \"BR\") {\n            if (node.nextSibling)\n                this.lineBreak();\n        }\n        else if (node.nodeType == 1) {\n            this.readRange(node.firstChild, null);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointInside(node, maxLen) {\n        for (let point of this.points)\n            if (node.nodeType == 3 ? point.node == node : node.contains(point.node))\n                point.pos = this.text.length + Math.min(maxLen, point.offset);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        this.dynamicDecorationMap = [];\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);\n    }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state.\n    update(update) {\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (this.view.inputState.composing < 0)\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length || this.dirty)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight + \"px\";\n            this.dom.style.flexBasis = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(this.view, track);\n            this.dirty = 0 /* Not */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.dynamicDecorationMap);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead || !this.view.observer.selectionRange.focusNode)\n            this.view.observer.readSelectionRange();\n        let activeElt = this.view.root.activeElement, focused = activeElt == this.dom;\n        let selectionNotFocus = !focused &&\n            hasSelection(this.dom, this.view.observer.selectionRange) && !(activeElt && this.dom.contains(activeElt));\n        if (!(focused || fromPointer || selectionNotFocus))\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(main.anchor);\n        let head = main.empty ? anchor : this.domAtPos(main.head);\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && !this.compositionDeco.size && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.view.root);\n                if (!rawSel) ;\n                else if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    // Safari will ignore the call above when the editor is\n                    // hidden, and then raise an error on the call to extend\n                    // (#940).\n                    try {\n                        rawSel.extend(head.node, head.offset);\n                    }\n                    catch (_) { }\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n                if (selectionNotFocus && this.view.root.activeElement == this.dom) {\n                    this.dom.blur();\n                    if (activeElt)\n                        activeElt.focus();\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        if (this.compositionDeco.size)\n            return;\n        let { view } = this, cursor = view.state.selection.main;\n        let sel = getSelection(view.root);\n        let { anchorNode, anchorOffset } = view.observer.selectionRange;\n        if (!sel || !cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n        // This can go wrong in corner cases like single-character lines,\n        // so check and reset if necessary.\n        view.observer.readSelectionRange();\n        let newRange = view.observer.selectionRange;\n        if (view.docView.posFromDOM(newRange.anchorNode, newRange.anchorOffset) != cursor.from)\n            sel.collapse(anchorNode, anchorOffset);\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start ||\n                (pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter &&\n                    (!i || side == 2 || this.children[i - 1].breakAfter ||\n                        (this.children[i - 1].type == BlockType.WidgetBefore && side > -2))))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights(viewport) {\n        let result = [], { from, to } = viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1, ltr = this.view.textDirection == Direction.LTR;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = ltr ? rect.right - childRect.left : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    textDirectionAt(pos) {\n        let { i } = this.childPos(pos, 1);\n        return getComputedStyle(this.children[i].dom).direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth, textHeight;\n        dummy.className = \"cm-line\";\n        dummy.style.width = \"99999px\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            textHeight = rect ? rect.height : lineHeight;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth, textHeight };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;\n                deco.push(Decoration.replace({\n                    widget: new BlockGapWidget(height),\n                    block: true,\n                    inclusive: true,\n                    isBlockGap: true,\n                }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let allDeco = this.view.state.facet(decorations).map((d, i) => {\n            let dynamic = this.dynamicDecorationMap[i] = typeof d == \"function\";\n            return dynamic ? d(this.view) : d;\n        });\n        for (let i = allDeco.length; i < allDeco.length + 3; i++)\n            this.dynamicDecorationMap[i] = false;\n        return this.decorations = [\n            ...allDeco,\n            this.compositionDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n    }\n    scrollIntoView(target) {\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let margins = getScrollMargins(this.view);\n        let targetRect = {\n            left: rect.left - margins.left, top: rect.top - margins.top,\n            right: rect.right + margins.right, bottom: rect.bottom + margins.bottom\n        };\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction compositionSurroundingNode(view) {\n    let sel = view.observer.selectionRange;\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return null;\n    let cView = view.docView.nearest(textNode);\n    if (!cView)\n        return null;\n    if (cView instanceof LineView) {\n        let topNode = textNode;\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        let pos = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n        return { from: pos, to: pos, node: topNode, text: textNode };\n    }\n    else {\n        for (;;) {\n            let { parent } = cView;\n            if (!parent)\n                return null;\n            if (parent instanceof LineView)\n                break;\n            cView = parent;\n        }\n        let from = cView.posAtStart;\n        return { from, to: from + cView.length, node: cView.dom, text: textNode };\n    }\n}\nfunction computeCompositionDeco(view, changes) {\n    let surrounding = compositionSurroundingNode(view);\n    if (!surrounding)\n        return Decoration.none;\n    let { from, to, node, text: textNode } = surrounding;\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let { state } = view, reader = new DOMReader([], state);\n    if (node.nodeType == 3)\n        reader.readTextNode(node);\n    else\n        reader.readRange(node.firstChild, null);\n    let { text } = reader;\n    if (text.indexOf(LineBreakPlaceholder) > -1)\n        return Decoration.none; // Don't try to preserve multi-line compositions\n    if (newTo - newFrom < text.length) {\n        if (state.doc.sliceString(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.doc.sliceString(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.doc.sliceString(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    let topView = ContentView.get(node);\n    if (topView instanceof CompositionView)\n        topView = topView.widget.topView;\n    else if (topView)\n        topView.parent = null;\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(node, textNode, topView), inclusive: true })\n        .range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text, topView) {\n        super();\n        this.top = top;\n        this.text = text;\n        this.topView = topView;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(startNode, startOffset, side) {\n    if (side <= 0)\n        for (let node = startNode, offset = startOffset;;) {\n            if (node.nodeType == 3)\n                return node;\n            if (node.nodeType == 1 && offset > 0) {\n                node = node.childNodes[offset - 1];\n                offset = maxOffset(node);\n            }\n            else {\n                break;\n            }\n        }\n    if (side >= 0)\n        for (let node = startNode, offset = startOffset;;) {\n            if (node.nodeType == 3)\n                return node;\n            if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n                node = node.childNodes[offset];\n                offset = 0;\n            }\n            else {\n                break;\n            }\n        }\n    return null;\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY, closestOverlap = false;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n                let side = dy ? (y < rect.top ? -1 : 1) : dx ? (x < rect.left ? -1 : 1) : 0;\n                closestOverlap = !side || (side > 0 ? i < rects.length - 1 : i > 0);\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (closestOverlap && closest.contentEditable != \"false\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, coords, precise, bias = -1) {\n    var _a, _b;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let { x, y } = coords, yOffset = y - docTop;\n    if (yOffset < 0)\n        return 0;\n    if (yOffset > docHeight)\n        return view.state.doc.length;\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (!view.contentDOM.contains(node) ||\n                    browser.safari && isSuspiciousSafariCaretResult(node, offset, x) ||\n                    browser.chrome && isSuspiciousChromeCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    let nearest = view.docView.nearest(node);\n    if (!nearest)\n        return null;\n    if (nearest.isWidget && ((_b = nearest.dom) === null || _b === void 0 ? void 0 : _b.nodeType) == 1) {\n        let rect = nearest.dom.getBoundingClientRect();\n        return coords.y < rect.top || coords.y <= rect.bottom && coords.x <= (rect.left + rect.right) / 2\n            ? nearest.posAtStart : nearest.posAtEnd;\n    }\n    else {\n        return nearest.localPosFromDOM(node, offset) + nearest.posAtStart;\n    }\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let line = Math.floor((y - block.top) / view.defaultLineHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousSafariCaretResult(node, offset, x) {\n    let len;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (let next = node.nextSibling; next; next = next.nextSibling)\n        if (next.nodeType != 1 || next.nodeName != \"BR\")\n            return false;\n    return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\n// Chrome will move positions between lines to the start of the next line\nfunction isSuspiciousChromeCaretResult(node, offset, x) {\n    if (offset != 0)\n        return false;\n    for (let cur = node;;) {\n        let parent = cur.parentNode;\n        if (!parent || parent.nodeType != 1 || parent.firstChild != cur)\n            return false;\n        if (parent.classList.contains(\"cm-line\"))\n            break;\n        cur = parent;\n    }\n    let rect = node.nodeType == 1 ? node.getBoundingClientRect()\n        : textRange(node, 0, Math.max(node.nodeValue.length, 1)).getBoundingClientRect();\n    return x - rect.left > 5;\n}\nfunction blockAt(view, pos) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type))\n        for (let l of line.type) {\n            if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))\n                return l;\n        }\n    return line;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = blockAt(view, start.head);\n    let coords = !includeWrap || line.type != BlockType.Text || !(view.lineWrapping || line.widgetLineBreaks) ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let direction = view.textDirectionAt(line.from);\n        let pos = view.posAtCoords({ x: forward == (direction == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    let direction = view.textDirectionAt(line.from);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, direction, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos, start.assoc);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.defaultLineHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos))\n            return EditorSelection.cursor(pos, start.assoc, undefined, goal);\n    }\n}\nfunction skipAtomicRanges(atoms, pos, bias) {\n    for (;;) {\n        let moved = 0;\n        for (let set of atoms) {\n            set.between(pos - 1, pos + 1, (from, to, value) => {\n                if (pos > from && pos < to) {\n                    let side = moved || bias || (pos - from < to - pos ? -1 : 1);\n                    pos = side < 0 ? from : to;\n                    moved = side;\n                }\n            });\n        }\n        if (!moved)\n            return pos;\n    }\n}\nfunction skipAtoms(view, oldPos, pos) {\n    let newPos = skipAtomicRanges(view.state.facet(atomicRanges).map(f => f(view)), pos.from, oldPos.head > pos.from ? -1 : 1);\n    return newPos == pos.from ? pos : EditorSelection.cursor(newPos, newPos < pos.from ? 1 : -1);\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        this.lastTouchTime = 0;\n        this.lastFocusTime = 0;\n        this.lastScrollTop = 0;\n        this.lastScrollLeft = 0;\n        this.chromeScrollHack = -1;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastEscPress = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        // End time of the previous composition\n        this.compositionEndedAt = 0;\n        // Used in a kludge to detect when an Enter keypress should be\n        // considered part of the composition on Safari, which fires events\n        // in the wrong order\n        this.compositionPendingKey = false;\n        // Used to categorize changes as part of a composition, even when\n        // the mutation events fire shortly after the compositionend event\n        this.compositionPendingChange = false;\n        this.mouseSelection = null;\n        let handleEvent = (handler, event) => {\n            if (this.ignoreDuringComposition(event))\n                return;\n            if (event.type == \"keydown\" && this.keydown(view, event))\n                return;\n            if (this.mustFlushObserver(event))\n                view.observer.forceFlush();\n            if (this.runCustomHandlers(event.type, view, event))\n                event.preventDefault();\n            else\n                handler(view, event);\n        };\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, event => {\n                if (eventBelongsToEditor(view, event))\n                    handleEvent(handler, event);\n            }, handlerOptions[type]);\n            this.registeredEvents.push(type);\n        }\n        view.scrollDOM.addEventListener(\"mousedown\", (event) => {\n            if (event.target == view.scrollDOM && event.clientY > view.contentDOM.getBoundingClientRect().bottom) {\n                handleEvent(handlers.mousedown, event);\n                if (!event.defaultPrevented && event.button == 2) {\n                    // Make sure the content covers the entire scroller height, in order\n                    // to catch a native context menu click below it\n                    let start = view.contentDOM.style.minHeight;\n                    view.contentDOM.style.minHeight = \"100%\";\n                    setTimeout(() => view.contentDOM.style.minHeight = start, 200);\n                }\n            }\n        });\n        view.scrollDOM.addEventListener(\"drop\", (event) => {\n            if (event.target == view.scrollDOM && event.clientY > view.contentDOM.getBoundingClientRect().bottom)\n                handleEvent(handlers.drop, event);\n        });\n        if (browser.chrome && browser.chrome_version == 102) { // FIXME remove at some point\n            // On Chrome 102, viewport updates somehow stop wheel-based\n            // scrolling. Turning off pointer events during the scroll seems\n            // to avoid the issue.\n            view.scrollDOM.addEventListener(\"wheel\", () => {\n                if (this.chromeScrollHack < 0)\n                    view.contentDOM.style.pointerEvents = \"none\";\n                else\n                    window.clearTimeout(this.chromeScrollHack);\n                this.chromeScrollHack = setTimeout(() => {\n                    this.chromeScrollHack = -1;\n                    view.contentDOM.style.pointerEvents = \"\";\n                }, 100);\n            }, { passive: true });\n        }\n        this.notifiedFocused = view.hasFocus;\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view, plugins) {\n        var _a;\n        let handlers;\n        this.customHandlers = [];\n        for (let plugin of plugins)\n            if (handlers = (_a = plugin.update(view).spec) === null || _a === void 0 ? void 0 : _a.domEventHandlers) {\n                this.customHandlers.push({ plugin: plugin.value, handlers });\n                for (let type in handlers)\n                    if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                        this.registeredEvents.push(type);\n                        view.contentDOM.addEventListener(type, (event) => {\n                            if (!eventBelongsToEditor(view, event))\n                                return;\n                            if (this.runCustomHandlers(type, view, event))\n                                event.preventDefault();\n                        });\n                    }\n            }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        this.lastScrollTop = view.scrollDOM.scrollTop;\n        this.lastScrollLeft = view.scrollDOM.scrollLeft;\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    keydown(view, event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (event.keyCode == 9 && Date.now() < this.lastEscPress + 2000)\n            return true;\n        if (event.keyCode != 27 && modifierCodes.indexOf(event.keyCode) < 0)\n            view.inputState.lastEscPress = 0;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Prevent the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && !event.synthetic && !event.altKey && !event.metaKey &&\n            ((pending = PendingKeys.find(key => key.keyCode == event.keyCode)) && !event.ctrlKey ||\n                EmacsyPendingKeys.indexOf(event.key) > -1 && event.ctrlKey && !event.shiftKey)) {\n            this.pendingIOSKey = pending || event;\n            setTimeout(() => this.flushIOSKey(view), 250);\n            return true;\n        }\n        return false;\n    }\n    flushIOSKey(view) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(view.contentDOM, key.key, key.keyCode);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && !browser.ios && this.compositionPendingKey && Date.now() - this.compositionEndedAt < 100) {\n            this.compositionPendingKey = false;\n            return true;\n        }\n        return false;\n    }\n    mustFlushObserver(event) {\n        return event.type == \"keydown\" && event.keyCode != 229;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\nconst EmacsyPendingKeys = \"dthko\";\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nconst dragScrollMargin = 6;\nfunction dragScrollSpeed(dist) {\n    return Math.max(0, dist) * 0.7 + 8;\n}\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.scrollSpeed = { x: 0, y: 0 };\n        this.scrolling = -1;\n        this.lastEvent = startEvent;\n        this.scrollParent = scrollableParent(view.contentDOM);\n        this.atoms = view.state.facet(atomicRanges).map(f => f(view));\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n    }\n    start(event) {\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            event.preventDefault();\n            this.select(event);\n        }\n    }\n    move(event) {\n        var _a;\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(this.lastEvent = event);\n        let sx = 0, sy = 0;\n        let rect = ((_a = this.scrollParent) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect())\n            || { left: 0, top: 0, right: this.view.win.innerWidth, bottom: this.view.win.innerHeight };\n        let margins = getScrollMargins(this.view);\n        if (event.clientX - margins.left <= rect.left + dragScrollMargin)\n            sx = -dragScrollSpeed(rect.left - event.clientX);\n        else if (event.clientX + margins.right >= rect.right - dragScrollMargin)\n            sx = dragScrollSpeed(event.clientX - rect.right);\n        if (event.clientY - margins.top <= rect.top + dragScrollMargin)\n            sy = -dragScrollSpeed(rect.top - event.clientY);\n        else if (event.clientY + margins.bottom >= rect.bottom - dragScrollMargin)\n            sy = dragScrollSpeed(event.clientY - rect.bottom);\n        this.setScrollSpeed(sx, sy);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        this.setScrollSpeed(0, 0);\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = null;\n    }\n    setScrollSpeed(sx, sy) {\n        this.scrollSpeed = { x: sx, y: sy };\n        if (sx || sy) {\n            if (this.scrolling < 0)\n                this.scrolling = setInterval(() => this.scroll(), 50);\n        }\n        else if (this.scrolling > -1) {\n            clearInterval(this.scrolling);\n            this.scrolling = -1;\n        }\n    }\n    scroll() {\n        if (this.scrollParent) {\n            this.scrollParent.scrollLeft += this.scrollSpeed.x;\n            this.scrollParent.scrollTop += this.scrollSpeed.y;\n        }\n        else {\n            this.view.win.scrollBy(this.scrollSpeed.x, this.scrollSpeed.y);\n        }\n        if (this.dragging === false)\n            this.select(this.lastEvent);\n    }\n    skipAtoms(sel) {\n        let ranges = null;\n        for (let i = 0; i < sel.ranges.length; i++) {\n            let range = sel.ranges[i], updated = null;\n            if (range.empty) {\n                let pos = skipAtomicRanges(this.atoms, range.from, 0);\n                if (pos != range.from)\n                    updated = EditorSelection.cursor(pos, -1);\n            }\n            else {\n                let from = skipAtomicRanges(this.atoms, range.from, -1);\n                let to = skipAtomicRanges(this.atoms, range.to, 1);\n                if (from != range.from || to != range.to)\n                    updated = EditorSelection.range(range.from == range.anchor ? from : to, range.from == range.head ? from : to);\n            }\n            if (updated) {\n                if (!ranges)\n                    ranges = sel.ranges.slice();\n                ranges[i] = updated;\n            }\n        }\n        return ranges ? EditorSelection.create(ranges, sel.mainIndex) : sel;\n    }\n    select(event) {\n        let { view } = this, selection = this.skipAtoms(this.style.get(event, this.extend, this.multiple));\n        if (this.mustSelect || !selection.eq(view.state.selection) ||\n            selection.main.assoc != view.state.selection.main.assoc)\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\"\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (!sel || sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\nconst handlerOptions = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n    if (event.keyCode == 27)\n        view.inputState.lastEscPress = Date.now();\n};\nhandlers.touchstart = (view, e) => {\n    view.inputState.lastTouchTime = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlerOptions.touchstart = handlerOptions.touchmove = { passive: true };\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (view.inputState.lastTouchTime > Date.now() - 2000)\n        return; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = view.root.activeElement != view.contentDOM;\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n        if (mustFocus)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        if (view.inputState.mouseSelection)\n            view.inputState.mouseSelection.start(event);\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, extend, multiple) {\n            let cur = queryPos(view, event), removed;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple && type == 1 && startSel.ranges.length > 1 && (removed = removeRangeAround(startSel, cur.pos)))\n                return removed;\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nfunction removeRangeAround(sel, pos) {\n    for (let i = 0; i < sel.ranges.length; i++) {\n        let { from, to } = sel.ranges[i];\n        if (from <= pos && to >= pos)\n            return EditorSelection.create(sel.ranges.slice(0, i).concat(sel.ranges.slice(i + 1)), sel.mainIndex == i ? 0 : sel.mainIndex - (sel.mainIndex > i ? 1 : 0));\n    }\n    return null;\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = main;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(main.from, main.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nfunction dropText(view, event, text, direct) {\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    if (view.state.readOnly)\n        return event.preventDefault();\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        event.preventDefault();\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n    }\n    else {\n        dropText(view, event, event.dataTransfer.getData(\"Text\"), true);\n    }\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return event.preventDefault();\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\") || data.getData(\"text/uri-text\"));\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n};\nconst isFocusChange = /*@__PURE__*/Annotation.define();\nfunction focusChangeTransaction(state, focus) {\n    let effects = [];\n    for (let getEffect of state.facet(focusChangeEffect)) {\n        let effect = getEffect(state, focus);\n        if (effect)\n            effects.push(effect);\n    }\n    return effects ? state.update({ effects, annotations: isFocusChange.of(true) }) : null;\n}\nfunction updateForFocusChange(view) {\n    setTimeout(() => {\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            let tr = focusChangeTransaction(view.state, focus);\n            if (tr)\n                view.dispatch(tr);\n            else\n                view.update([]);\n        }\n    }, 10);\n}\nhandlers.focus = view => {\n    view.inputState.lastFocusTime = Date.now();\n    // When focusing reset the scroll position, move it back to where it was\n    if (!view.scrollDOM.scrollTop && (view.inputState.lastScrollTop || view.inputState.lastScrollLeft)) {\n        view.scrollDOM.scrollTop = view.inputState.lastScrollTop;\n        view.scrollDOM.scrollLeft = view.inputState.lastScrollLeft;\n    }\n    updateForFocusChange(view);\n};\nhandlers.blur = view => {\n    view.observer.clearSelectionRange();\n    updateForFocusChange(view);\n};\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionPendingKey = true;\n    view.inputState.compositionPendingChange = view.observer.pendingRecords().length > 0;\n    view.inputState.compositionFirstChange = null;\n    if (browser.chrome && browser.android) {\n        // Delay flushing for a bit on Android because it'll often fire a\n        // bunch of contradictory changes in a row at end of compositon\n        view.observer.flushSoon();\n    }\n    else if (view.inputState.compositionPendingChange) {\n        // If we found pending records, schedule a flush.\n        Promise.resolve().then(() => view.observer.flush());\n    }\n    else {\n        // Otherwise, make sure that, if no changes come in soon, the\n        // composition view is cleared.\n        setTimeout(() => {\n            if (view.inputState.composing < 0 && view.docView.compositionDeco.size)\n                view.update([]);\n        }, 50);\n    }\n};\nhandlers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a;\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n};\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\nclass HeightOracle {\n    constructor(lineWrapping) {\n        this.lineWrapping = lineWrapping;\n        this.doc = Text.empty;\n        this.heightSamples = {};\n        this.lineHeight = 14; // The height of an entire line (line-height)\n        this.charWidth = 7;\n        this.textHeight = 14; // The height of the actual font (font-size)\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.max(0, Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength));\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForWrapping(whiteSpace) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, lineHeight, charWidth, textHeight, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping;\n        this.lineWrapping = lineWrapping;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.textHeight = textHeight;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    @internal Weird packed field that holds an array of children\n    for composite blocks, a decoration for block widgets, and a\n    number indicating the amount of widget-create line breaks for\n    text blocks.\n    */\n    _content) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this._content = _content;\n    }\n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    get type() {\n        return typeof this._content == \"number\" ? BlockType.Text :\n            Array.isArray(this._content) ? this._content : this._content.type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    If this is a widget block, this will return the widget\n    associated with it.\n    */\n    get widget() {\n        return this._content instanceof PointDecoration ? this._content.widget : null;\n    }\n    /**\n    If this is a textblock, this holds the number of line breaks\n    that appear in widgets inside the block.\n    */\n    get widgetLineBreaks() {\n        return typeof this._content == \"number\" ? this._content : 0;\n    }\n    /**\n    @internal\n    */\n    join(other) {\n        let content = (Array.isArray(this._content) ? this._content : [this])\n            .concat(Array.isArray(other._content) ? other._content : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, content);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this, doc = oracle.doc;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle.setDoc(oldDoc), 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oracle, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle.setDoc(doc), decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, deco) {\n        super(length, height);\n        this.deco = deco;\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.deco || 0);\n    }\n    lineAt(_value, _type, oracle, top, offset) {\n        return this.blockAt(0, oracle, top, offset);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        if (from <= offset + this.length && to >= offset)\n            f(this.blockAt(0, oracle, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, null);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n        this.breaks = 0; // Number of widget-introduced line breaks on the line\n    }\n    blockAt(_height, _oracle, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.breaks);\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)) +\n                this.breaks * oracle.lineHeight);\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    heightMetrics(oracle, offset) {\n        let firstLine = oracle.doc.lineAt(offset).number, lastLine = oracle.doc.lineAt(offset + this.length).number;\n        let lines = lastLine - firstLine + 1;\n        let perLine, perChar = 0;\n        if (oracle.lineWrapping) {\n            let totalPerLine = Math.min(this.height, oracle.lineHeight * lines);\n            perLine = totalPerLine / lines;\n            if (this.length > lines + 1)\n                perChar = (this.height - totalPerLine) / (this.length - lines - 1);\n        }\n        else {\n            perLine = this.height / lines;\n        }\n        return { firstLine, lastLine, perLine, perChar };\n    }\n    blockAt(height, oracle, top, offset) {\n        let { firstLine, lastLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        if (oracle.lineWrapping) {\n            let guess = offset + Math.round(Math.max(0, Math.min(1, (height - top) / this.height)) * this.length);\n            let line = oracle.doc.lineAt(guess), lineHeight = perLine + line.length * perChar;\n            let lineTop = Math.max(top, height - lineHeight / 2);\n            return new BlockInfo(line.from, line.length, lineTop, lineHeight, 0);\n        }\n        else {\n            let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / perLine)));\n            let { from, length } = oracle.doc.line(firstLine + line);\n            return new BlockInfo(from, length, top + perLine * line, perLine, 0);\n        }\n    }\n    lineAt(value, type, oracle, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, oracle, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = oracle.doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, 0);\n        }\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        let line = oracle.doc.lineAt(value), lineHeight = perLine + line.length * perChar;\n        let linesAbove = line.number - firstLine;\n        let lineTop = top + perLine * linesAbove + perChar * (line.from - offset - linesAbove);\n        return new BlockInfo(line.from, line.length, Math.max(top, Math.min(lineTop, top + this.height - lineHeight)), lineHeight, 0);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        from = Math.max(from, offset);\n        to = Math.min(to, offset + this.length);\n        let { firstLine, perLine, perChar } = this.heightMetrics(oracle, offset);\n        for (let pos = from, lineTop = top; pos <= to;) {\n            let line = oracle.doc.lineAt(pos);\n            if (pos == from) {\n                let linesAbove = line.number - firstLine;\n                lineTop += perLine * linesAbove + perChar * (from - offset - linesAbove);\n            }\n            let lineHeight = perLine + perChar * line.length;\n            f(new BlockInfo(line.from, line.length, lineTop, lineHeight, 0));\n            lineTop += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            if (singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.heightMetrics(oracle, offset).perLine) >= Epsilon)\n                oracle.heightChanged = true;\n            return result;\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, oracle, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, oracle, top, offset)\n            : this.right.blockAt(height, oracle, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, oracle, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, oracle, top, offset)\n            : this.right.lineAt(value, type, oracle, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, oracle, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, oracle, top, offset).join(base);\n    }\n    forEachLine(from, to, oracle, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, oracle, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, oracle, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, oracle, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, oracle, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, oracle, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            let breaks = deco.widget ? deco.widget.lineBreaks : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco));\n            }\n            else if (len || breaks || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, breaks, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        var _a;\n        this.enterLine();\n        let type = (_a = block.deco) === null || _a === void 0 ? void 0 : _a.type;\n        if (type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, breaks, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        line.breaks += breaks;\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let doc = dom.ownerDocument, win = doc.defaultView || window;\n    let left = Math.max(0, rect.left), right = Math.min(win.innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(win.innerHeight, rect.bottom);\n    for (let parent = dom.parentNode; parent && parent != doc.body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = parent == dom.parentNode ? parentRect.bottom : Math.min(bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\nfunction fullPixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    return { left: 0, right: rect.right - rect.left,\n        top: paddingTop, bottom: rect.bottom - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentDOMWidth = 0;\n        this.contentDOMHeight = 0;\n        this.editorHeight = 0;\n        this.editorWidth = 0;\n        this.scrollTop = 0;\n        this.scrolledToBottom = true;\n        // The vertical position (document-relative) to which to anchor the\n        // scroll position. -1 means anchor to the end of the document.\n        this.scrollAnchorPos = 0;\n        // The height at the anchor position. Set by the DOM update phase.\n        // -1 means no height available.\n        this.scrollAnchorHeight = -1;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.defaultTextDirection = Direction.LTR;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        let guessWrapping = state.facet(contentAttributes).some(v => typeof v != \"function\" && v.class == \"cm-lineWrapping\");\n        this.heightOracle = new HeightOracle(guessWrapping);\n        this.stateDeco = state.facet(decorations).filter(d => typeof d != \"function\");\n        this.heightMap = HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.updateViewportLines();\n        this.updateForViewport();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        this.scaler = this.heightMap.height <= 7000000 /* MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle, this.heightMap, this.viewports);\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.heightOracle.setDoc(this.state.doc), 0, 0, block => {\n            this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        this.state = update.state;\n        let prevDeco = this.stateDeco;\n        this.stateDeco = this.state.facet(decorations).filter(d => typeof d != \"function\");\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(prevDeco, this.stateDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        let scrollAnchor = this.scrolledToBottom ? null : this.lineBlockAtHeight(this.scrollTop);\n        this.heightMap = this.heightMap.applyChanges(this.stateDeco, update.startState.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        if (scrollAnchor) {\n            this.scrollAnchorPos = update.changes.mapPos(scrollAnchor.from, -1);\n            this.scrollAnchorHeight = scrollAnchor.top;\n        }\n        else {\n            this.scrollAnchorPos = -1;\n            this.scrollAnchorHeight = this.heightMap.height;\n        }\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let updateLines = !update.changes.empty || (update.flags & 2 /* Height */) ||\n            viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        this.updateForViewport();\n        if (updateLines)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges();\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc &&\n            !update.state.facet(nativeSelectionHidden))\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace;\n        this.defaultTextDirection = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForWrapping(whiteSpace);\n        let domRect = dom.getBoundingClientRect();\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != domRect.height;\n        this.contentDOMHeight = domRect.height;\n        this.mustMeasureContent = false;\n        let result = 0, bias = 0;\n        // Vertical padding\n        let paddingTop = parseInt(style.paddingTop) || 0, paddingBottom = parseInt(style.paddingBottom) || 0;\n        if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n            this.paddingTop = paddingTop;\n            this.paddingBottom = paddingBottom;\n            result |= 8 /* Geometry */ | 2 /* Height */;\n        }\n        if (this.editorWidth != view.scrollDOM.clientWidth) {\n            if (oracle.lineWrapping)\n                measureContent = true;\n            this.editorWidth = view.scrollDOM.clientWidth;\n            result |= 8 /* Geometry */;\n        }\n        if (this.scrollTop != view.scrollDOM.scrollTop) {\n            this.scrollAnchorHeight = -1;\n            this.scrollTop = view.scrollDOM.scrollTop;\n        }\n        this.scrolledToBottom = this.scrollTop > view.scrollDOM.scrollHeight - view.scrollDOM.clientHeight - 4;\n        // Pixel viewport\n        let pixelViewport = (this.printing ? fullPixelRange : visiblePixelRange)(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView && !this.scrollTarget)\n            return 0;\n        let contentWidth = domRect.width;\n        if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight) {\n            this.contentDOMWidth = domRect.width;\n            this.editorHeight = view.scrollDOM.clientHeight;\n            result |= 8 /* Geometry */;\n        }\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights(this.viewport);\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth, textHeight } = view.docView.measureTextSize();\n                refresh = lineHeight > 0 && oracle.refresh(whiteSpace, lineHeight, charWidth, textHeight, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 8 /* Geometry */;\n                }\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            oracle.heightChanged = false;\n            for (let vp of this.viewports) {\n                let heights = vp.from == this.viewport.from ? lineHeights : view.docView.measureVisibleLineHeights(vp);\n                this.heightMap = (refresh ? HeightMap.empty().applyChanges(this.stateDeco, Text.empty, this.heightOracle, [new ChangedRange(0, 0, 0, view.state.doc.length)]) : this.heightMap).updateHeight(oracle, 0, refresh, new MeasuredHeights(vp.from, heights));\n            }\n            if (oracle.heightChanged)\n                result |= 2 /* Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from ||\n                this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange)\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n        this.updateForViewport();\n        if ((result & 2 /* Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > (2000 /* Margin */ << 1))\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps, view));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, oracle = this.heightOracle;\n        let { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* Margin */, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, oracle, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range;\n            if (head < viewport.from || head > viewport.to) {\n                let viewHeight = Math.min(this.editorHeight, this.pixelViewport.bottom - this.pixelViewport.top);\n                let block = map.lineAt(head, QueryType.ByPos, oracle, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* Margin */ / 2, QueryType.ByHeight, oracle, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.heightOracle, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* Margin */ && bottom < visibleBottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current, mayMeasure) {\n        let wrapping = this.heightOracle.lineWrapping;\n        let margin = wrapping ? 10000 /* MarginWrap */ : 2000 /* Margin */, halfMargin = margin >> 1, doubleMargin = margin << 1;\n        // The non-wrapping logic won't work at all in predominantly right-to-left text.\n        if (this.defaultTextDirection != Direction.LTR && !wrapping)\n            return [];\n        let gaps = [];\n        let addGap = (from, to, line, structure) => {\n            if (to - from < halfMargin)\n                return;\n            let sel = this.state.selection.main, avoid = [sel.from];\n            if (!sel.empty)\n                avoid.push(sel.to);\n            for (let pos of avoid) {\n                if (pos > from && pos < to) {\n                    addGap(from, pos - 10 /* SelectionMargin */, line, structure);\n                    addGap(pos + 10 /* SelectionMargin */, to, line, structure);\n                    return;\n                }\n            }\n            let gap = find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                Math.abs(gap.from - from) < halfMargin && Math.abs(gap.to - to) < halfMargin &&\n                !avoid.some(pos => gap.from < pos && gap.to > pos));\n            if (!gap) {\n                // When scrolling down, snap gap ends to line starts to avoid shifts in wrapping\n                if (to < line.to && mayMeasure && wrapping &&\n                    mayMeasure.visibleRanges.some(r => r.from <= to && r.to >= to)) {\n                    let lineStart = mayMeasure.moveToLineBoundary(EditorSelection.cursor(to), false, true).head;\n                    if (lineStart > from)\n                        to = lineStart;\n                }\n                gap = new LineGap(from, to, this.gapSize(line, from, to, structure));\n            }\n            gaps.push(gap);\n        };\n        for (let line of this.viewportLines) {\n            if (line.length < doubleMargin)\n                continue;\n            let structure = lineStructure(line.from, line.to, this.stateDeco);\n            if (structure.total < doubleMargin)\n                continue;\n            let target = this.scrollTarget ? this.scrollTarget.range.head : null;\n            let viewFrom, viewTo;\n            if (wrapping) {\n                let marginHeight = (margin / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                let top, bot;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((this.visibleBottom - this.visibleTop) / 2 + marginHeight) / line.height;\n                    top = targetFrac - spaceFrac;\n                    bot = targetFrac + spaceFrac;\n                }\n                else {\n                    top = (this.visibleTop - line.top - marginHeight) / line.height;\n                    bot = (this.visibleBottom - line.top + marginHeight) / line.height;\n                }\n                viewFrom = findPosition(structure, top);\n                viewTo = findPosition(structure, bot);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = margin * this.heightOracle.charWidth;\n                let left, right;\n                if (target != null) {\n                    let targetFrac = findFraction(structure, target);\n                    let spaceFrac = ((this.pixelViewport.right - this.pixelViewport.left) / 2 + marginWidth) / totalWidth;\n                    left = targetFrac - spaceFrac;\n                    right = targetFrac + spaceFrac;\n                }\n                else {\n                    left = (this.pixelViewport.left - marginWidth) / totalWidth;\n                    right = (this.pixelViewport.right + marginWidth) / totalWidth;\n                }\n                viewFrom = findPosition(structure, left);\n                viewTo = findPosition(structure, right);\n            }\n            if (viewFrom > line.from)\n                addGap(line.from, viewFrom, line, structure);\n            if (viewTo < line.to)\n                addGap(viewTo, line.to, line, structure);\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges() {\n        let deco = this.stateDeco;\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = ranges.length != this.visibleRanges.length ||\n            this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);\n        this.visibleRanges = ranges;\n        return changed ? 4 /* Viewport */ : 0;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.heightOracle, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.heightOracle, 0, 0), this.scaler);\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.heightOracle, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, stateDeco) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(stateDeco, from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(oracle, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, oracle, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, oracle, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block._content) ? block._content.map(b => scaleBlock(b, scaler)) : block._content);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme$1 = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        flexShrink: 0,\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\",\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\",\n        overflowWrap: \"anywhere\",\n        flexShrink: 1\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 6px\"\n    },\n    \".cm-layer\": {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        contain: \"size style\",\n        \"& > *\": {\n            position: \"absolute\"\n        }\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { opacity: 0 }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \".cm-dropCursor\": {\n        position: \"absolute\"\n    },\n    \"&.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor\": {\n        display: \"block\"\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#cceeff44\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#99eeff33\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-gutters\": {\n        flexShrink: 0,\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#6c6c6c\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    },\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-widgetBuffer\": {\n        verticalAlign: \"text-top\",\n        height: \"1em\",\n        width: 0,\n        display: \"inline\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n    },\n    \".cm-highlightSpace:before\": {\n        content: \"attr(data-display)\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        color: \"#888\"\n    },\n    \".cm-highlightTab\": {\n        backgroundImage: `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"200\" height=\"20\"><path stroke=\"%23888\" stroke-width=\"1\" fill=\"none\" d=\"M1 10H196L190 5M190 15L196 10M197 4L197 16\"/></svg>')`,\n        backgroundSize: \"auto 100%\",\n        backgroundPosition: \"right 90%\",\n        backgroundRepeat: \"no-repeat\"\n    },\n    \".cm-trailingSpace\": {\n        backgroundColor: \"#ff332255\"\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nclass DOMChange {\n    constructor(view, start, end, typeOver) {\n        this.typeOver = typeOver;\n        this.bounds = null;\n        this.text = \"\";\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        if (view.state.readOnly && start > -1) {\n            // Ignore changes when the editor is read-only\n            this.newSel = null;\n        }\n        else if (start > -1 && (this.bounds = view.docView.domBoundsAround(start, end, 0))) {\n            let selPoints = iHead || iAnchor ? [] : selectionPoints(view);\n            let reader = new DOMReader(selPoints, view.state);\n            reader.readRange(this.bounds.startDOM, this.bounds.endDOM);\n            this.text = reader.text;\n            this.newSel = selectionFromPoints(selPoints, this.bounds.from);\n        }\n        else {\n            let domSel = view.observer.selectionRange;\n            let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n                !contains(view.contentDOM, domSel.focusNode)\n                ? view.state.selection.main.head\n                : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n            let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n                !contains(view.contentDOM, domSel.anchorNode)\n                ? view.state.selection.main.anchor\n                : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n            this.newSel = EditorSelection.single(anchor, head);\n        }\n    }\n}\nfunction applyDOMChange(view, domChange) {\n    let change;\n    let { newSel } = domChange, sel = view.state.selection.main;\n    let lastKey = view.inputState.lastKeyTime > Date.now() - 100 ? view.inputState.lastKeyCode : -1;\n    if (domChange.bounds) {\n        let { from, to } = domChange.bounds;\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (lastKey === 8 || browser.android && domChange.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.doc.sliceString(from, to, LineBreakPlaceholder), domChange.text, preferredPos - from, preferredSide);\n        if (diff) {\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. DomChange drops one of those.\n            if (browser.chrome && lastKey == 13 &&\n                diff.toB == diff.from + 2 && domChange.text.slice(diff.from, diff.toB) == LineBreakPlaceholder + LineBreakPlaceholder)\n                diff.toB--;\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: Text.of(domChange.text.slice(diff.from, diff.toB).split(LineBreakPlaceholder)) };\n        }\n    }\n    else if (newSel && (!view.hasFocus && view.state.facet(editable) || newSel.main.eq(sel))) {\n        newSel = null;\n    }\n    if (!change && !newSel)\n        return false;\n    if (!change && domChange.typeOver && !sel.empty && newSel && newSel.main.empty) {\n        // Heuristic to notice typing over a selected character\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    }\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4) {\n        // If the change is inside the selection and covers most of it,\n        // assume it is a selection replace (with identical characters at\n        // the start/end not included in the diff)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    }\n    else if ((browser.mac || browser.android) && change && change.from == change.to && change.from == sel.head - 1 &&\n        /^\\. ?$/.test(change.insert.toString()) && view.contentDOM.getAttribute(\"autocorrect\") == \"off\") {\n        // Detect insert-period-on-double-space Mac and Android behavior,\n        // and transform it into a regular space insert.\n        if (newSel && change.insert.length == 2)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    }\n    else if (browser.chrome && change && change.from == change.to && change.from == sel.head &&\n        change.insert.toString() == \"\\n \" && view.lineWrapping) {\n        // In Chrome, if you insert a space at the start of a wrapped\n        // line, it will actually insert a newline and a space, causing a\n        // bogus new line to be created in CodeMirror (#968)\n        if (newSel)\n            newSel = EditorSelection.single(newSel.main.anchor - 1, newSel.main.head - 1);\n        change = { from: sel.from, to: sel.to, insert: Text.of([\" \"]) };\n    }\n    if (change) {\n        let startState = view.state;\n        if (browser.ios && view.inputState.flushIOSKey(view))\n            return true;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events. (Some of these keys are also handled by beforeinput\n        // events and the pendingAndroidKey mechanism, but that's not\n        // reliable in all situations.)\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n                ((change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 ||\n                    lastKey == 8 && change.insert.length < change.to - change.from) &&\n                    dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Delete\", 46))))\n            return true;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return true;\n        if (view.inputState.composing >= 0)\n            view.inputState.composing++;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n            (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&\n            view.inputState.composing < 0) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n        }\n        else {\n            let changes = startState.changes(change);\n            let mainSel = newSel && newSel.main.to <= changes.newLength ? newSel.main : undefined;\n            // Try to apply a composition change to all cursors\n            if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&\n                change.to <= sel.to && change.to >= sel.to - 10) {\n                let replaced = view.state.sliceDoc(change.from, change.to);\n                let compositionRange = compositionSurroundingNode(view) || view.state.doc.lineAt(sel.head);\n                let offset = sel.to - change.to, size = sel.to - sel.from;\n                tr = startState.changeByRange(range => {\n                    if (range.from == sel.from && range.to == sel.to)\n                        return { changes, range: mainSel || range.map(changes) };\n                    let to = range.to - offset, from = to - replaced.length;\n                    if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||\n                        // Unfortunately, there's no way to make multiple\n                        // changes in the same node work without aborting\n                        // composition, so cursors in the composition range are\n                        // ignored.\n                        compositionRange && range.to >= compositionRange.from && range.from <= compositionRange.to)\n                        return { range };\n                    let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;\n                    return {\n                        changes: rangeChanges,\n                        range: !mainSel ? range.map(rangeChanges) :\n                            EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n                    };\n                });\n            }\n            else {\n                tr = {\n                    changes,\n                    selection: mainSel && startState.selection.replaceRange(mainSel)\n                };\n            }\n        }\n        let userEvent = \"input.type\";\n        if (view.composing ||\n            view.inputState.compositionPendingChange && view.inputState.compositionEndedAt > Date.now() - 50) {\n            view.inputState.compositionPendingChange = false;\n            userEvent += \".compose\";\n            if (view.inputState.compositionFirstChange) {\n                userEvent += \".start\";\n                view.inputState.compositionFirstChange = false;\n            }\n        }\n        view.dispatch(tr, { scrollIntoView: true, userEvent });\n        return true;\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view) {\n        this.view = view;\n        this.active = false;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n        this.lastChange = 0;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resizeScroll = null;\n        this.resizeContent = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        this.onResize = this.onResize.bind(this);\n        this.onPrint = this.onPrint.bind(this);\n        this.onScroll = this.onScroll.bind(this);\n        if (typeof ResizeObserver == \"function\") {\n            this.resizeScroll = new ResizeObserver(() => {\n                var _a;\n                if (((_a = this.view.docView) === null || _a === void 0 ? void 0 : _a.lastUpdate) < Date.now() - 75)\n                    this.onResize();\n            });\n            this.resizeScroll.observe(view.scrollDOM);\n            this.resizeContent = new ResizeObserver(() => this.view.requestMeasure());\n            this.resizeContent.observe(view.contentDOM);\n        }\n        this.addWindowListeners(this.win = view.win);\n        this.start();\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, { threshold: [0, .001] });\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n    }\n    onScrollChanged(e) {\n        this.view.inputState.runScrollHandlers(this.view, e);\n        if (this.intersecting)\n            this.view.measure();\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        this.onScrollChanged(e);\n    }\n    onResize() {\n        if (this.resizeTimeout < 0)\n            this.resizeTimeout = setTimeout(() => {\n                this.resizeTimeout = -1;\n                this.view.requestMeasure();\n            }, 50);\n    }\n    onPrint() {\n        this.view.viewState.printing = true;\n        this.view.measure();\n        setTimeout(() => {\n            this.view.viewState.printing = false;\n            this.view.requestMeasure();\n        }, 500);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        let wasChanged = this.selectionChanged;\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event)) {\n            if (!wasChanged)\n                this.selectionChanged = false;\n            return;\n        }\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { view } = this;\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/dev/issues/414\n        let range = browser.safari && view.root.nodeType == 11 &&\n            deepActiveElement(this.dom.ownerDocument) == this.dom &&\n            safariSelectionRangeHack(this.view) || getSelection(view.root);\n        if (!range || this.selectionRange.eq(range))\n            return false;\n        let local = hasSelection(this.dom, range);\n        // Detect the situation where the browser has, on focus, moved the\n        // selection to the start of the content element. Reset it to the\n        // position from the editor state.\n        if (local && !this.selectionChanged &&\n            view.inputState.lastFocusTime > Date.now() - 200 &&\n            view.inputState.lastTouchTime < Date.now() - 300 &&\n            atElementStart(this.dom, range)) {\n            this.view.inputState.lastFocusTime = 0;\n            view.docView.updateSelection();\n            return false;\n        }\n        this.selectionRange.setRange(range);\n        if (local)\n            this.selectionChanged = true;\n        return true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    clearSelectionRange() {\n        this.selectionRange.set(null, 0, null, 0);\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.processRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then tries to flush\n    // them or, if that has no effect, dispatches the given key.\n    delayAndroidKey(key, keyCode) {\n        var _a;\n        if (!this.delayedAndroidKey) {\n            let flush = () => {\n                let key = this.delayedAndroidKey;\n                if (key) {\n                    this.clearDelayedAndroidKey();\n                    this.view.inputState.lastKeyCode = key.keyCode;\n                    this.view.inputState.lastKeyTime = Date.now();\n                    let flushed = this.flush();\n                    if (!flushed && key.force)\n                        dispatchKey(this.dom, key.key, key.keyCode);\n                }\n            };\n            this.flushingAndroidKey = this.view.win.requestAnimationFrame(flush);\n        }\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = {\n                key, keyCode,\n                // Only run the key handler when no changes are detected if\n                // this isn't coming right after another change, in which case\n                // it is probably part of a weird chain of updates, and should\n                // be ignored if it returns the DOM to its previous state.\n                force: this.lastChange < Date.now() - 50 || !!((_a = this.delayedAndroidKey) === null || _a === void 0 ? void 0 : _a.force)\n            };\n    }\n    clearDelayedAndroidKey() {\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n        this.delayedAndroidKey = null;\n        this.flushingAndroidKey = -1;\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = this.view.win.requestAnimationFrame(() => { this.delayedFlush = -1; this.flush(); });\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            this.view.win.cancelAnimationFrame(this.delayedFlush);\n            this.delayedFlush = -1;\n        }\n        this.flush();\n    }\n    pendingRecords() {\n        for (let mut of this.observer.takeRecords())\n            this.queue.push(mut);\n        return this.queue;\n    }\n    processRecords() {\n        let records = this.pendingRecords();\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    readChange() {\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return null;\n        if (from > -1)\n            this.lastChange = Date.now();\n        this.view.inputState.lastFocusTime = 0;\n        this.selectionChanged = false;\n        return new DOMChange(this.view, from, to, typeOver);\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set—the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return false;\n        if (readSelection)\n            this.readSelectionRange();\n        let domChange = this.readChange();\n        if (!domChange)\n            return false;\n        let startState = this.view.state;\n        let handled = applyDOMChange(this.view, domChange);\n        // The view wasn't updated\n        if (this.view.state == startState)\n            this.view.update([]);\n        return handled;\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.dirty |= 4 /* Attrs */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    setWindow(win) {\n        if (win != this.win) {\n            this.removeWindowListeners(this.win);\n            this.win = win;\n            this.addWindowListeners(this.win);\n        }\n    }\n    addWindowListeners(win) {\n        win.addEventListener(\"resize\", this.onResize);\n        win.addEventListener(\"beforeprint\", this.onPrint);\n        win.addEventListener(\"scroll\", this.onScroll);\n        win.document.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    removeWindowListeners(win) {\n        win.removeEventListener(\"scroll\", this.onScroll);\n        win.removeEventListener(\"resize\", this.onResize);\n        win.removeEventListener(\"beforeprint\", this.onPrint);\n        win.document.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resizeScroll) === null || _c === void 0 ? void 0 : _c.disconnect();\n        (_d = this.resizeContent) === null || _d === void 0 ? void 0 : _d.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        this.removeWindowListeners(this.win);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n        this.win.cancelAnimationFrame(this.delayedFlush);\n        this.win.cancelAnimationFrame(this.flushingAndroidKey);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view) {\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    view.dom.ownerDocument.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    if (!found)\n        return null;\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    Construct a new view. You'll want to either provide a `parent`\n    option, or put `view.dom` into your document after creating a\n    view, so that the user can see the editor.\n    */\n    constructor(config = {}) {\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.style.cssText = \"position: fixed; top: -10000px\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this._root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create(config));\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this);\n        this.inputState = new InputState(this);\n        this.inputState.ensureHandlers(this, this.plugins);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method), and at least\n    one change has been made in the current composition.\n    */\n    get composing() { return this.inputState.composing > 0; }\n    /**\n    Indicates whether the user is currently in composing state. Note\n    that on some platforms, like Android, this will be the case a\n    lot, since just putting the cursor on a word starts a\n    composition there.\n    */\n    get compositionStarted() { return this.inputState.composing >= 0; }\n    /**\n    The document or shadow root that the view lives in.\n    */\n    get root() { return this._root; }\n    /**\n    @internal\n    */\n    get win() { return this.dom.ownerDocument.defaultView || window; }\n    dispatch(...input) {\n        let tr = input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input);\n        this._dispatch(tr, this);\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, attrsChanged = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        let focus = this.hasFocus, focusFlag = 0, dispatchFocus = null;\n        if (transactions.some(tr => tr.annotation(isFocusChange))) {\n            this.inputState.notifiedFocused = focus;\n            // If a focus-change transaction is being dispatched, set this update flag.\n            focusFlag = 1 /* Focus */;\n        }\n        else if (focus != this.inputState.notifiedFocused) {\n            this.inputState.notifiedFocused = focus;\n            // Schedule a separate focus transaction if necessary, otherwise\n            // add a flag to this update\n            dispatchFocus = focusChangeTransaction(state, focus);\n            if (!dispatchFocus)\n                focusFlag = 1 /* Focus */;\n        }\n        // If there was a pending DOM change, eagerly read it and try to\n        // apply it after the given transactions.\n        let pendingKey = this.observer.delayedAndroidKey, domChange = null;\n        if (pendingKey) {\n            this.observer.clearDelayedAndroidKey();\n            domChange = this.observer.readChange();\n            // Only try to apply DOM changes if the transactions didn't\n            // change the doc or selection.\n            if (domChange && !this.state.doc.eq(state.doc) || !this.state.selection.eq(state.selection))\n                domChange = null;\n        }\n        else {\n            this.observer.clear();\n        }\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = ViewUpdate.create(this, state, transactions);\n        update.flags |= focusFlag;\n        let scrollTarget = this.viewState.scrollTarget;\n        try {\n            this.updateState = 2 /* Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects)\n                    if (e.is(scrollIntoView))\n                        scrollTarget = e.value;\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            attrsChanged = this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (update.startState.facet(theme) != update.state.facet(theme))\n            this.viewState.mustMeasureContent = true;\n        if (redrawn || attrsChanged || scrollTarget || this.viewState.mustEnforceCursorAssoc || this.viewState.mustMeasureContent)\n            this.requestMeasure();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(update);\n        if (dispatchFocus || domChange)\n            Promise.resolve().then(() => {\n                if (dispatchFocus && this.state == dispatchFocus.startState)\n                    this.dispatch(dispatchFocus);\n                if (domChange) {\n                    if (!applyDOMChange(this, domChange) && pendingKey.force)\n                        dispatchKey(this.contentDOM, pendingKey.key, pendingKey.keyCode);\n                }\n            });\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* Updating */;\n        let hadFocus = this.hasFocus;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this, this.plugins);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (hadFocus)\n            this.focus();\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n            this.inputState.ensureHandlers(this, this.plugins);\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.forceFlush();\n        let updated = null;\n        let sDOM = this.scrollDOM, { scrollAnchorPos, scrollAnchorHeight } = this.viewState;\n        this.viewState.scrollAnchorHeight = -1;\n        if (scrollAnchorHeight < 0 || sDOM.scrollTop != this.viewState.scrollTop) {\n            if (sDOM.scrollTop > sDOM.scrollHeight - sDOM.clientHeight - 4) {\n                scrollAnchorPos = -1;\n                scrollAnchorHeight = this.viewState.heightMap.height;\n            }\n            else {\n                let block = this.viewState.lineBlockAtHeight(sDOM.scrollTop);\n                scrollAnchorPos = block.from;\n                scrollAnchorHeight = block.top;\n            }\n        }\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let oldViewport = this.viewport;\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = ViewUpdate.create(this, this.state, []), redrawn = false, scrolled = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.editorHeight) {\n                    if (this.viewState.scrollTarget) {\n                        this.docView.scrollIntoView(this.viewState.scrollTarget);\n                        this.viewState.scrollTarget = null;\n                        scrolled = true;\n                    }\n                    else if (scrollAnchorHeight > -1) {\n                        let newAnchorHeight = scrollAnchorPos < 0 ? this.viewState.heightMap.height :\n                            this.viewState.lineBlockAt(scrollAnchorPos).top;\n                        let diff = newAnchorHeight - scrollAnchorHeight;\n                        if (diff > 1 || diff < -1) {\n                            sDOM.scrollTop += diff;\n                            scrolled = true;\n                        }\n                    }\n                }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to &&\n                    !scrolled && this.measureRequests.length == 0)\n                    break;\n                scrollAnchorHeight = -1;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        let changed = this.observer.ignore(() => {\n            let changedContent = updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            let changedEditor = updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n            return changedContent || changedEditor;\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n        return changed;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme$1).reverse());\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = this.win.requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (this.measureRequests.indexOf(request) > -1)\n                return;\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.spec != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)).\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height, again interpreted relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop).\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^replace) line breaks, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#state.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. In\n    bidirectional text, the line is traversed in visual order, using\n    the editor's [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n    When the start position was the last one on the line, the\n    returned position will be across the line break. If there is no\n    further line, the original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor's content element.\n    */\n    get textDirection() { return this.viewState.defaultTextDirection; }\n    /**\n    Find the text direction of the block at the given position, as\n    assigned by CSS. If\n    [`perLineTextDirection`](https://codemirror.net/6/docs/ref/#view.EditorView^perLineTextDirection)\n    isn't enabled, or the given position is outside of the viewport,\n    this will always return the same as\n    [`textDirection`](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). Note that\n    this may trigger a DOM layout.\n    */\n    textDirectionAt(pos) {\n        let perLine = this.state.facet(perLineTextDirection);\n        if (!perLine || pos < this.viewport.from || pos > this.viewport.to)\n            return this.textDirection;\n        this.readMeasured();\n        return this.docView.textDirectionAt(pos);\n    }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirectionAt(line.from);\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.text, dir);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (this.dom.ownerDocument.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Update the [root](https://codemirror.net/6/docs/ref/##view.EditorViewConfig.root) in which the editor lives. This is only\n    necessary when moving the editor's existing DOM to a new window or shadow root.\n    */\n    setRoot(root) {\n        if (this._root != root) {\n            this._root = root;\n            this.observer.setWindow((root.nodeType == 9 ? root : root.ownerDocument).defaultView || window);\n            this.mountStyles();\n        }\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            this.win.cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Returns an extension that can be used to add DOM event handlers.\n    The value should be an object mapping event names to handler\n    functions. For any given event, such functions are ordered by\n    extension precedence, and the first handler to return true will\n    be assumed to have handled that event, and no other handlers or\n    built-in behavior will be activated for it. These are registered\n    on the [content element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except\n    for `scroll` handlers, which will be called any time the\n    editor's [scroll element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of\n    its parent nodes is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n    /**\n    Retrieve an editor view instance from the view's DOM\n    representation.\n    */\n    static findFromDOM(dom) {\n        var _a;\n        let content = dom.querySelector(\".cm-content\");\n        let cView = content && ContentView.get(content) || ContentView.get(dom);\n        return ((_a = cView === null || cView === void 0 ? void 0 : cView.rootView) === null || _a === void 0 ? void 0 : _a.view) || null;\n    }\n}\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nThis facet can be used to provide functions that create effects\nto be dispatched when the editor's focus state changes.\n*/\nEditorView.focusChangeEffect = focusChangeEffect;\n/**\nBy default, the editor assumes all its content has the same\n[text direction](https://codemirror.net/6/docs/ref/#view.Direction). Configure this with a `true`\nvalue to make it read the text direction of every (rendered)\nline separately.\n*/\nEditorView.perLineTextDirection = perLineTextDirection;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot have its `contenteditable` attribute set. (Note that this\ndoesn't affect API calls that change the editor content, even\nwhen those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds a\nnew range to the existing selection or replaces it entirely. The\ndefault behavior is to check `event.metaKey` on macOS, and\n`event.ctrlKey` elsewhere.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. Decorations can be provided in two\nways—directly, or via a function that takes an editor view.\n\nOnly decoration sets provided directly are allowed to influence\nthe editor's vertical layout structure. The ones provided as\nfunctions are called _after_ the new viewport has been computed,\nand thus **must not** introduce block widgets or replacing\ndecorations that cover line breaks.\n\nIf you want decorated ranges to behave like atomic units for\ncursor motion and deletion purposes, also provide the range set\ncontaining the decorations to\n[`EditorView.atomicRanges`](https://codemirror.net/6/docs/ref/#view.EditorView^atomicRanges).\n*/\nEditorView.decorations = decorations;\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nEditorView.atomicRanges = atomicRanges;\n/**\nFacet that allows extensions to provide additional scroll\nmargins (space around the sides of the scrolling element that\nshould be considered invisible). This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nEditorView.scrollMargins = scrollMargins;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\nEditorView.darkTheme = darkTheme;\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/Prec.default(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n}));\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be a `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(getKeymap(view.state), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        var _a, _b;\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    run: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, run: ((_b = (_a = scopeObj._any) === null || _a === void 0 ? void 0 : _a.run) === null || _b === void 0 ? void 0 : _b.slice()) || [] });\n        if (command)\n            binding.run.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let scopes = b.scope ? b.scope.split(\" \") : [\"editor\"];\n        if (b.any)\n            for (let scope of scopes) {\n                let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n                if (!scopeObj._any)\n                    scopeObj._any = { preventDefault: false, run: [] };\n                for (let key in scopeObj)\n                    scopeObj[key].run.push(b.any);\n            }\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of scopes) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(map, event, view, scope) {\n    let name = keyName(event);\n    let charCode = codePointAt(name, 0), isChar = codePointSize(charCode) == name.length && name != \" \";\n    let prefix = \"\", fallthrough = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0)\n            storedPrefix = null;\n    }\n    let ran = new Set;\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.run)\n                if (!ran.has(cmd)) {\n                    ran.add(cmd);\n                    if (cmd(view, event))\n                        return true;\n                }\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName, shiftName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.altKey || event.metaKey || event.ctrlKey) &&\n            // Ctrl-Alt may be used for AltGr on Windows\n            !(browser.windows && event.ctrlKey && event.altKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n            else if (event.shiftKey && (shiftName = shift[event.keyCode]) != name && shiftName != baseName &&\n                runFor(scopeObj[prefix + modifiers(shiftName, event, false)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n        if (runFor(scopeObj._any))\n            return true;\n    }\n    return fallthrough;\n}\n\n/**\nImplementation of [`LayerMarker`](https://codemirror.net/6/docs/ref/#view.LayerMarker) that creates\na rectangle at a given set of coordinates.\n*/\nclass RectangleMarker {\n    /**\n    Create a marker with the given class and dimensions. If `width`\n    is null, the DOM element will get no width style.\n    */\n    constructor(className, left, top, width, height) {\n        this.className = className;\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    update(elt, prev) {\n        if (prev.className != this.className)\n            return false;\n        this.adjust(elt);\n        return true;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width != null)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n    /**\n    Create a set of rectangles for the given selection range,\n    assigning them theclass`className`. Will create a single\n    rectangle for empty ranges, and a set of selection-style\n    rectangles covering the range's content (in a bidi-aware\n    way) for non-empty ones.\n    */\n    static forRange(view, className, range) {\n        if (range.empty) {\n            let pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (!pos)\n                return [];\n            let base = getBase(view);\n            return [new RectangleMarker(className, pos.left - base.left, pos.top - base.top, null, pos.bottom - pos.top)];\n        }\n        else {\n            return rectanglesForRange(view, className, range);\n        }\n    }\n}\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n    return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),\n        type: BlockType.Text };\n}\nfunction rectanglesForRange(view, className, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineElt = content.querySelector(\".cm-line\"), lineStyle = lineElt && window.getComputedStyle(lineElt);\n    let leftSide = contentRect.left +\n        (lineStyle ? parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent)) : 0);\n    let rightSide = contentRect.right - (lineStyle ? parseInt(lineStyle.paddingRight) : 0);\n    let startBlock = blockAt(view, from), endBlock = blockAt(view, to);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (visualStart && (view.lineWrapping || startBlock.widgetLineBreaks))\n        visualStart = wrappedLine(view, from, visualStart);\n    if (visualEnd && (view.lineWrapping || endBlock.widgetLineBreaks))\n        visualEnd = wrappedLine(view, to, visualEnd);\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - (visualStart && visualEnd ? 1 : 0) ||\n            startBlock.widgetLineBreaks > 1 && top.bottom + view.defaultLineHeight / 2 < bottom.top)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new RectangleMarker(className, left - base.left, top - base.top - 0.01 /* Epsilon */, right - left, bottom - top + 0.01 /* Epsilon */);\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            if (!fromCoords || !toCoords)\n                return;\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction sameMarker(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nclass LayerView {\n    constructor(view, layer) {\n        this.view = view;\n        this.layer = layer;\n        this.drawn = [];\n        this.measureReq = { read: this.measure.bind(this), write: this.draw.bind(this) };\n        this.dom = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.dom.classList.add(\"cm-layer\");\n        if (layer.above)\n            this.dom.classList.add(\"cm-layer-above\");\n        if (layer.class)\n            this.dom.classList.add(layer.class);\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.setOrder(view.state);\n        view.requestMeasure(this.measureReq);\n        if (layer.mount)\n            layer.mount(this.dom, view);\n    }\n    update(update) {\n        if (update.startState.facet(layerOrder) != update.state.facet(layerOrder))\n            this.setOrder(update.state);\n        if (this.layer.update(update, this.dom) || update.geometryChanged)\n            update.view.requestMeasure(this.measureReq);\n    }\n    setOrder(state) {\n        let pos = 0, order = state.facet(layerOrder);\n        while (pos < order.length && order[pos] != this.layer)\n            pos++;\n        this.dom.style.zIndex = String((this.layer.above ? 150 : -1) - pos);\n    }\n    measure() {\n        return this.layer.markers(this.view);\n    }\n    draw(markers) {\n        if (markers.length != this.drawn.length || markers.some((p, i) => !sameMarker(p, this.drawn[i]))) {\n            let old = this.dom.firstChild, oldI = 0;\n            for (let marker of markers) {\n                if (marker.update && old && marker.constructor && this.drawn[oldI].constructor &&\n                    marker.update(old, this.drawn[oldI])) {\n                    old = old.nextSibling;\n                    oldI++;\n                }\n                else {\n                    this.dom.insertBefore(marker.draw(), old);\n                }\n            }\n            while (old) {\n                let next = old.nextSibling;\n                old.remove();\n                old = next;\n            }\n            this.drawn = markers;\n        }\n    }\n    destroy() {\n        if (this.layer.destroy)\n            this.layer.destroy(this.dom, this.view);\n        this.dom.remove();\n    }\n}\nconst layerOrder = /*@__PURE__*/Facet.define();\n/**\nDefine a layer.\n*/\nfunction layer(config) {\n    return [\n        ViewPlugin.define(v => new LayerView(v, config)),\n        layerOrder.of(config)\n    ];\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        cursorLayer,\n        selectionLayer,\n        hideNativeSelection,\n        nativeSelectionHidden.of(true)\n    ];\n}\nfunction configChanged(update) {\n    return update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n}\nconst cursorLayer = /*@__PURE__*/layer({\n    above: true,\n    markers(view) {\n        let { state } = view, conf = state.facet(selectionConfig);\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let className = prim ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\";\n                let cursor = r.empty ? r : EditorSelection.cursor(r.head, r.head > r.anchor ? -1 : 1);\n                for (let piece of RectangleMarker.forRange(view, className, cursor))\n                    cursors.push(piece);\n            }\n        }\n        return cursors;\n    },\n    update(update, dom) {\n        if (update.transactions.some(tr => tr.selection))\n            dom.style.animationName = dom.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        let confChange = configChanged(update);\n        if (confChange)\n            setBlinkRate(update.state, dom);\n        return update.docChanged || update.selectionSet || confChange;\n    },\n    mount(dom, view) {\n        setBlinkRate(view.state, dom);\n    },\n    class: \"cm-cursorLayer\"\n});\nfunction setBlinkRate(state, dom) {\n    dom.style.animationDuration = state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n}\nconst selectionLayer = /*@__PURE__*/layer({\n    above: false,\n    markers(view) {\n        return view.state.selection.ranges.map(r => r.empty ? [] : RectangleMarker.forRange(view, \"cm-selectionBackground\", r))\n            .reduce((a, b) => a.concat(b));\n    },\n    update(update, dom) {\n        return update.docChanged || update.selectionSet || update.viewportChanged || configChanged(update);\n    },\n    class: \"cm-selectionLayer\"\n});\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec[\".cm-line\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let pos = this.view.state.field(dropCursorPos);\n        let rect = pos != null && this.view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = this.view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,\n            top: rect.top - outer.top + this.view.scrollDOM.scrollTop,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            if (pos) {\n                this.cursor.style.left = pos.left + \"px\";\n                this.cursor.style.top = pos.top + \"px\";\n                this.cursor.style.height = pos.height + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventHandlers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, m);\n    }\n}\nfunction matchRanges(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        const { regexp, decoration, decorate, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        if (decorate) {\n            this.addMatch = (match, view, from, add) => decorate(add, from, from + match[0].length, match, view);\n        }\n        else if (typeof decoration == \"function\") {\n            this.addMatch = (match, view, from, add) => {\n                let deco = decoration(match, view, from);\n                if (deco)\n                    add(from, from + match[0].length, deco);\n            };\n        }\n        else if (decoration) {\n            this.addMatch = (match, _view, from, add) => add(from, from + match[0].length, decoration);\n        }\n        else {\n            throw new RangeError(\"Either 'decorate' or 'decoration' should be provided to MatchDecorator\");\n        }\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder(), add = build.add.bind(build);\n        for (let { from, to } of matchRanges(view, this.maxLength))\n            iterMatches(view.state.doc, this.regexp, from, to, (from, m) => this.addMatch(m, view, from, add));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to > update.view.viewport.from && from < update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportChanged || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                let add = (from, to, deco) => ranges.push(deco.range(from, to));\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from)\n                        this.addMatch(m, view, m.index + fromLine.from, add);\n                }\n                else {\n                    iterMatches(view.state.doc, this.regexp, start, end, (from, m) => this.addMatch(m, view, from, add));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\u2066\\u2067\\u2069\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8294: \"left-to-right isolate\",\n    8295: \"right-to-left isolate\",\n    8297: \"pop directional isolate\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor() {\n        this.height = 1000;\n        this.attrs = { style: \"padding-bottom: 1000px\" };\n    }\n    update(update) {\n        let { view } = update;\n        let height = view.viewState.editorHeight - view.defaultLineHeight - view.documentPadding.top - 0.5;\n        if (height != this.height) {\n            this.height = height;\n            this.attrs = { style: `padding-bottom: ${height}px` };\n        }\n    }\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\nfunction scrollPastEnd() {\n    return [plugin, contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null; })];\n}\n\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\nfunction highlightActiveLine() {\n    return activeLineHighlighter;\n}\nconst lineDeco = /*@__PURE__*/Decoration.line({ class: \"cm-activeLine\" });\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            let line = view.lineBlockAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    coordsAt(dom) {\n        let rects = dom.firstChild ? clientRectsFor(dom.firstChild) : [];\n        if (!rects.length)\n            return null;\n        let style = window.getComputedStyle(dom.parentNode);\n        let rect = flattenRect(rects[0], style.direction != \"rtl\");\n        let lineHeight = parseInt(style.lineHeight);\n        if (rect.bottom - rect.top > lineHeight * 1.5)\n            return { left: rect.left, right: rect.right, top: rect.top, bottom: rect.top + lineHeight };\n        return rect;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            let start = findColumn(line.text, startCol, state.tabSize, true);\n            if (start < 0) {\n                ranges.push(EditorSelection.cursor(line.to));\n            }\n            else {\n                let end = findColumn(line.text, endCol, state.tabSize);\n                ranges.push(EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\nconst keys = {\n    Alt: [18, e => !!e.altKey],\n    Control: [17, e => !!e.ctrlKey],\n    Shift: [16, e => !!e.shiftKey],\n    Meta: [91, e => !!e.metaKey]\n};\nconst showCrosshair = { style: \"cursor: crosshair\" };\n/**\nReturns an extension that turns the pointer cursor into a\ncrosshair when a given modifier key, defaulting to Alt, is held\ndown. Can serve as a visual hint that rectangular selection is\ngoing to happen when paired with\n[`rectangularSelection`](https://codemirror.net/6/docs/ref/#view.rectangularSelection).\n*/\nfunction crosshairCursor(options = {}) {\n    let [code, getter] = keys[options.key || \"Alt\"];\n    let plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.isDown = false;\n        }\n        set(isDown) {\n            if (this.isDown != isDown) {\n                this.isDown = isDown;\n                this.view.update([]);\n            }\n        }\n    }, {\n        eventHandlers: {\n            keydown(e) {\n                this.set(e.keyCode == code || getter(e));\n            },\n            keyup(e) {\n                if (e.keyCode == code || !getter(e))\n                    this.set(false);\n            },\n            mousemove(e) {\n                this.set(getter(e));\n            }\n        }\n    });\n    return [\n        plugin,\n        EditorView.contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.isDown) ? showCrosshair : null; })\n    ];\n}\n\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        this.tooltipViews = this.tooltips.map(createTooltipView);\n    }\n    update(update) {\n        var _a;\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [];\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip);\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0) {\n                t.dom.remove();\n                (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n            }\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\n/**\nCreates an extension that configures tooltip behavior.\n*/\nfunction tooltips(config = {}) {\n    return tooltipConfig.of(config);\n}\nfunction windowSpace(view) {\n    let { win } = view;\n    return { top: 0, left: 0, bottom: win.innerHeight, right: win.innerWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: browser.ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst knownHeight = /*@__PURE__*/new WeakMap();\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.lastTransaction = 0;\n        this.measureTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.measureSoon();\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        view.win.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    measureSoon() {\n        if (this.measureTimeout < 0)\n            this.measureTimeout = setTimeout(() => {\n                this.measureTimeout = -1;\n                this.maybeMeasure();\n            }, 50);\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\".cm-tooltip > .cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        this.container.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        var _a, _b;\n        this.view.win.removeEventListener(\"resize\", this.measureSoon);\n        for (let tooltipView of this.manager.tooltipViews) {\n            tooltipView.dom.remove();\n            (_a = tooltipView.destroy) === null || _a === void 0 ? void 0 : _a.call(tooltipView);\n        }\n        (_b = this.intersectionObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n        clearTimeout(this.measureTimeout);\n    }\n    readMeasure() {\n        let editor = this.view.dom.getBoundingClientRect();\n        return {\n            editor,\n            parent: this.parent ? this.container.getBoundingClientRect() : editor,\n            pos: this.manager.tooltips.map((t, i) => {\n                let tv = this.manager.tooltipViews[i];\n                return tv.getCoords ? tv.getCoords(t.pos) : this.view.coordsAtPos(t.pos);\n            }),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n        };\n    }\n    writeMeasure(measured) {\n        var _a;\n        let { editor, space } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= Math.max(editor.top, space.top) ||\n                pos.top >= Math.min(editor.bottom, space.bottom) ||\n                pos.right < Math.max(editor.left, space.left) - .1 ||\n                pos.left > Math.min(editor.right, space.right) + .1) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Size */ : 0;\n            let width = size.right - size.left, height = (_a = knownHeight.get(tView)) !== null && _a !== void 0 ? _a : size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.min(pos.left - (arrow ? 14 /* Offset */ : 0) + offset.x, space.right - width)\n                    : Math.max(space.left, pos.left - width + (arrow ? 14 /* Offset */ : 0) - offset.x);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide && (above\n                ? pos.top - (size.bottom - size.top) - offset.y < space.top\n                : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = !above;\n            let spaceVert = (above ? pos.top - space.top : space.bottom - pos.bottom) - arrowHeight;\n            if (spaceVert < height && tView.resize !== false) {\n                if (spaceVert < this.view.defaultLineHeight) {\n                    dom.style.top = Outside;\n                    continue;\n                }\n                knownHeight.set(tView, height);\n                dom.style.height = (height = spaceVert) + \"px\";\n            }\n            else if (dom.style.height) {\n                dom.style.height = \"\";\n            }\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            if (tView.overlap !== true)\n                for (let r of others)\n                    if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                        top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) + \"px\";\n                dom.style.left = (left - measured.parent.left) + \"px\";\n            }\n            else {\n                dom.style.top = top + \"px\";\n                dom.style.left = left + \"px\";\n            }\n            if (arrow)\n                arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Offset */ - 7 /* Size */)}px`;\n            if (tView.overlap !== true)\n                others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned(measured.space);\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 100,\n        boxSizing: \"border-box\"\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Size */}px`,\n        width: `${7 /* Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Size */}px solid transparent`,\n            borderRight: `${7 /* Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nFacet to which an extension can add a value to show a tooltip.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define();\nclass HoverTooltipHost {\n    constructor(view) {\n        this.view = view;\n        this.mounted = false;\n        this.dom = document.createElement(\"div\");\n        this.dom.classList.add(\"cm-tooltip-hover\");\n        this.manager = new TooltipViewManager(view, showHoverTooltip, t => this.createHostedView(t));\n    }\n    // Needs to be static so that host tooltip instances always match\n    static create(view) {\n        return new HoverTooltipHost(view);\n    }\n    createHostedView(tooltip) {\n        let hostedView = tooltip.create(this.view);\n        hostedView.dom.classList.add(\"cm-tooltip-section\");\n        this.dom.appendChild(hostedView.dom);\n        if (this.mounted && hostedView.mount)\n            hostedView.mount(this.view);\n        return hostedView;\n    }\n    mount(view) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.mount)\n                hostedView.mount(view);\n        }\n        this.mounted = true;\n    }\n    positioned(space) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.positioned)\n                hostedView.positioned(space);\n        }\n    }\n    update(update) {\n        this.manager.update(update);\n    }\n    destroy() {\n        var _a;\n        for (let t of this.manager.tooltipViews)\n            (_a = t.destroy) === null || _a === void 0 ? void 0 : _a.call(t);\n    }\n}\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n    let tooltips = state.facet(showHoverTooltip).filter(t => t);\n    if (tooltips.length === 0)\n        return null;\n    return {\n        pos: Math.min(...tooltips.map(t => t.pos)),\n        end: Math.max(...tooltips.filter(t => t.end != null).map(t => t.end)),\n        create: HoverTooltipHost.create,\n        above: tooltips[0].above,\n        arrow: tooltips.some(t => t.arrow),\n    };\n});\nclass HoverPlugin {\n    constructor(view, source, field, setHover, hoverTime) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.hoverTime = hoverTime;\n        this.hoverTimeout = -1;\n        this.restartTimeout = -1;\n        this.pending = null;\n        this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    update() {\n        if (this.pending) {\n            this.pending = null;\n            clearTimeout(this.restartTimeout);\n            this.restartTimeout = setTimeout(() => this.startHover(), 20);\n        }\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (this.active)\n            return;\n        let hovered = Date.now() - this.lastMove.time;\n        if (hovered < this.hoverTime)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);\n        else\n            this.startHover();\n    }\n    startHover() {\n        clearTimeout(this.restartTimeout);\n        let { lastMove } = this;\n        let pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;\n        if (pos == null)\n            return;\n        let posCoords = this.view.coordsAtPos(pos);\n        if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||\n            lastMove.x < posCoords.left - this.view.defaultCharacterWidth ||\n            lastMove.x > posCoords.right + this.view.defaultCharacterWidth)\n            return;\n        let bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n        let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n        let open = this.source(this.view, pos, (lastMove.x < posCoords.left ? -rtl : rtl));\n        if (open === null || open === void 0 ? void 0 : open.then) {\n            let pending = this.pending = { pos };\n            open.then(result => {\n                if (this.pending == pending) {\n                    this.pending = null;\n                    if (result)\n                        this.view.dispatch({ effects: this.setHover.of(result) });\n                }\n            }, e => logException(this.view.state, e, \"hover tooltip\"));\n        }\n        else if (open) {\n            this.view.dispatch({ effects: this.setHover.of(open) });\n        }\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {\n            let { pos } = tooltip || this.pending, end = (_a = tooltip === null || tooltip === void 0 ? void 0 : tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, 6 /* MaxDist */))) {\n                this.view.dispatch({ effects: this.setHover.of(null) });\n                this.pending = null;\n            }\n        }\n    }\n    mouseleave(e) {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = -1;\n        if (this.active && !isInTooltip(e.relatedTarget))\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    range.detach();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/**\nSet up a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos`, return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n*/\nfunction hoverTooltip(source, options = {}) {\n    let setHover = StateEffect.define();\n    let hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection) ||\n                options.hideOn && options.hideOn(tr, value)))\n                return null;\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                value = copy;\n            }\n            for (let effect of tr.effects) {\n                if (effect.is(setHover))\n                    value = effect.value;\n                if (effect.is(closeHoverTooltipEffect))\n                    value = null;\n            }\n            return value;\n        },\n        provide: f => showHoverTooltip.from(f)\n    });\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, options.hoverTime || 300 /* Time */)),\n        showHoverTooltipHost\n    ];\n}\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\nfunction getTooltip(view, tooltip) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (!plugin)\n        return null;\n    let found = plugin.manager.tooltips.indexOf(tooltip);\n    return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\nfunction hasHoverTooltips(state) {\n    return state.facet(showHoverTooltip).some(x => x);\n}\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\nfunction repositionTooltips(view) {\n    var _a;\n    (_a = view.plugin(tooltipPlugin)) === null || _a === void 0 ? void 0 : _a.maybeMeasure();\n}\n\nconst panelConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        return value && { top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() };\n    })\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        for (let p of this.panels)\n            if (p.destroy && panels.indexOf(p) < 0)\n                p.destroy();\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ?\n                this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :\n                Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = /*@__PURE__*/Facet.define({\n    enables: panelPlugin\n});\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#view.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#view.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    widgetMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged)\n            this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            if (classSet.length)\n                classSet = [];\n            if (Array.isArray(line.type)) {\n                let first = true;\n                for (let b of line.type) {\n                    if (b.type == BlockType.Text && first) {\n                        advanceCursor(lineClasses, classSet, b.from);\n                        for (let cx of contexts)\n                            cx.line(this.view, b, classSet);\n                        first = false;\n                    }\n                    else if (b.widget) {\n                        for (let cx of contexts)\n                            cx.widget(this.view, b);\n                    }\n                }\n            }\n            else if (line.type == BlockType.Text) {\n                advanceCursor(lineClasses, classSet, line.from);\n                for (let cx of contexts)\n                    cx.line(this.view, line, classSet);\n            }\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: plugin => EditorView.scrollMargins.of(view => {\n        let value = view.plugin(plugin);\n        if (!value || value.gutters.length == 0 || !value.fixed)\n            return null;\n        return view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    addElement(view, block, markers) {\n        let { gutter } = this, above = block.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, block.height, above, markers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, block.height, above, markers);\n        }\n        this.height = block.bottom;\n        this.i++;\n    }\n    line(view, line, extraMarkers) {\n        let localMarkers = [];\n        advanceCursor(this.cursor, localMarkers, line.from);\n        if (extraMarkers.length)\n            localMarkers = localMarkers.concat(extraMarkers);\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        this.addElement(view, line, localMarkers);\n    }\n    widget(view, block) {\n        let marker = this.gutter.config.widgetMarker(view, block.widget, block);\n        if (marker)\n            this.addElement(view, block, [marker]);\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let target = event.target, y;\n                if (target != this.dom && this.dom.contains(target)) {\n                    while (target.parentNode != this.dom)\n                        target = target.parentNode;\n                    let rect = target.getBoundingClientRect();\n                    y = (rect.top + rect.bottom) / 2;\n                }\n                else {\n                    y = event.clientY;\n                }\n                let line = view.lineBlockAtHeight(y - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutterElement\";\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    widgetMarker: () => null,\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges) {\n        let linePos = state.doc.lineAt(range.head).from;\n        if (linePos > last) {\n            last = linePos;\n            marks.push(activeLineGutterMarker.range(linePos));\n        }\n    }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\nconst WhitespaceDeco = /*@__PURE__*/new Map();\nfunction getWhitespaceDeco(space) {\n    let deco = WhitespaceDeco.get(space);\n    if (!deco)\n        WhitespaceDeco.set(space, deco = Decoration.mark({\n            attributes: space === \"\\t\" ? {\n                class: \"cm-highlightTab\",\n            } : {\n                class: \"cm-highlightSpace\",\n                \"data-display\": space.replace(/ /g, \"·\")\n            }\n        }));\n    return deco;\n}\nfunction matcher(decorator) {\n    return ViewPlugin.define(view => ({\n        decorations: decorator.createDeco(view),\n        update(u) {\n            this.decorations = decorator.updateDeco(u, this.decorations);\n        },\n    }), {\n        decorations: v => v.decorations\n    });\n}\nconst whitespaceHighlighter = /*@__PURE__*/matcher(/*@__PURE__*/new MatchDecorator({\n    regexp: /\\t| +/g,\n    decoration: match => getWhitespaceDeco(match[0]),\n    boundary: /\\S/,\n}));\n/**\nReturns an extension that highlights whitespace, adding a\n`cm-highlightSpace` class to stretches of spaces, and a\n`cm-highlightTab` class to individual tab characters. By default,\nthe former are shown as faint dots, and the latter as arrows.\n*/\nfunction highlightWhitespace() {\n    return whitespaceHighlighter;\n}\nconst trailingHighlighter = /*@__PURE__*/matcher(/*@__PURE__*/new MatchDecorator({\n    regexp: /\\s+$/g,\n    decoration: /*@__PURE__*/Decoration.mark({ class: \"cm-trailingSpace\" }),\n    boundary: /\\S/,\n}));\n/**\nReturns an extension that adds a `cm-trailingSpace` class to all\ntrailing whitespace.\n*/\nfunction highlightTrailingWhitespace() {\n    return trailingHighlighter;\n}\n\n/**\n@internal\n*/\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, GutterMarker, MatchDecorator, RectangleMarker, ViewPlugin, ViewUpdate, WidgetType, __test, closeHoverTooltips, crosshairCursor, drawSelection, dropCursor, getPanel, getTooltip, gutter, gutterLineClass, gutters, hasHoverTooltips, highlightActiveLine, highlightActiveLineGutter, highlightSpecialChars, highlightTrailingWhitespace, highlightWhitespace, hoverTooltip, keymap, layer, lineNumberMarkers, lineNumbers, logException, panels, placeholder, rectangularSelection, repositionTooltips, runScopeHandlers, scrollPastEnd, showPanel, showTooltip, tooltips };\n","// FIXME profile adding a per-Tree TreeNode cache, validating it by\n// parent pointer\n/// The default maximum length of a `TreeBuffer` node.\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/// Each [node type](#common.NodeType) or [individual tree](#common.Tree)\n/// can have metadata associated with it in props. Instances of this\n/// class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type.\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#common.NodeSet.extend) or\n    /// [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    /// prop values for each node type in the set. Takes a [match\n    /// object](#common.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The hash of the [context](#lr.ContextTracker.constructor)\n/// that the node was parsed in, if any. Used to limit reuse of\n/// contextual nodes.\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/// The distance beyond the end of the node that the tokenizer\n/// looked ahead for any of the tokens inside the node. (The LR\n/// parser only stores this when it is larger than 25, for\n/// efficiency reasons.)\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/// This per-node prop is used to replace a given node, or part of a\n/// node, with another tree. This is useful to include trees from\n/// different languages in mixed-language parsers.\nNodeProp.mounted = new NodeProp({ perNode: true });\n/// A mounted tree, which can be [stored](#common.NodeProp^mounted) on\n/// a tree node to indicate that parts of its content are\n/// represented by another tree.\nclass MountedTree {\n    constructor(\n    /// The inner tree.\n    tree, \n    /// If this is null, this tree replaces the entire node (it will\n    /// be included in the regular iteration instead of its host\n    /// node). If not, only the given ranges are considered to be\n    /// covered by this tree. This is used for trees that are mixed in\n    /// a way that isn't strictly hierarchical. Such mounted trees are\n    /// only entered by [`resolveInner`](#common.Tree.resolveInner)\n    /// and [`enter`](#common.SyntaxNode.enter).\n    overlay, \n    /// The parser used to create this subtree.\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n}\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /// Define a node type.\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#common.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#common.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a numeric array. Each parser\n/// [has](#lr.LRParser.nodeSet) a node set, and [tree\n/// buffers](#common.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536) node\n/// types in it, so that the ids fit into 16-bit typed array slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method can be created with\n    /// [`NodeProp.add`](#common.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/// Options that control iteration. Can be combined with the `|`\n/// operator to enable multiple ones.\nvar IterMode;\n(function (IterMode) {\n    /// When enabled, iteration will only visit [`Tree`](#common.Tree)\n    /// objects, not nodes packed into\n    /// [`TreeBuffer`](#common.TreeBuffer)s.\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /// Enable this to make iteration include anonymous nodes (such as\n    /// the nodes that wrap repeated grammar constructs into a balanced\n    /// tree).\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /// By default, regular [mounted](#common.NodeProp^mounted) nodes\n    /// replace their base node in iteration. Enable this to ignore them\n    /// instead.\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /// This option only applies in\n    /// [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    /// library to not enter mounted overlays if one covers the given\n    /// position.\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the [`TreeCursor`](#common.TreeCursor) or\n/// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\n/// a view on some part of this data structure, and can be used to\n/// move around to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    constructor(\n    /// The type of the top node.\n    type, \n    /// This node's child nodes.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length, \n    /// Per-node [node props](#common.NodeProp) to associate with this node.\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /// @internal\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /// @internal\n    toString() {\n        let mounted = this.prop(NodeProp.mounted);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    /// the tree. Mode can be used to [control](#common.IterMode) which\n    /// nodes the cursor visits.\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /// Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    /// at the given position and side (see\n    /// [`moveTo`](#common.TreeCursor.moveTo).\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /// Get a [syntax node](#common.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#common.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    ///\n    /// Note that this will not enter\n    /// [overlays](#common.MountedTree.overlay), and you often want\n    /// [`resolveInner`](#common.Tree.resolveInner) instead.\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /// Like [`resolve`](#common.Tree.resolve), but will enter\n    /// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    /// pointing into the innermost overlaid tree at the given position\n    /// (with parent links going through all parent structure, including\n    /// the host trees).\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, that node will\n    /// not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /// Get the value of the given [node prop](#common.NodeProp) for this\n    /// node. Works with both per-node and per-type props.\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /// Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    /// format that can be passed to the [`Tree`](#common.Tree)\n    /// constructor.\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /// Balance the direct children of this tree, producing a copy of\n    /// which may have children grouped into subtrees with type\n    /// [`NodeType.none`](#common.NodeType^none).\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it).\nclass TreeBuffer {\n    /// Create a tree buffer.\n    constructor(\n    /// The buffer's content.\n    buffer, \n    /// The total length of the group of nodes in the buffer.\n    length, \n    /// The node set used in this buffer.\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /// @internal\n    get type() { return NodeType.none; }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /// @internal\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction enterUnfinishedNodesBefore(node, pos) {\n    let scan = node.childBefore(pos);\n    while (scan) {\n        let last = scan.lastChild;\n        if (!last || last.to != scan.to)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            node = scan;\n            scan = last.prevSibling;\n        }\n        else {\n            scan = last;\n        }\n    }\n    return node;\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass TreeNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) &&\n                        next.props && (mounted = next.prop(NodeProp.mounted)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = this._tree.prop(NodeProp.mounted)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this._tree.toString(); }\n    get node() { return this; }\n    matchContext(context) { return matchNodeContext(this, context); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node.parent; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    get node() { return this; }\n    matchContext(context) { return matchNodeContext(this, context); }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    /// @internal\n    constructor(node, \n    /// @internal\n    mode = 0) {\n        this.mode = mode;\n        /// @internal\n        this.buffer = null;\n        this.stack = [];\n        /// @internal\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /// Move the cursor to the first child that ends after `pos`.\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /// Move to the last child that starts before `pos`.\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /// Move the cursor to the child around `pos`. If side is -1 the\n    /// child may end at that position, when 1 it may start there. This\n    /// will also enter [overlaid](#common.MountedTree.overlay)\n    /// [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    /// set to false.\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /// Move to the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty or `enter` is false, its next sibling or\n    /// the next sibling of the first parent node that has one.\n    next(enter = true) { return this.move(1, enter); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by its last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev(enter = true) { return this.move(-1, enter); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /// Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#common.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#common.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /// Iterate over the current node and all its descendants, calling\n    /// `enter` when entering a node and `leave`, if given, when leaving\n    /// one. When `enter` returns `false`, any children of that node are\n    /// skipped, and `leave` isn't called for it.\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (this.nextSibling())\n                    break;\n                if (!depth)\n                    return;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Test whether the current node matches a given context—a sequence\n    /// of direct parent node names. Empty strings in the context array\n    /// are treated as wildcards.\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this.node, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/// Provides a way to associate values with pieces of trees. As long\n/// as that part of the tree is reused, the associated values can be\n/// retrieved from an updated tree.\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /// Set the value for this syntax node.\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /// Retrieve value for this syntax node, if it exists in the map.\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /// Set the value for the node that a cursor currently points to.\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /// Retrieve the value for the node that a cursor currently points\n    /// to.\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/// Tree fragments are used during [incremental\n/// parsing](#common.Parser.startParse) to track parts of old trees\n/// that can be reused in a new parse. An array of fragments is used\n/// to track regions of an old tree whose nodes might be reused in new\n/// parses. Use the static\n/// [`applyChanges`](#common.TreeFragment^applyChanges) method to\n/// update fragments for document changes.\nclass TreeFragment {\n    /// Construct a tree fragment. You'll usually want to use\n    /// [`addTree`](#common.TreeFragment^addTree) and\n    /// [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    /// calling this directly.\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /// Whether the start of the fragment represents the start of a\n    /// parse, or the end of a change. (In the second case, it may not\n    /// be safe to reuse some nodes at the start, depending on the\n    /// parsing algorithm.)\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /// Whether the end of the fragment represents the end of a\n    /// full-document parse, or the start of a change.\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the resulting\n    /// fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    /// true.\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/// A superclass that parsers should extend.\nclass Parser {\n    /// Start a parse, returning a [partial parse](#common.PartialParse)\n    /// object. [`fragments`](#common.TreeFragment) can be passed in to\n    /// make the parse incremental.\n    ///\n    /// By default, the entire input is parsed. You can pass `ranges`,\n    /// which should be a sorted array of non-empty, non-overlapping\n    /// ranges, to parse only those ranges. The tree returned in that\n    /// case will start at `ranges[0].from`.\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /// Run a full parse, returning the resulting tree.\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/// Create a parse wrapper that, after the inner parse completes,\n/// scans its tree for mixed language regions with the `nest`\n/// function, runs the resulting [inner parses](#common.NestedParse),\n/// and then [mounts](#common.NodeProp^mounted) their results onto the\n/// tree.\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, ranges) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.ranges = ranges;\n        if (!ranges.length || ranges.some(r => r.from >= r.to))\n            throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n    }\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].ranges[0].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered; this.stoppedAt == null || cursor.from < this.stoppedAt;) {\n            let enter = true, range;\n            if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && cursor.from < cursor.to && (nest = this.nest(cursor, this.input))) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay || [new Range(cursor.from, cursor.to)]);\n                    if (ranges.length)\n                        this.inner.push(new InnerParse(nest.parser, nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length)\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges));\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, depth = 0;\n    // Scan up to the nearest tree\n    do {\n        cursor.parent();\n        depth++;\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let i = 0, base = cursor.tree, off = 0;\n    for (;; i++) {\n        off = base.positions[i] + cursor.from;\n        if (off <= node.from && off + base.children[i].length >= node.to)\n            break;\n    }\n    let buf = base.children[i], b = buf.buffer;\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length) {\n        let i = startI;\n        while (b[i + 2] + off <= node.from)\n            i = b[i + 3];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, i, children, positions, innerOffset);\n        let from = b[i + 1], to = b[i + 2];\n        let isTarget = from + off == node.from && to + off == node.to && b[i] == node.type.id;\n        children.push(isTarget ? node.toTree() : split(i + 4, b[i + 3], buf.set.types[b[i]], from, to - from));\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[i + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length);\n    // Move the cursor back to the target node\n    for (let d = 0; d <= depth; d++)\n        cursor.childAfter(node.from);\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    /**\n    Define a new tag. If `parent` is given, the tag is treated as a\n    sub-tag of that parent, and\n    [highlighters](#highlight.tagHighlighter) that don't mention\n    this tag will try to fall back to the parent tag (or grandparent\n    tag, etc).\n    */\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Opaque */; }\n    get inherit() { return this.mode == 1 /* Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter).\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(Math.max(from, start), cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), \"\", innerHighlighters);\n                    this.startSpan(Math.min(to, pos), cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            if (mounted)\n                inheritedClass = \"\";\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier()\n};\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightTree, styleTags, tagHighlighter, tags };\n","import { NodeProp, IterMode, Tree, TreeFragment, Parser, NodeType, NodeSet } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState, countColumn, combineConfig, RangeSet, RangeSetBuilder, Prec } from '@codemirror/state';\nimport { ViewPlugin, logException, EditorView, Decoration, WidgetType, gutter, GutterMarker } from '@codemirror/view';\nimport { tags, tagHighlighter, highlightTree, styleTags } from '@lezer/highlight';\nimport { StyleModule } from 'style-mod';\n\nvar _a;\n/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nSyntax node prop used to register sublanguages. Should be added to\nthe top level node type for the language.\n*/\nconst sublanguageProp = /*@__PURE__*/new NodeProp();\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */\n    data, parser, extraExtensions = [], \n    /**\n    A language name.\n    */\n    name = \"\") {\n        this.data = data;\n        this.name = name;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => {\n                let top = topNodeAt(state, pos, side), data = top.type.prop(languageDataProp);\n                if (!data)\n                    return [];\n                let base = state.facet(data), sub = top.type.prop(sublanguageProp);\n                if (sub) {\n                    let innerNode = top.resolve(pos - top.from, side);\n                    for (let sublang of sub)\n                        if (sublang.test(innerNode, state)) {\n                            let data = state.facet(sublang.facet);\n                            return sublang.type == \"replace\" ? data : data.concat(base);\n                        }\n                }\n                return base;\n            })\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return topNodeAt(state, pos, side).type.prop(languageDataProp) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction topNodeAt(state, pos, side) {\n    let topLang = state.facet(language), tree = syntaxTree(state).topNode;\n    if (!topLang || topLang.allowsNesting) {\n        for (let node = tree; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))\n            if (node.type.isTop)\n                tree = node;\n    }\n    return tree;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser, name) {\n        super(data, parser, [], name);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }), spec.name);\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser and optionally a new name.\n    */\n    configure(options, name) {\n        return new LRLanguage(this.data, this.parser.configure(options), name || this.name);\n    }\n    get allowsNesting() { return this.parser.hasWrappers(); }\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    if (!parse)\n        return null;\n    let oldVieport = parse.viewport;\n    parse.updateViewport({ from: 0, to: upto });\n    let result = parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n    parse.updateViewport(oldVieport);\n    return result;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that—the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserRunning) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nMove parsing forward, and update the editor state afterwards to\nreflect the new tree. Will work for at most `timeout`\nmilliseconds. Returns true if the parser managed get to the given\nposition in that time.\n*/\nfunction forceParsing(view, upto = view.viewport.to, timeout = 100) {\n    let success = ensureSyntaxTree(view.state, upto, timeout);\n    if (success != syntaxTree(view.state))\n        view.dispatch({});\n    return !!success;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n/**\nLezer-style\n[`Input`](https://lezer.codemirror.net/docs/ref#common.Input)\nobject for a [`Text`](https://codemirror.net/6/docs/ref/#state.Text) object.\n*/\nclass DocInput {\n    /**\n    Create an input object for the given document.\n    */\n    constructor(doc) {\n        this.doc = doc;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get length() { return this.doc.length; }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, \n    /**\n    @internal\n    */\n    treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    /**\n    @internal\n    */\n    static create(parser, state, viewport) {\n        return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(until, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            if (typeof until == \"number\") {\n                let endTime = Date.now() + until;\n                until = () => Date.now() > endTime;\n            }\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (until())\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged && this.tree == this.context.tree)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Work.Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* Work.InitViewport */, state.doc.length);\n        let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });\n        if (!parseState.work(20 /* Work.Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* Work.MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* Work.MaxPause */ - 100 /* Work.MinPause */ });\n        }, 100 /* Work.MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst isInputPending = typeof navigator != \"undefined\" && ((_a = navigator.scheduling) === null || _a === void 0 ? void 0 : _a.isInputPending)\n    ? () => navigator.scheduling.isInputPending() : null;\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* Work.ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* Work.ChunkTime */;\n            this.chunkBudget = 3000 /* Work.ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* Work.MaxParseAhead */))\n            return;\n        let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Work.Slice */, deadline && !isInputPending ? Math.max(25 /* Work.MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(() => {\n            return isInputPending && isInputPending() || Date.now() > endTime;\n        }, vpTo + (viewportFirst ? 0 : 100000 /* Work.MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return !!(this.working || this.workScheduled > 0);\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state. Used\nby `Language` object's `extension` property (so you don't need to\nmanually wrap your languages in this). Can be used to access the\ncurrent language on a state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: language => [\n        Language.state,\n        parseWorker,\n        EditorView.contentAttributes.compute([language], state => {\n            let lang = state.facet(language);\n            return lang && lang.name ? { \"data-language\": lang.name } : {};\n        })\n    ]\n});\n/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a language support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth, as a column number (see\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)), at the start of a given\nline. A return value of `null` indicates no indentation can be\ndetermined, and the line should inherit the indentation of the one\nabove it. A return value of `undefined` defers to the next indent\nservice.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens. Should\nbe a string consisting either entirely of the same whitespace\ncharacter. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        let unit = values[0];\n        if (!unit || /\\S/.test(unit) || Array.from(unit).some(e => e != unit[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return unit;\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize, ch = state.facet(indentUnit)[0];\n    if (ch == \"\\t\") {\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n        ch = \" \";\n    }\n    for (let i = 0; i < cols; i++)\n        result += ch;\n    return result;\n}\n/**\nGet the indentation, as a column number, at the given position.\nWill first consult any [indent services](https://codemirror.net/6/docs/ref/#language.indentService)\nthat are registered, and if none of those return an indentation,\nthis will check the syntax tree for the [indent node\nprop](https://codemirror.net/6/docs/ref/#language.indentNodeProp) and use that if found. Returns a\nnumber when an indentation could be determined, and null\notherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result !== undefined)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nCreate a change set that auto-indents all lines touched by the\ngiven document range.\n*/\nfunction indentRange(state, from, to) {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => { var _a; return (_a = updated[start]) !== null && _a !== void 0 ? _a : -1; } });\n    let changes = [];\n    for (let pos = from; pos <= to;) {\n        let line = state.doc.lineAt(pos);\n        pos = line.to + 1;\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            continue;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    }\n    return state.changes(changes);\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak, simulateDoubleBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (simulateDoubleBreak && simulateBreak == pos)\n                return { text: \"\", from: pos };\n            else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number (see also\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)) or null, where null\nindicates that no definitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    return indentFrom(ast.resolveInner(pos).enterUnfinishedNodesBefore(pos), pos, cx);\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction indentFrom(node, pos, base) {\n    for (; node; node = node.parent) {\n        let strategy = indentStrategy(node);\n        if (strategy)\n            return strategy(TreeIndentContext.create(base, pos, node));\n    }\n    return null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/\nclass TreeIndentContext extends IndentContext {\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    node) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.node = node;\n    }\n    /**\n    @internal\n    */\n    static create(base, pos, node) {\n        return new TreeIndentContext(base, pos, node);\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        let parent = this.node.parent;\n        return parent ? indentFrom(parent, this.pos, this.base) : 0;\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\") && !tr.isUserEvent(\"input.complete\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length < end)\n        return null;\n    let inner = tree.resolveInner(end, 1);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\nfunction isUnfinished(node) {\n    let ch = node.lastChild;\n    return ch && ch.to == node.to && ch.type.isError;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\n/**\nThe state field that stores the folded ranges (as a [decoration\nset](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to\n[`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and\n[`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold\nstate.\n*/\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect))\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f),\n    toJSON(folded, state) {\n        let ranges = [];\n        folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });\n        return ranges;\n    },\n    fromJSON(value) {\n        if (!Array.isArray(value) || value.length % 2)\n            throw new RangeError(\"Invalid JSON for fold state\");\n        let ranges = [];\n        for (let i = 0; i < value.length;) {\n            let from = value[i++], to = value[i++];\n            if (typeof from != \"number\" || typeof to != \"number\")\n                throw new RangeError(\"Invalid JSON for fold state\");\n            ranges.push(foldWidget.range(from, to));\n        }\n        return Decoration.set(ranges, true);\n    }\n});\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#state.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction findFold(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges. Note that, in most cases,\nfolding information will depend on the [syntax\ntree](https://codemirror.net/6/docs/ref/#language.syntaxTree), and folding everything may not work\nreliably when the document hasn't been fully parsed (either\nbecause the editor state was only just initialized, or because the\ndocument is so big that the parser decided not to parse it\nentirely).\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n// Find the foldable region containing the given line, if one exists\nfunction foldableContainer(view, lineBlock) {\n    // Look backwards through line blocks until we find a foldable region that\n    // intersects with the line\n    for (let line = lineBlock;;) {\n        let foldableRegion = foldable(view.state, line.from, line.to);\n        if (foldableRegion && foldableRegion.to > lineBlock.from)\n            return foldableRegion;\n        if (!line.from)\n            return null;\n        line = view.lineBlockAt(line.from - 1);\n    }\n}\n/**\nToggle folding at cursors. Unfolds if there is an existing fold\nstarting in that line, tries to find a foldable range around it\notherwise.\n*/\nconst toggleFold = (view) => {\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded) {\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n        }\n        else {\n            let foldRange = foldableContainer(view, line);\n            if (foldRange)\n                effects.push(foldEffect.of(foldRange), announceFold(view, foldRange));\n        }\n    }\n    if (effects.length > 0)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#language.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#language.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#language.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme$1];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            let onclick = (event) => {\n                let line = view.lineBlockAt(view.posAtDOM(event.target));\n                let folded = findFold(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM(view, onclick);\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = \"cm-foldPlaceholder\";\n            element.onclick = onclick;\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n    domEventHandlers: {},\n    foldingChanged: () => false\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false) ||\n                syntaxTree(update.startState) != syntaxTree(update.state) ||\n                fullConfig.foldingChanged(update))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = findFold(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = findFold(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                } })\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(\n    /**\n    The tag styles used to create this highlight style.\n    */\n    specs, options) {\n        this.specs = specs;\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        const all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : undefined;\n        const scopeOpt = options.scope;\n        this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data\n            : scopeOpt ? (type) => type == scopeOpt : undefined;\n        this.style = tagHighlighter(specs.map(style => ({\n            tag: style.tag,\n            class: style.class || def(Object.assign({}, style, { tag: null }))\n        })), {\n            all,\n        }).style;\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.themeType = options.themeType;\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n}\nconst highlighterFacet = /*@__PURE__*/Facet.define();\nconst fallbackHighlighter = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? [values[0]] : null; }\n});\nfunction getHighlighters(state) {\n    let main = state.facet(highlighterFacet);\n    return main.length ? main : state.facet(fallbackHighlighter);\n}\n/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/\nfunction syntaxHighlighting(highlighter, options) {\n    let ext = [treeHighlighter], themeType;\n    if (highlighter instanceof HighlightStyle) {\n        if (highlighter.module)\n            ext.push(EditorView.styleModule.of(highlighter.module));\n        themeType = highlighter.themeType;\n    }\n    if (options === null || options === void 0 ? void 0 : options.fallback)\n        ext.push(fallbackHighlighter.of(highlighter));\n    else if (themeType)\n        ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {\n            return state.facet(EditorView.darkTheme) == (themeType == \"dark\") ? [highlighter] : [];\n        }));\n    else\n        ext.push(highlighterFacet.of(highlighter));\n    return ext;\n}\n/**\nReturns the CSS classes (if any) that the highlighters active in\nthe state would assign to the given style\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag) and\n(optional) language\n[scope](https://codemirror.net/6/docs/ref/#language.HighlightStyle^define^options.scope).\n*/\nfunction highlightingFor(state, tags, scope) {\n    let highlighters = getHighlighters(state);\n    let result = null;\n    if (highlighters)\n        for (let highlighter of highlighters) {\n            if (!highlighter.scope || scope && highlighter.scope(scope)) {\n                let cls = highlighter.style(tags);\n                if (cls)\n                    result = result ? result + \" \" + cls : cls;\n            }\n        }\n    return result;\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlighters(view.state));\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);\n        let styleChange = highlighters != getHighlighters(update.startState);\n        if (tree.length < update.view.viewport.to && !styleChange && tree.type == this.tree.type) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, highlighters);\n        }\n    }\n    buildDeco(view, highlighters) {\n        if (!highlighters || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTree(this.tree, highlighters, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            }, from, to);\n        }\n        return builder.finish();\n    }\n}\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.meta,\n        color: \"#404740\" },\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \"&.cm-focused .cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \"&.cm-focused .cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist,\n            renderMatch: defaultRenderMatch\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nfunction defaultRenderMatch(match) {\n    let decorations = [];\n    let mark = match.matched ? matchingMark : nonmatchingMark;\n    decorations.push(mark.range(match.start.from, match.start.to));\n    if (match.end)\n        decorations.push(mark.range(match.end.from, match.end.to));\n    return decorations;\n}\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (match)\n                decorations = decorations.concat(config.renderMatch(match, tr.state));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\n/**\nWhen larger syntax nodes, such as HTML tags, are marked as\nopening/closing, it can be a bit messy to treat the whole node as\na matchable bracket. This node prop allows you to define, for such\na node, a ‘handle’—the part of the node that is highlighted, and\nthat the cursor must be on to activate highlighting in the first\nplace.\n*/\nconst bracketMatchingHandle = /*@__PURE__*/new NodeProp();\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\nfunction findHandle(node) {\n    let hasHandle = node.type.prop(bracketMatchingHandle);\n    return hasHandle ? hasHandle(node.node) : node;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to) {\n            let handle = findHandle(cur);\n            if (handle && (dir > 0 ? pos >= handle.from && pos < handle.to : pos > handle.from && pos <= handle.to))\n                return matchMarkedBrackets(state, pos, dir, cur, handle, matches, brackets);\n        }\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, handle, matching, brackets) {\n    let parent = token.parent, firstToken = { from: handle.from, to: handle.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    let endHandle = findHandle(cursor);\n                    return { start: firstToken, end: endHandle ? { from: endHandle.from, to: endHandle.to } : undefined, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    if (depth == 0) {\n                        let endHandle = findHandle(cursor);\n                        return {\n                            start: firstToken,\n                            end: endHandle && endHandle.from < endHandle.to ? { from: endHandle.from, to: endHandle.to } : undefined,\n                            matched: false\n                        };\n                    }\n                    depth--;\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    let n = startValue;\n    for (let i = startIndex; i < end; i++) {\n        if (string.charCodeAt(i) == 9)\n            n += tabSize - (n % tabSize);\n        else\n            n++;\n    }\n    return n;\n}\n/**\nEncapsulates a single line of input. Given to stream syntax code,\nwhich uses it to tokenize the content.\n*/\nclass StringStream {\n    /**\n    Create a stream.\n    */\n    constructor(\n    /**\n    The line.\n    */\n    string, tabSize, \n    /**\n    The current indent unit size.\n    */\n    indentUnit, overrideIndent) {\n        this.string = string;\n        this.tabSize = tabSize;\n        this.indentUnit = indentUnit;\n        this.overrideIndent = overrideIndent;\n        /**\n        The current position on the line.\n        */\n        this.pos = 0;\n        /**\n        The start position of the current token.\n        */\n        this.start = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /**\n    True if we are at the end of the line.\n    */\n    eol() { return this.pos >= this.string.length; }\n    /**\n    True if we are at the start of the line.\n    */\n    sol() { return this.pos == 0; }\n    /**\n    Get the next code unit after the current position, or undefined\n    if we're at the end of the line.\n    */\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /**\n    Read the next code unit and advance `this.pos`.\n    */\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /**\n    Match the next character against the given string, regular\n    expression, or predicate. Consume and return it if it matches.\n    */\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /**\n    Continue matching characters that match the given string,\n    regular expression, or predicate function. Return true if any\n    characters were consumed.\n    */\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /**\n    Consume whitespace ahead of `this.pos`. Return true if any was\n    found.\n    */\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /**\n    Move to the end of the line.\n    */\n    skipToEnd() { this.pos = this.string.length; }\n    /**\n    Move to directly before the given character, if found on the\n    current line.\n    */\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /**\n    Move back `n` characters.\n    */\n    backUp(n) { this.pos -= n; }\n    /**\n    Get the column position at `this.pos`.\n    */\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue;\n    }\n    /**\n    Get the indentation column of the current line.\n    */\n    indentation() {\n        var _a;\n        return (_a = this.overrideIndent) !== null && _a !== void 0 ? _a : countCol(this.string, null, this.tabSize);\n    }\n    /**\n    Match the input against the given string or regular expression\n    (which should start with a `^`). Return true or the regexp match\n    if it matches.\n    \n    Unless `consume` is set to `false`, this will move `this.pos`\n    past the matched text.\n    \n    When matching a string `caseInsensitive` can be set to true to\n    make the match case-insensitive.\n    */\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /**\n    Get the current token.\n    */\n    current() { return this.string.slice(this.start, this.pos); }\n}\n\nfunction fullParser(spec) {\n    return {\n        name: spec.name || \"\",\n        token: spec.token,\n        blankLine: spec.blankLine || (() => { }),\n        startState: spec.startState || (() => true),\n        copyState: spec.copyState || defaultCopyState,\n        indent: spec.indent || (() => null),\n        languageData: spec.languageData || {},\n        tokenTable: spec.tokenTable || noTokens\n    };\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\nconst IndentedFrom = /*@__PURE__*/new WeakMap();\n/**\nA [language](https://codemirror.net/6/docs/ref/#language.Language) class based on a CodeMirror\n5-style [streaming parser](https://codemirror.net/6/docs/ref/#language.StreamParser).\n*/\nclass StreamLanguage extends Language {\n    constructor(parser) {\n        let data = defineLanguageFacet(parser.languageData);\n        let p = fullParser(parser), self;\n        let impl = new class extends Parser {\n            createParse(input, fragments, ranges) {\n                return new Parse(self, input, fragments, ranges);\n            }\n        };\n        super(data, impl, [indentService.of((cx, pos) => this.getIndent(cx, pos))], parser.name);\n        this.topNode = docID(data);\n        self = this;\n        this.streamParser = p;\n        this.stateAfter = new NodeProp({ perNode: true });\n        this.tokenTable = parser.tokenTable ? new TokenTable(p.tokenTable) : defaultTokenTable;\n    }\n    /**\n    Define a stream language.\n    */\n    static define(spec) { return new StreamLanguage(spec); }\n    getIndent(cx, pos) {\n        let tree = syntaxTree(cx.state), at = tree.resolve(pos);\n        while (at && at.type != this.topNode)\n            at = at.parent;\n        if (!at)\n            return null;\n        let from = undefined;\n        let { overrideIndentation } = cx.options;\n        if (overrideIndentation) {\n            from = IndentedFrom.get(cx.state);\n            if (from != null && from < pos - 1e4)\n                from = undefined;\n        }\n        let start = findState(this, tree, 0, at.from, from !== null && from !== void 0 ? from : pos), statePos, state;\n        if (start) {\n            state = start.state;\n            statePos = start.pos + 1;\n        }\n        else {\n            state = this.streamParser.startState(cx.unit);\n            statePos = 0;\n        }\n        if (pos - statePos > 10000 /* C.MaxIndentScanDist */)\n            return null;\n        while (statePos < pos) {\n            let line = cx.state.doc.lineAt(statePos), end = Math.min(pos, line.to);\n            if (line.length) {\n                let indentation = overrideIndentation ? overrideIndentation(line.from) : -1;\n                let stream = new StringStream(line.text, cx.state.tabSize, cx.unit, indentation < 0 ? undefined : indentation);\n                while (stream.pos < end - line.from)\n                    readToken(this.streamParser.token, stream, state);\n            }\n            else {\n                this.streamParser.blankLine(state, cx.unit);\n            }\n            if (end == pos)\n                break;\n            statePos = line.to + 1;\n        }\n        let line = cx.lineAt(pos);\n        if (overrideIndentation && from == null)\n            IndentedFrom.set(cx.state, line.from);\n        return this.streamParser.indent(state, /^\\s*(.*)/.exec(line.text)[1], cx);\n    }\n    get allowsNesting() { return false; }\n}\nfunction findState(lang, tree, off, startPos, before) {\n    let state = off >= startPos && off + tree.length <= before && tree.prop(lang.stateAfter);\n    if (state)\n        return { state: lang.streamParser.copyState(state), pos: off + tree.length };\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let child = tree.children[i], pos = off + tree.positions[i];\n        let found = child instanceof Tree && pos < before && findState(lang, child, pos, startPos, before);\n        if (found)\n            return found;\n    }\n    return null;\n}\nfunction cutTree(lang, tree, from, to, inside) {\n    if (inside && from <= 0 && to >= tree.length)\n        return tree;\n    if (!inside && tree.type == lang.topNode)\n        inside = true;\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let pos = tree.positions[i], child = tree.children[i], inner;\n        if (pos < to && child instanceof Tree) {\n            if (!(inner = cutTree(lang, child, from - pos, to - pos, inside)))\n                break;\n            return !inside ? inner\n                : new Tree(tree.type, tree.children.slice(0, i).concat(inner), tree.positions.slice(0, i + 1), pos + inner.length);\n        }\n    }\n    return null;\n}\nfunction findStartInFragments(lang, fragments, startPos, editorState) {\n    for (let f of fragments) {\n        let from = f.from + (f.openStart ? 25 : 0), to = f.to - (f.openEnd ? 25 : 0);\n        let found = from <= startPos && to > startPos && findState(lang, f.tree, 0 - f.offset, startPos, to), tree;\n        if (found && (tree = cutTree(lang, f.tree, startPos + f.offset, found.pos + f.offset, false)))\n            return { state: found.state, tree };\n    }\n    return { state: lang.streamParser.startState(editorState ? getIndentUnit(editorState) : 4), tree: Tree.empty };\n}\nclass Parse {\n    constructor(lang, input, fragments, ranges) {\n        this.lang = lang;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.stoppedAt = null;\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.rangeIndex = 0;\n        this.to = ranges[ranges.length - 1].to;\n        let context = ParseContext.get(), from = ranges[0].from;\n        let { state, tree } = findStartInFragments(lang, fragments, from, context === null || context === void 0 ? void 0 : context.state);\n        this.state = state;\n        this.parsedPos = this.chunkStart = from + tree.length;\n        for (let i = 0; i < tree.children.length; i++) {\n            this.chunks.push(tree.children[i]);\n            this.chunkPos.push(tree.positions[i]);\n        }\n        if (context && this.parsedPos < context.viewport.from - 100000 /* C.MaxDistanceBeforeViewport */) {\n            this.state = this.lang.streamParser.startState(getIndentUnit(context.state));\n            context.skipUntilInView(this.parsedPos, context.viewport.from);\n            this.parsedPos = context.viewport.from;\n        }\n        this.moveRangeIndex();\n    }\n    advance() {\n        let context = ParseContext.get();\n        let parseEnd = this.stoppedAt == null ? this.to : Math.min(this.to, this.stoppedAt);\n        let end = Math.min(parseEnd, this.chunkStart + 2048 /* C.ChunkSize */);\n        if (context)\n            end = Math.min(end, context.viewport.to);\n        while (this.parsedPos < end)\n            this.parseLine(context);\n        if (this.chunkStart < this.parsedPos)\n            this.finishChunk();\n        if (this.parsedPos >= parseEnd)\n            return this.finish();\n        if (context && this.parsedPos >= context.viewport.to) {\n            context.skipUntilInView(this.parsedPos, parseEnd);\n            return this.finish();\n        }\n        return null;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n    }\n    lineAfter(pos) {\n        let chunk = this.input.chunk(pos);\n        if (!this.input.lineChunks) {\n            let eol = chunk.indexOf(\"\\n\");\n            if (eol > -1)\n                chunk = chunk.slice(0, eol);\n        }\n        else if (chunk == \"\\n\") {\n            chunk = \"\";\n        }\n        return pos + chunk.length <= this.to ? chunk : chunk.slice(0, this.to - pos);\n    }\n    nextLine() {\n        let from = this.parsedPos, line = this.lineAfter(from), end = from + line.length;\n        for (let index = this.rangeIndex;;) {\n            let rangeEnd = this.ranges[index].to;\n            if (rangeEnd >= end)\n                break;\n            line = line.slice(0, rangeEnd - (end - line.length));\n            index++;\n            if (index == this.ranges.length)\n                break;\n            let rangeStart = this.ranges[index].from;\n            let after = this.lineAfter(rangeStart);\n            line += after;\n            end = rangeStart + after.length;\n        }\n        return { line, end };\n    }\n    skipGapsTo(pos, offset, side) {\n        for (;;) {\n            let end = this.ranges[this.rangeIndex].to, offPos = pos + offset;\n            if (side > 0 ? end > offPos : end >= offPos)\n                break;\n            let start = this.ranges[++this.rangeIndex].from;\n            offset += start - end;\n        }\n        return offset;\n    }\n    moveRangeIndex() {\n        while (this.ranges[this.rangeIndex].to < this.parsedPos)\n            this.rangeIndex++;\n    }\n    emitToken(id, from, to, size, offset) {\n        if (this.ranges.length > 1) {\n            offset = this.skipGapsTo(from, offset, 1);\n            from += offset;\n            let len0 = this.chunk.length;\n            offset = this.skipGapsTo(to, offset, -1);\n            to += offset;\n            size += this.chunk.length - len0;\n        }\n        this.chunk.push(id, from, to, size);\n        return offset;\n    }\n    parseLine(context) {\n        let { line, end } = this.nextLine(), offset = 0, { streamParser } = this.lang;\n        let stream = new StringStream(line, context ? context.state.tabSize : 4, context ? getIndentUnit(context.state) : 2);\n        if (stream.eol()) {\n            streamParser.blankLine(this.state, stream.indentUnit);\n        }\n        else {\n            while (!stream.eol()) {\n                let token = readToken(streamParser.token, stream, this.state);\n                if (token)\n                    offset = this.emitToken(this.lang.tokenTable.resolve(token), this.parsedPos + stream.start, this.parsedPos + stream.pos, 4, offset);\n                if (stream.start > 10000 /* C.MaxLineLength */)\n                    break;\n            }\n        }\n        this.parsedPos = end;\n        this.moveRangeIndex();\n        if (this.parsedPos < this.to)\n            this.parsedPos++;\n    }\n    finishChunk() {\n        let tree = Tree.build({\n            buffer: this.chunk,\n            start: this.chunkStart,\n            length: this.parsedPos - this.chunkStart,\n            nodeSet,\n            topID: 0,\n            maxBufferLength: 2048 /* C.ChunkSize */,\n            reused: this.chunkReused\n        });\n        tree = new Tree(tree.type, tree.children, tree.positions, tree.length, [[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]);\n        this.chunks.push(tree);\n        this.chunkPos.push(this.chunkStart - this.ranges[0].from);\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.chunkStart = this.parsedPos;\n    }\n    finish() {\n        return new Tree(this.lang.topNode, this.chunks, this.chunkPos, this.parsedPos - this.ranges[0].from).balance();\n    }\n}\nfunction readToken(token, stream, state) {\n    stream.start = stream.pos;\n    for (let i = 0; i < 10; i++) {\n        let result = token(stream, state);\n        if (stream.pos > stream.start)\n            return result;\n    }\n    throw new Error(\"Stream parser failed to advance stream.\");\n}\nconst noTokens = /*@__PURE__*/Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeSet = /*@__PURE__*/new NodeSet(typeArray);\nconst warned = [];\nconst defaultTable = /*@__PURE__*/Object.create(null);\nfor (let [legacyName, name] of [\n    [\"variable\", \"variableName\"],\n    [\"variable-2\", \"variableName.special\"],\n    [\"string-2\", \"string.special\"],\n    [\"def\", \"variableName.definition\"],\n    [\"tag\", \"tagName\"],\n    [\"attribute\", \"attributeName\"],\n    [\"type\", \"typeName\"],\n    [\"builtin\", \"variableName.standard\"],\n    [\"qualifier\", \"modifier\"],\n    [\"error\", \"invalid\"],\n    [\"header\", \"heading\"],\n    [\"property\", \"propertyName\"]\n])\n    defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);\nclass TokenTable {\n    constructor(extra) {\n        this.extra = extra;\n        this.table = Object.assign(Object.create(null), defaultTable);\n    }\n    resolve(tag) {\n        return !tag ? 0 : this.table[tag] || (this.table[tag] = createTokenType(this.extra, tag));\n    }\n}\nconst defaultTokenTable = /*@__PURE__*/new TokenTable(noTokens);\nfunction warnForPart(part, msg) {\n    if (warned.indexOf(part) > -1)\n        return;\n    warned.push(part);\n    console.warn(msg);\n}\nfunction createTokenType(extra, tagStr) {\n    let tag = null;\n    for (let part of tagStr.split(\".\")) {\n        let value = (extra[part] || tags[part]);\n        if (!value) {\n            warnForPart(part, `Unknown highlighting tag ${part}`);\n        }\n        else if (typeof value == \"function\") {\n            if (!tag)\n                warnForPart(part, `Modifier ${part} used at start of tag`);\n            else\n                tag = value(tag);\n        }\n        else {\n            if (tag)\n                warnForPart(part, `Tag ${part} used as modifier`);\n            else\n                tag = value;\n        }\n    }\n    if (!tag)\n        return 0;\n    let name = tagStr.replace(/ /g, \"_\"), type = NodeType.define({\n        id: typeArray.length,\n        name,\n        props: [styleTags({ [name]: tag })]\n    });\n    typeArray.push(type);\n    return type.id;\n}\nfunction docID(data) {\n    let type = NodeType.define({ id: typeArray.length, name: \"Document\", props: [languageDataProp.add(() => data)] });\n    typeArray.push(type);\n    return type;\n}\n\nexport { DocInput, HighlightStyle, IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, StreamLanguage, StringStream, TreeIndentContext, bracketMatching, bracketMatchingHandle, codeFolding, continuedIndent, defaultHighlightStyle, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldAll, foldCode, foldEffect, foldGutter, foldInside, foldKeymap, foldNodeProp, foldService, foldState, foldable, foldedRanges, forceParsing, getIndentUnit, getIndentation, highlightingFor, indentNodeProp, indentOnInput, indentRange, indentService, indentString, indentUnit, language, languageDataProp, matchBrackets, sublanguageProp, syntaxHighlighting, syntaxParserRunning, syntaxTree, syntaxTreeAvailable, toggleFold, unfoldAll, unfoldCode, unfoldEffect };\n","import { Annotation, Facet, combineConfig, StateField, EditorSelection, Transaction, ChangeSet, ChangeDesc, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nfunction changeEnd(changes) {\n    let end = 0;\n    changes.iterChangedRanges((_, to) => end = to);\n    return end;\n}\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let selection = tr.docChanged ? EditorSelection.single(changeEnd(tr.changes)) : undefined;\n            let item = HistEvent.fromTransaction(tr, selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    return view.moveByChar(range, forward, start => {\n        let cat = CharCategory.Space, pos = range.from;\n        let done = false, sawUpper = false, sawLower = false;\n        let step = (next) => {\n            if (done)\n                return false;\n            pos += forward ? next.length : -next.length;\n            let nextCat = categorize(next), ahead;\n            if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n                nextCat = -1; // Treat word punctuation specially\n            if (cat == CharCategory.Space)\n                cat = nextCat;\n            if (cat != nextCat)\n                return false;\n            if (cat == CharCategory.Word) {\n                if (next.toLowerCase() == next) {\n                    if (!forward && sawUpper)\n                        return false;\n                    sawLower = true;\n                }\n                else if (sawLower) {\n                    if (forward)\n                        return false;\n                    done = true;\n                }\n                else {\n                    if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                        ahead.toLowerCase() == ahead)\n                        return false;\n                    sawUpper = true;\n                }\n            }\n            return true;\n        };\n        step(start);\n        return step;\n    });\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolveInner(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward) => deleteBy(target, pos => {\n    let { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true);\nconst deleteByGroup = (target, forward) => deleteBy(target, start => {\n    let pos = start, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == start && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != start)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.lineBlockAt(pos).to;\n    return pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, pos => {\n    let lineStart = view.lineBlockAt(pos).from;\n    return pos > lineStart ? lineStart : Math.max(0, pos - 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = /^\\s*/.exec(state.doc.lineAt(from).text)[0].length;\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteToLineStart },\n    { mac: \"Mod-Delete\", run: deleteToLineEnd }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, transposeChars, undo, undoDepth, undoSelection };\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec, EditorState, findClusterBreak } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferPos))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.text = text;\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = toCharEnd(text, from);\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                if (from == this.curLineStart + this.curLine.length)\n                    this.nextLine();\n                if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = toCharEnd(text, from);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                // If a match goes almost to the end of a noncomplete chunk, try\n                // again, since it'll likely be able to match more\n                if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&\n                    (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                    return this;\n                }\n            }\n            if (this.flat.to == this.to) {\n                this.done = true;\n                return this;\n            }\n            // Grow the flattened doc\n            this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction toCharEnd(text, pos) {\n    if (pos >= text.length)\n        return pos;\n    let line = text.lineAt(pos), next;\n    while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)\n        pos++;\n    return pos;\n}\n\nfunction createLineDialog(view) {\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\" });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        view.dispatch({\n            effects: dialogEffect.of(false),\n            selection: EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to)\n                    && insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to).trim();\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            top: false,\n            caseSensitive: false,\n            literal: false,\n            regexp: false,\n            wholeWord: false,\n            createPanel: view => new SearchPanel(view),\n            scrollToMatch: range => EditorView.scrollIntoView(range)\n        });\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.literal = !!config.literal;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = this.unquote(this.search);\n        this.wholeWord = !!config.wholeWord;\n    }\n    /**\n    @internal\n    */\n    unquote(text) {\n        return this.literal ? text :\n            text.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&\n            this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n    getCursor(state, from = 0, to) {\n        let st = state.doc ? state : EditorState.create({ doc: state });\n        if (to == null)\n            to = st.doc.length;\n        return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, state, from, to) {\n    return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n    return (from, to, buf, bufPos) => {\n        if (bufPos > from || bufPos + buf.length < to) {\n            bufPos = Math.max(0, from - 2);\n            buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n        }\n        return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||\n            categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&\n            (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||\n                categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);\n    };\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(state, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n        if (cursor.done)\n            cursor = stringCursor(this.spec, state, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing an inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(state, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, state, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* ChunkSize */;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(_result) { return this.spec.unquote(this.spec.replace); }\n    matchAll(state, limit) {\n        let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, state, from, to) {\n    return new RegExpCursor(state.doc, spec.search, {\n        ignoreCase: !spec.caseSensitive,\n        test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n    }, from, to);\n}\nfunction charBefore(str, index) {\n    return str.slice(findClusterBreak(str, index, false), index);\n}\nfunction charAfter(str, index) {\n    return str.slice(index, findClusterBreak(str, index));\n}\nfunction regexpWordTest(categorizer) {\n    return (_from, _to, match) => !match[0].length ||\n        (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||\n            categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&\n            (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||\n                categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(state, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(state, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* ChunkSize */);\n            let cursor = regexpCursor(this.spec, state, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.unquote(this.spec.replace.replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m));\n    }\n    matchAll(state, limit) {\n        let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* HighlightMargin */), Math.min(to + 250 /* HighlightMargin */, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n    var _a;\n    return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { to } = view.state.selection.main;\n    let next = query.nextMatch(view.state, to, to);\n    if (!next)\n        return false;\n    let selection = EditorSelection.single(next.from, next.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from } = state.selection.main;\n    let prev = query.prevMatch(state, from, from);\n    if (!prev)\n        return false;\n    let selection = EditorSelection.single(prev.from, prev.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    let effects = [];\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state, next.from, next.to);\n        effects.push(EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = EditorSelection.single(next.from - off, next.to - off);\n        effects.push(announceMatch(view, next));\n        effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n    }\n    view.dispatch({\n        changes, selection, effects,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    let announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n    view.dispatch({\n        changes,\n        effects: EditorView.announce.of(announceText),\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a, _b, _c, _d, _e;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    if (fallback && !selText)\n        return fallback;\n    let config = state.facet(searchConfigFacet);\n    return new SearchQuery({\n        search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n        caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n        literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n        regexp: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.regexp) !== null && _d !== void 0 ? _d : config.regexp,\n        wholeWord: (_e = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _e !== void 0 ? _e : config.wholeWord\n    });\n}\nfunction getSearchInput(view) {\n    let panel = getPanel(view, createSearchPanel);\n    return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n    let input = getSearchInput(view);\n    if (input && input == view.root.activeElement)\n        input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let searchInput = getSearchInput(view);\n        if (searchInput && searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            form: \"\",\n            \"main-field\": \"true\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            form: \"\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            form: \"\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            form: \"\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        this.wordField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"word\",\n            form: \"\",\n            checked: query.wholeWord,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            elt(\"label\", null, [this.wordField, phrase(view, \"by word\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")])\n            ],\n            elt(\"button\", {\n                name: \"close\",\n                onclick: () => closeSearchPanel(view),\n                \"aria-label\": phrase(view, \"close\"),\n                type: \"button\"\n            }, [\"×\"])\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            wholeWord: this.wordField.checked,\n            replace: this.replaceField.value,\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n        this.wordField.checked = query.wholeWord;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != line.from) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${line.number}.`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.lowest(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, searchPanelOpen, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","import { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, ViewPlugin, logException, getTooltip, showTooltip, EditorView, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n    addEventListener(type, listener) {\n        if (type == \"abort\" && this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n            if (pos.type.isTop)\n                break;\n        }\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return Object.assign(Object.assign({}, state.changeByRange(range => {\n        if (range != main && from != to &&\n            state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n            return { range };\n        return {\n            changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: text },\n            range: EditorSelection.cursor(range.from + fromOff + text.length)\n        };\n    })), { userEvent: \"input.complete\" });\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [-100 /* Penalty.NotFull */];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return [score, 0, firstSize];\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* Penalty.NotStart */ - word.length, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score - word.length], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b)\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    return {\n        style: `${side}: ${offset}px; max-width: ${maxWidth}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    if (!cState.open.disabled)\n        return applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* State.Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* State.Pending */ && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (getUserEvent(tr) == \"input\")\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* State.Pending */ && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicitPos == pos);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state));\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);\n            if (current && current.state == 1 /* State.Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* State.Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), { annotations: pickedCompletion.of(option.completion) }));\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let { label } = completion, off = 0;\n            for (let j = 1; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        var _a, _b, _c;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            this.updateSel();\n            if (((_a = cState.open) === null || _a === void 0 ? void 0 : _a.disabled) != ((_b = prevState.open) === null || _b === void 0 ? void 0 : _b.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!((_c = cState.open) === null || _c === void 0 ? void 0 : _c.disabled));\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfoReq);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === 'string' ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if ('then' in infoResult) {\n                infoResult.then(node => {\n                    if (node && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(node);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult);\n            }\n        }\n    }\n    addInfoPane(content) {\n        let dom = this.info = document.createElement(\"div\");\n        dom.className = \"cm-tooltip cm-completionInfo\";\n        dom.appendChild(content);\n        this.dom.appendChild(dom);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let win = this.dom.ownerDocument.defaultView || window;\n            space = { left: 0, top: 0, right: win.innerWidth, bottom: win.innerHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    for (let a of active)\n        if (a.hasResult()) {\n            if (a.result.filter === false) {\n                let getMatch = a.result.getMatch;\n                for (let option of a.result.options) {\n                    let match = [1e9 - options.length];\n                    if (getMatch)\n                        for (let n of getMatch(option))\n                            match.push(n);\n                    addOption(new Option(option, a.source, match, match[0]));\n                }\n            }\n            else {\n                let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        addOption(new Option(option, a.source, match, match[0] + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = state.facet(completionConfig).compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail ||\n            (prev.type != null && opt.completion.type != null && prev.type != opt.completion.type) ||\n            prev.apply != opt.completion.apply)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf) {\n        let options = sortOptions(active, state);\n        if (!options.length) {\n            return prev && active.some(a => a.state == 1 /* State.Pending */) ?\n                new CompletionDialog(prev.options, prev.attrs, prev.tooltip, prev.timestamp, prev.selected, true) : null;\n        }\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: completionTooltip(completionState),\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open;\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active))\n            open = CompletionDialog.build(active, state, this.id, open, conf);\n        else if (open && open.disabled && !active.some(a => a.state == 1 /* State.Pending */))\n            open = null;\n        if (!open && active.every(a => a.state != 1 /* State.Pending */) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none = [];\nfunction getUserEvent(tr) {\n    return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nclass ActiveSource {\n    constructor(source, state, explicitPos = -1) {\n        this.source = source;\n        this.state = state;\n        this.explicitPos = explicitPos;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = getUserEvent(tr), value = this;\n        if (event)\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* State.Inactive */)\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value ? cur(tr.state) : -1);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* State.Pending */);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n    map(changes) {\n        return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicitPos, result, from, to) {\n        super(source, 2 /* State.Result */, explicitPos);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        var _a;\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicitPos < 0 ? pos <= from : pos < this.from) ||\n            pos > to ||\n            type == \"delete\" && cur(tr.startState) == this.from)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos), updated;\n        if (checkValid(this.result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, explicitPos, this.result, from, to);\n        if (this.result.update &&\n            (updated = this.result.update(this.result, from, to, new CompletionContext(tr.state, pos, explicitPos >= 0))))\n            return new ActiveResult(this.source, explicitPos, updated, updated.from, (_a = updated.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, explicitPos);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* State.Inactive */) : this.map(tr.changes);\n    }\n    map(mapping) {\n        return mapping.empty ? this :\n            new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3] || \"\", found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            for (let esc; esc = /\\\\([{}])/.exec(line);) {\n                line = line.slice(0, esc.index) + esc[1] + line.slice(esc.index + esc[0].length);\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > esc.index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = {\n            changes: { from, to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? pickedCompletion.of(completion) : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.ranges.some(r => r.field == active.active + 1));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.active > 0);\n}\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field) ? new ActiveSnippet(active.ranges, match.field) : null)\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* C.MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* C.MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* C.MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* C.MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n    return { from, options, validFor: mapRE(re, s => \"^\" + s) };\n};\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}:;>\",\n    stringPrefixes: []\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects)\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [inputHandler, bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\nconst inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length) };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete.backward\" }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return { changes: { from: range.head, to: range.head + close.length, insert: close },\n                range: EditorSelection.cursor(range.head + close.length) };\n        return dont = { range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n    let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos), start;\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                let content = isTriple ? token + token + token : token;\n                return { changes: { from: pos, to: pos + content.length, insert: content },\n                    range: EditorSelection.cursor(pos + content.length) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&\n            nodeStart(state, start)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n    let node = syntaxTree(state).resolveInner(pos, -1);\n    let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);\n    for (let i = 0; i < 5; i++) {\n        let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n        let quotePos = start.indexOf(quoteToken);\n        if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n            let first = node.firstChild;\n            while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n                if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)\n                    return false;\n                first = first.firstChild;\n            }\n            return true;\n        }\n        let parent = node.to == pos && node.parent;\n        if (!parent)\n            break;\n        node = parent;\n    }\n    return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n    let charCat = state.charCategorizer(pos);\n    if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)\n        return pos;\n    for (let prefix of prefixes) {\n        let start = pos - prefix.length;\n        if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)\n            return start;\n    }\n    return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* State.Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* State.Inactive */) ? \"active\" : null;\n}\nconst completionArrayCache = /*@__PURE__*/new WeakMap;\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    if (!open || open.disabled)\n        return [];\n    let completions = completionArrayCache.get(open.options);\n    if (!completions)\n        completionArrayCache.set(open.options, completions = open.options.map(o => o.completion));\n    return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n    return setSelectedEffect.of(index);\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n","import { Decoration, showPanel, EditorView, ViewPlugin, logException, gutter, showTooltip, hoverTooltip, getPanel, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics);\n        let ranges = Decoration.set(markedDiagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, line.to));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (diagnosticFilter)\n        found = diagnosticFilter(found);\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                let all = annotations.reduce((a, b) => a.concat(b));\n                if (this.view.state.doc == state.doc)\n                    this.view.dispatch(setDiagnostics(this.view.state, all));\n            }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage() : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => {\n            let s = d.severity;\n            return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n        }, \"info\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Margin */ && event.clientX < rect.right + 10 /* Margin */ &&\n            event.clientY > rect.top - 10 /* Margin */ && event.clientY < rect.bottom + 10 /* Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || []);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size)\n        for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next())\n            f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };\n","import { lineNumbers, highlightActiveLineGutter, highlightSpecialChars, drawSelection, dropCursor, rectangularSelection, crosshairCursor, highlightActiveLine, keymap } from '@codemirror/view';\nexport { EditorView } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nimport { foldGutter, indentOnInput, syntaxHighlighting, defaultHighlightStyle, bracketMatching, foldKeymap } from '@codemirror/language';\nimport { history, defaultKeymap, historyKeymap } from '@codemirror/commands';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { closeBrackets, autocompletion, closeBracketsKeymap, completionKeymap } from '@codemirror/autocomplete';\nimport { lintKeymap } from '@codemirror/lint';\n\n// (The superfluous function calls around the list of extensions work\n// around current limitations in tree-shaking software.)\n/**\nThis is an extension value that just pulls together a number of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of separate packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#view.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#commands.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#language.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#language.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#view.rectangularSelection) and [crosshair cursor](https://codemirror.net/6/docs/ref/#view.crosshairCursor)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis extension does not allow customization. The idea is that,\nonce you decide you want to configure your editor more precisely,\nyou take this package's source (which is just a bunch of imports\nand an array literal), copy it into your own code, and adjust it\nas desired.\n*/\nconst basicSetup = /*@__PURE__*/(() => [\n    lineNumbers(),\n    highlightActiveLineGutter(),\n    highlightSpecialChars(),\n    history(),\n    foldGutter(),\n    drawSelection(),\n    dropCursor(),\n    EditorState.allowMultipleSelections.of(true),\n    indentOnInput(),\n    syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n    bracketMatching(),\n    closeBrackets(),\n    autocompletion(),\n    rectangularSelection(),\n    crosshairCursor(),\n    highlightActiveLine(),\n    highlightSelectionMatches(),\n    keymap.of([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n])();\n/**\nA minimal set of extensions to create a functional editor. Only\nincludes [the default keymap](https://codemirror.net/6/docs/ref/#commands.defaultKeymap), [undo\nhistory](https://codemirror.net/6/docs/ref/#commands.history), [special character\nhighlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars), [custom selection\ndrawing](https://codemirror.net/6/docs/ref/#view.drawSelection), and [default highlight\nstyle](https://codemirror.net/6/docs/ref/#language.defaultHighlightStyle).\n*/\nconst minimalSetup = /*@__PURE__*/(() => [\n    highlightSpecialChars(),\n    history(),\n    drawSelection(),\n    syntaxHighlighting(defaultHighlightStyle, { fallback: true }),\n    keymap.of([\n        ...defaultKeymap,\n        ...historyKeymap,\n    ])\n])();\n\nexport { basicSetup, minimalSetup };\n"],"names":["Text","_classCallCheck","_createClass","key","value","lineAt","pos","length","RangeError","concat","lineInner","line","n","lines","replace","from","to","text","parts","decompose","TextNode","append","other","slice","arguments","undefined","eq","start","scanIdentical","end","a","RawTextCursor","b","skip","next","lineBreak","done","iter","dir","iterRange","PartialTextCursor","iterLines","inner","Math","max","LineCursor","toString","sliceString","toJSON","flatten","of","empty","TextLeaf","split","_Text","_inherits","_super","_createSuper","_this","textLength","call","get","target","isLine","offset","i","string","Line","open","sliceText","min","prev","pop","joined","appendText","push","mid","_get","_getPrototypeOf","prototype","newLen","lineSep","result","_iterator","_createForOfIteratorHelper","_step","s","err","e","f","part","len","_iterator2","_step2","_Text2","_super2","children","_this2","_iterator3","_step3","child","endLine","childOpen","updated","totalLines","copy","_iterator4","_step4","_ref","_ref2","_slicedToArray","iA","iB","eA","eB","chA","chB","reduce","l","ch","_iterator5","_step5","flat","_iterator6","_step6","chunk","maxChunk","minChunk","chunked","currentLines","currentLen","currentChunk","add","last","_iterator7","_step7","node","flush","_iterator8","_step8","_iterator9","_step9","first","nodes","offsets","nextInner","top","offsetValue","size","cursor","limit","_this$cursor$next","afterBreak","_this$inner$next","Symbol","iterator","number","extend","map","parseInt","isExtendingChar","code","isRegionalIndicator","ZWJ","findClusterBreak","str","forward","includeExtending","nextClusterBreak","prevClusterBreak","surrogateLow","charCodeAt","surrogateHigh","codePointAt","codePointSize","countBefore","found","code0","code1","fromCodePoint","String","fromCharCode","DefaultSplit","MapMode","ChangeDesc","sections","ins","iterGaps","posA","posB","iterChangedRanges","individual","iterChanges","composeDesc","composeSets","mapDesc","before","mapSet","mapPos","assoc","mode","Simple","endA","TrackDel","TrackBefore","TrackAfter","touchesRange","fromJSON","json","Array","isArray","some","create","ChangeSet","_ChangeDesc","_super3","inserted","_this3","apply","doc","fromA","toA","fromB","_toB","invert","index","compose","filter","ranges","resultSections","resultInserted","filteredSections","SectionIter","addSection","off","addInsert","changes","filtered","total","force","set","process","spec","_iterator10","_step10","sub","_spec$to","insert","insText","insLen","createSet","forceJoin","values","desc","endB","setA","setB","mkSet","piece","left","Error","len2","sectionLen","insB","textBit","forward2","SelectionRange","flags","level","change","anchor","EditorSelection","range","head","abs","mainIndex","r","asSingle","main","addRange","replaceRange","which","single","normalized","bidiLevel","goalColumn","sort","indexOf","splice","checkSelection","selection","docLength","_iterator11","_step11","nextID","Facet","combine","compareInput","compare","isStatic","enables","id","extensions","FacetProvider","compute","deps","computeN","field","x","state","define","config","sameArray","every","dependencies","facet","type","dynamicSlot","addresses","_this4","_a","getter","idx","multi","depDoc","depSel","depAddrs","_iterator12","_step12","dep","update","tr","docChanged","ensureAll","newVal","compareArray","reconfigure","oldState","oldAddr","address","oldVal","getAddr","StateField","addrs","changed","_iterator13","_step13","addr","ensureAddr","dynamicFacetSlot","providers","providerAddrs","p","providerTypes","dynamic","_iterator14","_step14","val","_iterator15","_step15","depChanged","oldProviders","facets","oldValue","initField","createF","updateF","compareF","provides","_this5","init","find","slot","_this6","provide","Prec_","lowest","low","high","highest","prec","ext","PrecExtension","Prec","Compartment","CompartmentInstance","content","compartment","extension","compartments","Configuration","base","dynamicSlots","staticValues","statusTemplate","staticFacet","resolve","fields","Object","newCompartments","Map","_iterator16","_step16","_loop","_fields","_i20","oldFacets","_loop2","_iterator17","_step17","_loop3","seen","known","_iterator18","_step18","has","status","computeSlot","languageData","allowMultipleSelections","v","lineSeparator","changeFilter","transactionFilter","transactionExtender","readOnly","Annotation","AnnotationType","StateEffectType","StateEffect","mapping","mapped","is","mapEffects","effects","_iterator19","_step19","effect","appendConfig","Transaction","startState","annotations","scrollIntoView","_doc","_state","newLength","time","Date","now","applyTransaction","annotation","_iterator20","_step20","ann","isUserEvent","event","userEvent","addToHistory","remote","joinRanges","mergeTransaction","sequential","mapForA","mapForB","resolveTransactionInner","docSize","sel","asArray","resolveTransaction","specs","seq","extendTransaction","filterTransaction","_iterator21","_step21","back","invertedDesc","filters","extenders","keys","none","CharCategory","nonASCIISingleCaseWordChar","wordChar","RegExp","_","hasWordChar","test","toUpperCase","toLowerCase","makeCategorizer","wordChars","char","Space","Word","Other","EditorState","require","_len4","_key","_this7","conf","_conf","_iterator22","_step22","forEach","startValues","intermediateState","newDoc","newSelection","replaceSelection","toText","changeByRange","result1","newChanges","newMapped","j","mapBy","sliceDoc","prop","tabSize","phrase","_len5","_key2","_iterator23","phrases","_step23","hasOwnProperty","m","languageDataAt","name","side","_iterator24","_step24","provider","_iterator25","_step25","charCategorizer","at","join","wordAt","_this$doc$lineAt","cat","fieldInit","_loop4","configuration","kA","kB","k","combineConfig","configs","defaults","_iterator26","_step26","_i28","_Object$keys","current","RangeValue","Range","startSide","endSide","point","mapMode","cmpRange","Chunk","maxPoint","findIndex","startAt","arr","lo","hi","diff","between","newPos","curFrom","curTo","newFrom","newTo","RangeSet","chunkPos","nextLayer","chunkEnd","isEmpty","_iterator27","_step27","updateSpec","_updateSpec$add","_updateSpec$sort","_updateSpec$filterFro","filterFrom","_updateSpec$filterTo","filterTo","cur","LayerCursor","spill","builder","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","_chunk$map","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPointSize","sharedChunks","findSharedChunks","sideA","SpanCursor","sideB","sameValues","active","spans","openRanges","openStart","activeForPoint","openCount","pointFrom","pointRank","openEnd","span","build","_iterator28","lazySort","_step28","finish","chunkStart","lastFrom","lastTo","setMaxPoint","finishChunk","newArrays","inA","_iterator29","_step29","shared","Set","_iterator30","_step30","layer","minPoint","rank","goto","gotoInner","setRangeIndex","heap","_iterator31","_step31","heapBubble","_iterator32","_step32","childIndex","activeTo","activeRank","minActive","removeActive","remove","findMinIndex","addActive","trackOpen","_this$cursor","wasPoint","nextVal","reverse","startA","startB","dPos","clipEnd","comparePoint","compareRange","array","foundPos","countColumn","findColumn","col","strict","C","COUNT","SET","floor","random","globalThis","window","StyleModule","options","rules","splitSelector","selector","render","selectors","isKeyframes","local","isAt","exec","keyframes","_typeof","getRules","newName","mount","root","modules","StyleSet","adoptedSet","ownerDocument","win","defaultView","adoptedStyleSheets","CSSStyleSheet","adopted","sheet","_toConsumableArray","styleTag","createElement","insertBefore","firstChild","mod","insertRule","textContent","shift","mac","navigator","platform","ie","userAgent","keyName","ignoreKey","metaKey","shiftKey","ctrlKey","altKey","keyCode","getSelection","nodeType","contains","dom","parentNode","deepActiveElement","elt","activeElement","shadowRoot","hasSelection","anchorNode","clientRectsFor","textRange","nodeValue","getClientRects","isEquivalentPosition","targetNode","targetOff","scanFor","domIndex","previousSibling","maxOffset","nodeName","parent","childNodes","contentEditable","flattenRect","rect","right","bottom","windowRect","innerWidth","innerHeight","scrollRectIntoView","y","xMargin","yMargin","ltr","bounding","body","scrollHeight","clientHeight","scrollWidth","clientWidth","assignedSlot","getBoundingClientRect","moveX","moveY","rectHeight","boundingHeight","targetTop","targetLeft","scrollBy","movedX","movedY","scrollTop","scrollLeft","host","scrollableParent","DOMSelectionState","anchorOffset","focusNode","focusOffset","domSel","setRange","preventScrollSupported","focusPreventScroll","setActive","focus","stack","preventScroll","scratchRange","document","createRange","setEnd","setStart","dispatchKey","cancelable","down","KeyboardEvent","synthetic","dispatchEvent","up","defaultPrevented","getRoot","clearAttributes","attributes","removeAttributeNode","atElementStart","DOMPos","precise","after","noChildren","ContentView","dirty","posBefore","posAtStart","view","breakAfter","posAfter","sync","track","nextSibling","contentView","canReuseDOM","reuseDOM","written","rm$1","_dom","localPosFromDOM","bias","lastChild","domBoundsAround","fromI","fromStart","toI","toEnd","prevEnd","startDOM","endDOM","markDirty","andParent","markParentsDirty","childList","setParent","setDOM","cmView","replaceChildren","_this$children","destroy","ignoreMutation","_rec","ignoreEvent","_event","childCursor","ChildCursor","childPos","findPos","constructor","merge","source","hasStart","become","getSide","removeChild","fromOff","toOff","breakAtStart","breakAtEnd","mergeChildrenInto","_cur$findPos","_cur$findPos2","dLen","nav","vendor","documentElement","style","ie_edge","ie_upto10","ie_11up","gecko","chrome","webkit","safari","ios","maxTouchPoints","browser","windows","linux","ie_version","documentMode","gecko_version","chrome_version","android","webkit_version","MaxJoinLen","TextView","_ContentView","createDOM","textDOM","createTextNode","domAtPos","_from","_to","coordsAt","textCoords","MarkView","_ContentView2","mark","_assertThisInitialized","setAttrs","className","attrs","setAttribute","tagName","_hasStart","detachFrom","inlineDOMAtPos","coordsInChildren","rects","width","WidgetView","_ContentView3","widget","prevWidget","updateDOM","toDOM","_top","custom","fromBack","isHidden","customView","CompositionView","_WidgetView","_super4","_this$widget","topView","scanCompositionTree","_this$widget2","posFromDOMInCompositionTree","_this$widget3","enterView","fromText","scanCompositionNode","hasComp","childView","posFromDOMInOpaqueNode","WidgetBufferView","_ContentView4","_super5","joinInlineInto","beforePos","afterPos","scan","fallbackRect","combineAttrs","attrsEq","keysA","keysB","_i2","_keysA","updateAttrs","removeAttribute","WidgetType","BlockType","Decoration","_RangeValue","_super6","hasHeight","estimatedHeight","MarkDecoration","block","PointDecoration","isBlockGap","_getInclusive","getInclusive","LineDecoration","_Decoration","_super7","_getInclusive2","_Decoration2","_super8","_Decoration3","_super9","isReplace","WidgetRange","WidgetBefore","WidgetAfter","lineBreaks","widgetsEq","inclusiveStart","inclusiveEnd","inclusive","margin","LineView","_ContentView5","_super10","_this8","prevAttrs","transferDOM","setDeco","_this$childPos","addLineDeco","deco","cls","classList","isEditable","hack","cmIgnore","appendChild","measureTextSize","totalWidth","textHeight","height","lineHeight","charWidth","heightOracle","viewState","dist","_other","docView","BlockWidgetView","_ContentView6","_super11","_this9","_takeDeco","posAtEnd","ContentBuilder","disallowBlockEffectsFor","curLine","pendingBuffer","bufferMarks","atCursorPos","textOff","posCovered","getLine","flushBuffer","wrapMarks","addBlockWidget","buildText","take","NullWidget","cursorBefore","cursorAfter","decorations","dynamicDecorationMap","_WidgetType","_super12","tag","_this10","clickAddsSelectionRange","dragMovesSelection$1","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","focusChangeEffect","perLineTextDirection","nativeSelectionHidden","ScrollTarget","t","logException","exception","context","handler","onerror","console","error","editable","nextPluginID","viewPlugin","ViewPlugin","domEventHandlers","buildExtensions","eventHandlers","plugin","pluginInst","fromClass","PluginInstance","mustUpdate","deactivate","editorAttributes","contentAttributes","atomicRanges","scrollMargins","getScrollMargins","styleModule","ChangedRange","toB","addToSet","me","extendWithRanges","dI","rI","ViewUpdate","transactions","changedRanges","Direction","LTR","RTL","dec","LowTypes","ArabicTypes","Brackets","BracketStack","_i3","_arr","charType","BidiRE","BidiSpan","order","maybe","types","computeOrder","direction","outerType","oppositeType","trivialOrder","prevStrong","sI","br","sJ","embed","beforeL","afterL","rtl","movedOver","moveVisually","startIndex","spanI","indexForward","nextIndex","nextSpan","LineBreakPlaceholder","DOMReader","points","readRange","findPointBefore","oldLen","readNode","nextView","isBlockElement","readTextNode","re","nextBreak","breakSize","fromView","overrideDOMText","findPointInside","maxLen","DOMPoint","DocView","_ContentView7","_super13","_this11","compositionDeco","minWidth","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","forceSelection","lastUpdate","contentDOM","updateDeco","updateInner","_this12","inputState","composing","computeCompositionDeco","prevDeco","decoDiff","findChangedDeco","oldLength","_this13","mustMeasureContent","updateChildren","observer","ignore","contentHeight","flexBasis","selectionRange","gaps","viewport","BlockGapWidget","updateGaps","_ContentBuilder$build","_cursor$findPos","_cursor$findPos2","updateSelection","_this14","mustRead","fromPointer","readSelectionRange","activeElt","focused","selectionNotFocus","betweenUneditable","dummy","inUneditable","blur","rawSel","nextTo","nextToUneditable","nearbyTextNode","collapse","cursorBidiLevel","_ref3","removeAllRanges","setSelectionRange","enforceCursorAssoc","_view$observer$select","modify","lineStart","newRange","posFromDOM","nearest","domView","rootView","_this$childCursor$fin","measureVisibleLineHeights","contentWidth","isWider","scrollDOM","widest","textDirection","childRect","textDirectionAt","_this$childPos2","getComputedStyle","_this15","measure","computeBlockGapDeco","vs","viewports","lineBlockAt","_this16","allDeco","d","lineGapDeco","margins","targetRect","_WidgetType2","_super14","_this17","compositionSurroundingNode","textNode","cView","topNode","_cView","surrounding","reader","CompositionWidget","_WidgetType3","_super15","_this18","startNode","startOffset","DecorationComparator$1","comp","inside","groupAt","categorize","linePos","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","closestOverlap","above","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","closestOffset","closestDY","generalSide","rectBefore","posAtCoords","coords","_b","docTop","paddingTop","docHeight","yOffset","halfLine","defaultLineHeight","bounced","elementAtHeight","posAtCoordsImprecise","elementFromPoint","element","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","isSuspiciousSafariCaretResult","isSuspiciousChromeCaretResult","_domPosAtCoords","isWidget","contentRect","into","round","defaultCharacterWidth","lineWrapping","lineLength","blockAt","moveToLineBoundary","includeWrap","widgetLineBreaks","coordsAtPos","editorRect","moveByChar","by","bidiSpans","check","byGroup","nextCat","moveVertically","distance","startPos","goal","startY","startCoords","documentTop","resolvedGoal","extra","curY","skipAtomicRanges","atoms","moved","_ret","skipAtoms","oldPos","InputState","_this19","lastKeyCode","lastKeyTime","lastTouchTime","lastFocusTime","lastScrollTop","lastScrollLeft","chromeScrollHack","pendingIOSKey","lastSelectionOrigin","lastSelectionTime","lastEscPress","lastContextMenu","scrollHandlers","registeredEvents","customHandlers","compositionFirstChange","compositionEndedAt","compositionPendingKey","compositionPendingChange","mouseSelection","handleEvent","ignoreDuringComposition","keydown","mustFlushObserver","forceFlush","runCustomHandlers","preventDefault","handlers","addEventListener","eventBelongsToEditor","handlerOptions","clientY","mousedown","button","minHeight","setTimeout","drop","pointerEvents","clearTimeout","passive","notifiedFocused","hasFocus","setSelectionOrigin","origin","ensureHandlers","plugins","_this20","runScrollHandlers","scroll","_this21","modifierCodes","delayAndroidKey","pending","PendingKeys","EmacsyPendingKeys","flushIOSKey","startMouseSelection","inputType","dragScrollMargin","dragScrollSpeed","MouseSelection","startEvent","mustSelect","scrollSpeed","scrolling","lastEvent","scrollParent","move","bind","multiple","addsSelectionRange","dragMove","dragMovesSelection","dragging","isInPrimarySelection","getClickType","select","buttons","sx","sy","clientX","setScrollSpeed","removeEventListener","_this22","setInterval","clearInterval","dispatch","_this23","rangeCount","getRangeAt","bubbles","brokenClipboardAPI","capturePaste","cssText","doPaste","input","byLine","linewise","lastLinewiseCopy","lastLine","touchstart","touchmove","makeStyle","basicMouseSelection","mustFocus","rangeForClick","visual","insideY","findPositionSide","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","lastMouseDownTime","detail","lastTime","startSel","removed","startRange","removeRangeAround","_sel$ranges$i","dragstart","dataTransfer","setData","effectAllowed","dropText","direct","dropPos","del","files","read","finishFile","FileReader","onload","readAsText","getData","paste","data","clipboardData","captureCopy","selectionEnd","selectionStart","copiedRange","upto","cut","_copiedRange","clearData","isFocusChange","focusChangeTransaction","getEffect","updateForFocusChange","clearSelectionRange","compositionstart","compositionupdate","compositionend","pendingRecords","flushSoon","Promise","then","contextmenu","beforeinput","startViewHeight","visualViewport","wrappingWhiteSpace","HeightOracle","heightSamples","heightChanged","heightForGap","ceil","heightForLine","setDoc","mustRefreshForWrapping","whiteSpace","mustRefreshForHeights","lineHeights","newHeight","h","refresh","knownHeights","MeasuredHeights","heights","BlockInfo","_content","QueryType","Epsilon","HeightMap","setHeight","oracle","decomposeLeft","decomposeRight","applyChanges","oldDoc","_changes$i","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","brk","HeightMapBranch","HeightMapBlock","_HeightMap","_super16","_this24","_height","_oracle","_value","_type","forEachLine","measured","more","outdated","_HeightMapBlock","_super17","_this25","collapsed","widgetHeight","breaks","HeightMapGap","_HeightMap2","_super18","heightMetrics","firstLine","perLine","perChar","totalPerLine","_this$heightMetrics","guess","lineTop","_oracle$doc$line","ByHeight","_oracle$doc$lineAt","_this$heightMetrics2","linesAbove","_this$heightMetrics3","unshift","singleHeight","_HeightMap3","_super19","_this26","rightTop","rightOffset","subQuery","ByPos","rightStart","balanced","mergeGaps","rebalance","around","relevantWidgetHeight","lineEnd","covering","writtenTo","isCovered","heightRelevant","addBlock","enterLine","_this$oracle$doc$line","blankContent","gap","ensureLine","heightRelevantDecoChanges","DecorationComparator","visiblePixelRange","overflow","parentRect","position","offsetParent","fullPixelRange","LineGap","draw","wrapping","LineGapWidget","same","gA","gB","_WidgetType4","_super20","vertical","_this27","display","ViewState","pixelViewport","inView","paddingBottom","contentDOMWidth","contentDOMHeight","editorHeight","editorWidth","scrolledToBottom","scrollAnchorPos","scrollAnchorHeight","scaler","IdScaler","scrollTarget","printing","defaultTextDirection","visibleRanges","mustEnforceCursorAssoc","guessWrapping","stateDeco","heightMap","getViewport","updateViewportLines","updateForViewport","lineGaps","ensureLineGaps","computeVisibleRanges","_this28","_loop5","_ref4","_this28$lineBlockAt","Viewport","BigScaler","_this29","viewportLines","scale","scaleBlock","contentChanges","heightChanges","prevHeight","scrollAnchor","lineBlockAtHeight","mapViewport","viewportIsAppropriate","updateLines","updateLineGaps","mapLineGaps","selectionSet","domRect","measureContent","dTop","dBottom","_view$docView$measure","vp","viewportChange","fromDOM","marginTop","visibleTop","visibleBottom","viewHeight","topPos","_ref5","_this$heightMap$lineA","_this$heightMap$lineA2","mayMeasure","_this30","halfMargin","doubleMargin","addGap","structure","avoid","_i9","_avoid","gapSize","lineStructure","viewFrom","viewTo","marginHeight","bot","targetFrac","findFraction","spaceFrac","findPosition","marginWidth","fraction","_this31","_ref6","ratio","_ranges$i","counted","_step31$value","vpHeight","domBase","_ref7","domTop","domBottom","_iterator33","_step33","obj","bTop","bBottom","theme","strs","darkTheme","baseThemeID","baseLightID","baseDarkID","lightDarkIDs","buildTheme","scopes","baseTheme$1","boxSizing","outline","flexDirection","alignItems","fontFamily","overflowX","zIndex","flexGrow","flexShrink","wordWrap","padding","WebkitUserModify","whiteSpace_fallback","wordBreak","overflowWrap","caretColor","contain","background","animation","opacity","borderLeft","marginLeft","borderLeftColor","backgroundColor","color","borderRight","textAlign","borderBottom","borderTop","verticalAlign","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","fontSize","borderRadius","border","DOMChange","typeOver","bounds","_view$docView","iHead","iAnchor","newSel","selPoints","selectionPoints","selectionFromPoints","applyDOMChange","domChange","lastKey","_domChange$bounds","preferredPos","preferredSide","findDiff","getAttribute","mainSel","replaced","compositionRange","rangeChanges","selOff","minLen","adjust","_view$observer$select2","observeOptions","characterData","subtree","characterDataOldValue","useCharData","DOMObserver","_this32","selectionChanged","delayedFlush","resizeTimeout","queue","delayedAndroidKey","flushingAndroidKey","lastChange","scrollTargets","intersection","resizeScroll","resizeContent","intersecting","gapIntersection","parentCheck","MutationObserver","mutations","_iterator34","_step34","mut","removedNodes","onCharData","prevValue","onSelectionChange","onResize","onPrint","onScroll","ResizeObserver","observe","requestMeasure","addWindowListeners","IntersectionObserver","entries","listenForScroll","intersectionRatio","onScrollChanged","createEvent","threshold","_this33","_this34","g","disconnect","_iterator35","_step35","wasChanged","safariSelectionRangeHack","_iterator36","_step36","_iterator37","_step37","stop","clear","processRecords","_this35","clearDelayedAndroidKey","flushed","requestAnimationFrame","cancelAnimationFrame","_this36","_iterator38","takeRecords","_step38","records","_iterator39","_step39","record","readMutation","readChange","_this$processRecords","readSelection","handled","rec","childBefore","findChild","childAfter","setWindow","removeWindowListeners","_c","_d","_iterator40","_step40","curView","stopImmediatePropagation","getTargetRanges","execCommand","endContainer","endOffset","curAnchor","_ref8","EditorView","_this37","pluginMap","editorAttrs","contentAttrs","bidiCache","destroyed","updateState","measureScheduled","measureRequests","tabIndex","announceDOM","_dispatch","_root","_iterator41","_step41","mountStyles","_this$state","_this38","redrawn","attrsChanged","_iterator42","_step42","focusFlag","dispatchFocus","pendingKey","setState","_iterator43","_step43","_iterator44","_step44","CachedOrder","updatePlugins","styleModules","showAnnouncements","_iterator45","_step45","listener","newState","hadFocus","_iterator46","_step46","_iterator47","_step47","prevSpecs","newPlugins","_iterator48","_step48","_iterator49","_step49","_iterator50","_step50","_this39","sDOM","_this$viewState","oldViewport","warn","measuring","_ref9","BadMeasure","scrolled","write","newAnchorHeight","_iterator51","_step51","_this40","attrsFromFacet","themeClasses","spellcheck","autocorrect","autocapitalize","translate","contenteditable","role","changedContent","changedEditor","trs","_iterator52","_step52","_iterator53","_step53","announce","div","readMeasured","request","_this41","moveByGroup","_this42","initial","posAtDOM","MaxBidiLine","_iterator54","_step54","entry","_this43","setRoot","_iterator55","_step55","prefix","dark","baseTheme","findFromDOM","querySelector","cache","lastDir","sources","currentPlatform","normalizeKeyName","alt","ctrl","meta","modifiers","handleKeyEvents","runHandlers","getKeymap","keymap","Keymaps","WeakMap","bindings","buildKeymap","runScopeHandlers","scope","storedPrefix","PrefixTimeout","bound","isPrefix","checkPrefix","command","scopeObj","_loop6","run","ourObj","full","binding","_any","_iterator56","_step56","any","_iterator57","_step57","_iterator58","_step58","charCode","isChar","fallthrough","ran","runFor","_iterator59","_step59","cmd","baseName","shiftName","RectangleMarker","forRange","getBase","rectanglesForRange","wrappedLine","lineElt","lineStyle","leftSide","paddingLeft","textIndent","rightSide","paddingRight","startBlock","endBlock","visualStart","visualEnd","pieces","drawForLine","drawForWidget","_ref10","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","_iterator60","_step60","endPos","docLine","_iterator61","_step61","spanFrom","spanTo","sameMarker","LayerView","drawn","measureReq","setOrder","layerOrder","geometryChanged","markers","_this44","old","oldI","_iterator62","_step62","marker","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelection","cursorLayer","selectionLayer","hideNativeSelection","configChanged","cursors","_iterator63","_step63","prim","_iterator64","_step64","animationName","confChange","setBlinkRate","animationDuration","viewportChanged","themeSpec","setDropCursorPos","dropCursorPos","drawDropCursor","_class","readPos","drawCursor","cursorPos","outer","setDropPos","dragover","dragleave","relatedTarget","dragend","dropCursor","iterMatches","lastIndex","matchRanges","maxLength","visible","_iterator65","_step65","_step65$value","MatchDecorator","regexp","decoration","decorate","boundary","_config$maxLength","global","addMatch","match","_view","createDeco","_this45","_iterator66","_step66","_step66$value","changeFrom","changeTo","_f","_t","updateRange","updateFrom","updateTo","_this46","_iterator67","_step67","_loop7","fromLine","toLine","UnicodeRegexpSupport","unicode","Specials","Names","_supportsTabSize","supportsTabSize","styles","MozTabSize","specialCharConfig","specialChars","addSpecialChars","replaceTabs","highlightSpecialChars","specialCharPlugin","_plugin","_class2","decorationCache","decorator","makeDecorator","_this47","TabWidget","SpecialCharWidget","DefaultPlaceholder","placeholder$1","_WidgetType5","_super21","_this48","ph","title","_WidgetType6","_super22","_this49","highlightActiveLine","activeLineHighlighter","lineDeco","_class4","getDeco","lastLineStart","_iterator68","_step68","MaxOff","rectangleFor","startLine","startOff","endOff","startCol","endCol","absoluteColumn","ref","getPos","rectangleSelectionStyle","newStart","newLine","_extend","rectangularSelection","eventFilter","Alt","Control","Shift","Meta","showCrosshair","crosshairCursor","_keys","_class6","isDown","keyup","mousemove","Outside","TooltipViewManager","createTooltipView","tooltips","tooltipViews","_iterator69","_step69","tip","tooltipView","_iterator70","_step70","windowSpace","tooltipConfig","tooltipSpace","knownHeight","tooltipPlugin","_class7","_this51","lastTransaction","measureTimeout","classes","createContainer","readMeasure","writeMeasure","manager","showTooltip","createTooltip","intersectionObserver","measureSoon","observeIntersection","maybeMeasure","container","_iterator71","_step71","tooltip","_this52","shouldMeasure","newConfig","_iterator72","_step72","_iterator73","_step73","arrow","_iterator74","_step74","_this53","editor","tv","getCoords","_ref11","space","others","tView","arrowHeight","noOffset","strictSide","spaceVert","resize","overlap","_iterator75","_step75","toggle","positioned","_iterator76","_step76","borderTopColor","borderBottomColor","showHoverTooltip","HoverTooltipHost","_this54","mounted","createHostedView","hostedView","_iterator77","_step77","_iterator78","_step78","_iterator79","_step79","showHoverTooltipHost","HoverPlugin","setHover","hoverTime","hoverTimeout","restartTimeout","lastMove","checkHover","mouseleave","_this55","startHover","hovered","_this56","posCoords","bidi","isInTooltip","_ref12","isOverRange","detach","hoverTooltip","hoverState","hideOnChange","hideOn","assign","_iterator80","_step80","closeHoverTooltipEffect","getTooltip","panelConfig","topContainer","bottomContainer","_iterator81","_step81","c","getPanel","panel","panelPlugin","panels","_class8","showPanel","PanelGroup","_iterator82","_step82","syncClasses","_iterator83","_step83","_i13","_mount","_iterator84","_step84","scrollMargin","_iterator85","_step85","syncDOM","curDOM","_iterator86","_step86","rm","_iterator87","_step87","_iterator88","_step88","GutterMarker","_RangeValue2","_super24","elementClass","gutterLineClass","renderEmptyElements","elementStyle","lineMarker","widgetMarker","lineMarkerChange","initialSpacer","updateSpacer","activeGutters","gutter","gutters","unfixGutters","gutterView","fixed","_class9","prevViewport","SingleGutterView","_iterator89","_step89","syncGutters","updateGutters","vpA","vpB","vpOverlap","_this57","lineClasses","classSet","contexts","UpdateContext","documentPadding","_iterator90","viewportLineBlocks","_step90","_iterator92","_step92","advanceCursor","_iterator93","_step93","cx","_iterator94","_step94","_iterator95","_step95","_iterator91","_step91","_iterator96","_step96","_iterator97","_step97","_iterator98","_step98","_i14","_gutters2","_iterator99","_step99","offsetWidth","collect","addElement","elements","newElt","GutterElement","extraMarkers","localMarkers","forLine","_this58","spacer","_loop8","prevMarkers","_iterator100","_step100","sameMarkers","setMarkers","domPos","iNew","iOld","skipTo","matched","lineNumberMarkers","lineNumberConfig","formatNumber","_loop9","exists","NumberMarker","_GutterMarker","_super25","_this59","lineNumberGutter","maxLineNumber","lineNumbers","activeLineGutterMarker","_GutterMarker2","_class10","_super26","_this60","activeLineGutterHighlighter","marks","_iterator101","_step101","highlightActiveLineGutter","DefaultBufferLength","nextPropID","NodeProp","perNode","deserialize","NodeType","closedBy","openedBy","group","contextHash","lookAhead","noProps","props","skipped","src","groups","NodeSet","newTypes","_len","newProps","CachedNode","CachedInnerNode","IterMode","Tree","positions","_step5$value","overlay","tree","isError","JSON","stringify","TreeCursor","cursorAt","moveTo","_tree","TreeNode","resolveNode","resolveInner","iterate","enter","leave","_spec$from","anon","IncludeAnonymous","entered","isAnonymous","balance","balanceRange","propValues","makeTree","buildTree","FlatBufferCursor","buffer","fork","TreeBuffer","childString","endIndex","pick","checkSide","startI","endI","Uint16Array","enterUnfinishedNodesBefore","prevSibling","overlays","IgnoreOverlays","_parent","nextChild","_parent$_tree","ExcludeBuffers","BufferNode","BufferContext","hasChild","IgnoreMounts","rPos","_step7$value","nextSignificantParent","toTree","getChild","getChildren","matchContext","matchNodeContext","externalSibling","parentStart","bufferNode","yieldNode","yieldBuf","_this$buffer","_yield","enterChild","sibling","atLastNode","_this$_tree","_parent3","depth","mustLeave","nodeSet","_data$maxBufferLength","maxBufferLength","_data$reused","reused","_data$minRepeatType","minRepeatType","takeNode","minPos","inRepeat","lookAheadAtStart","findBufferSize","copyToBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","make","makeBalanced","lastI","lookAheadProp","pair","maxSize","minStart","nodeSize","localSkipped","nodeStart","bufferStart","topID","nodeSizeCache","balanceType","mkTop","mkTree","maxChild","divide","groupFrom","groupStart","groupSize","nextSize","only","NodeWeakMap","setBuffer","getBuffer","cursorSet","cursorGet","TreeFragment","addTree","fragments","partial","minGap","fI","nextF","cI","nextC","nextPos","fFrom","fTo","Parser","startParse","StringInput","createParse","parse","advance","nextTagID","Tag","modified","defineModifier","Modifier","nextModifierID","instances","mods","powerSet","styleTags","byName","tags","rest","rule","Rule","ruleNodeProp","tagHighlighter","_ref$all","all","tagClass","highlightTags","highlighters","highlighter","highlightTree","putStyle","HighlightBuilder","highlightRange","startSpan","inheritedClass","isTop","getStyleTags","tagCls","opaque","innerHighlighters","rangeFrom","rangeTo","comment","typeName","propertyName","literal","heading","keyword","operator","punctuation","bracket","lineComment","blockComment","docComment","variableName","attributeName","labelName","namespace","macroName","docString","character","attributeValue","integer","bool","escape","url","self","atom","unit","modifier","operatorKeyword","controlKeyword","definitionKeyword","moduleKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","separator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","list","quote","emphasis","strong","link","monospace","strikethrough","deleted","invalid","documentMeta","processingInstruction","definition","constant","standard","special","languageDataProp","defineLanguageFacet","baseData","sublanguageProp","Language","parser","extraExtensions","defineProperty","syntaxTree","language","topNodeAt","innerNode","sublang","isActiveAt","findRegions","lang","allowsNesting","explore","topLang","LRLanguage","_Language","configure","hasWrappers","DocInput","syncTo","stringStart","currentContext","ParseContext","treeLen","scheduleOn","tempSkipped","work","until","isDone","takeTree","withContext","endTime","stoppedAt","stopAt","withoutTempSkipped","parsedPos","cutFragments","updateViewport","startLen","_this$skipped$i","reset","skipUntilInView","frags","getSkippingParser","_Parser","LanguageState","newCx","vpTo","parseState","requestIdle","callback","timeout","requestIdleCallback","idle","cancelIdleCallback","isInputPending","scheduling","parseWorker","ParseWorker","working","workScheduled","chunkBudget","scheduleWork","checkAsyncSchedule","deadline","_this$view","timeRemaining","viewportFirst","isWorking","languages","LanguageSupport","support","indentService","indentUnit","getIndentUnit","indentString","cols","ts","getIndentation","IndentContext","service","syntaxIndentation","_this$options","simulateBreak","simulateDoubleBreak","textAfterPos","_this$lineAt","column","_this$lineAt2","override","overrideIndentation","search","lineIndent","_this$lineAt3","overriden","indentNodeProp","ast","indentFrom","ignoreClosed","indentStrategy","strategy","close","closed","delimitedStrategy","topIndent","TreeIndentContext","_IndentContext","atBreak","isParent","_continue","bracketedAligned","openToken","sim","openLine","isSkipped","delimitedIndent","closing","_ref$align","align","_ref$units","units","closedAt","textAfter","aligned","baseIndent","flatIndent","continuedIndent","except","_ref2$units","matchExcept","DontIndentBeyond","indentOnInput","indent","norm","foldService","foldNodeProp","foldInside","syntaxFolding","isUnfinished","foldable","mapRange","foldEffect","unfoldEffect","selectedLines","foldState","folded","foldExists","foldWidget","onSelection","findFold","maybeEnable","codeFolding","foldCode","announceFold","unfoldCode","fold","lineFrom","lineTo","foldAll","unfoldAll","foldKeymap","defaultConfig","placeholderDOM","placeholderText","foldConfig","onclick","foldGutterDefaults","openText","closedText","markerDOM","foldingChanged","FoldMarker","foldGutter","fullConfig","canFold","canUnfold","_class3","buildMarkers","click","HighlightStyle","modSpec","def","scopeOpt","module","themeType","highlighterFacet","fallbackHighlighter","getHighlighters","syntaxHighlighting","treeHighlighter","fallback","TreeHighlighter","markCache","buildDeco","styleChange","_step21$value","defaultHighlightStyle","textDecoration","fontWeight","fontStyle","DefaultScanDist","DefaultBrackets","bracketMatchingConfig","afterCursor","brackets","maxScanDistance","renderMatch","defaultRenderMatch","matchingMark","nonmatchingMark","bracketMatchingState","matchBrackets","bracketMatchingUnique","bracketMatching","bracketMatchingHandle","matchingNodes","byProp","findHandle","hasHandle","matches","handle","matchMarkedBrackets","matchPlainBrackets","_pos","token","matching","firstToken","endHandle","tokenType","startCh","startToken","basePos","noTokens","typeArray","warned","defaultTable","_i","_arr$_i","legacyName","createTokenType","warnForPart","msg","tagStr","_defineProperty","toggleComment","getConfig","toggleLineComment","toggleBlockCommentByLine","option","changeLineComment","toggleBlockComment","changeBlockComment","o","selectedLineRanges","SearchMargin","findBlockComment","textBefore","spaceBefore","spaceAfter","beforeOff","startText","endText","startSpace","endSpace","charAt","tokens","comments","_comment","prevLine","_step2$value","minIndent","_step3$value","changeSet","_step4$value","fromHistory","isolateHistory","invertedEffects","historyConfig","minDepth","newGroupDelay","joinToEvent","isAdjacent","adj","changeEnd","historyField_","HistoryState","fromHist","item","HistEvent","fromTransaction","undone","updateBranch","addSelection","isolate","addMapping","addChanges","history","undo","redo","historyState","undoSelection","redoSelection","startSelection","selectionsAfter","setSelAfter","selections","branch","newEvent","newBranch","eqSelectionShape","conc","MaxSelectionsPerEvent","sels","popSelection","addMappingToBranch","mapEvent","extraSelections","mappedChanges","fullMapping","joinableUserEvent","prevTime","prevUserEvent","historyKeymap","updateSel","setSel","moveSel","how","rangeEnd","cursorByChar","ltrAtCursor","cursorCharLeft","cursorCharRight","cursorByGroup","cursorGroupLeft","cursorGroupRight","interestingNode","bracketProp","moveBySyntax","cursorSyntaxLeft","cursorSyntaxRight","cursorByLine","cursorLineUp","cursorLineDown","pageInfo","selfScroll","marginBottom","cursorByPage","page","scrollRect","scrollBottom","cursorPageUp","cursorPageDown","moveByLineBoundary","cursorLineBoundaryForward","cursorLineBoundaryBackward","cursorLineBoundaryLeft","cursorLineBoundaryRight","cursorLineStart","cursorLineEnd","toMatchingBracket","cursorMatchingBracket","extendSel","selectByChar","selectCharLeft","selectCharRight","selectByGroup","selectGroupLeft","selectGroupRight","selectSyntaxLeft","selectSyntaxRight","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","selectLineBoundaryLeft","selectLineBoundaryRight","selectLineStart","selectLineEnd","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","selectAll","selectLine","selectedLineBlocks","_ref13","selectParentSyntax","_ref14","simplifySelection","_ref15","deleteBy","towards","skipAtomic","deleteByChar","targetPos","deleteCharBackward","deleteCharForward","deleteByGroup","nextChar","deleteGroupBackward","deleteGroupForward","deleteToLineEnd","deleteToLineStart","splitLine","_ref17","transposeChars","_ref18","blocks","moveLine","nextLine","moveLineUp","_ref19","moveLineDown","_ref20","copyLine","copyLineUp","_ref21","copyLineDown","_ref22","deleteLine","_ref23","isBetweenBrackets","insertNewlineAndIndent","newlineAndIndent","insertBlankLine","atEof","_ref25","explode","changeBySelectedLine","atLine","indentSelection","_ref26","indentMore","_ref27","indentLess","_ref28","keep","emacsStyleKeymap","standardKeymap","defaultKeymap","crelt","basicNormalize","normalize","SearchCursor","query","bufferPos","peek","nextOverlapping","baseFlags","RegExpCursor","MultilineRegExpCursor","ignoreCase","curLineStart","matchPos","toCharEnd","flattened","FlattenedDoc","cached","cachedFrom","validRegExp","createLineDialog","onkeydown","dialogEffect","go","onsubmit","_match","sign","ln","cl","percent","pc","dialogField","gotoLine","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","wholeWords","highlightConfig","highlightSelectionMatches","defaultTheme","matchHighlighter","matchDeco","mainMatchDeco","insideWordBoundaries","insideWord","word","trim","_cursor$value","selectWord","findNextOccurrence","_state$selection","fullWord","_cycled","_cursor","cycled","selectNextOccurrence","searchedText","searchConfigFacet","caseSensitive","wholeWord","createPanel","SearchPanel","scrollToMatch","SearchQuery","valid","unquoted","unquote","RegExpQuery","StringQuery","getCursor","st","regexpCursor","stringCursor","stringWordTest","categorizer","buf","bufPos","charBefore","charAfter","_QueryType","nextMatch","prevMatchInRange","prevMatch","getReplacement","_result","matchAll","highlight","regexpWordTest","_QueryType2","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","selected","searchCommand","openSearchPanel","findNext","announceMatch","selectSearchInput","findPrevious","selectMatches","selectSelectionMatches","_sel$main","replaceNext","_state$selection$main","replacement","replaceAll","announceText","_e","selText","getSearchInput","searchInput","searchExtensions","closeSearchPanel","searchKeymap","commit","searchField","placeholder","form","onchange","onkeyup","replaceField","caseField","checked","reField","wordField","setQuery","AnnounceMargin","Break","font","marginRight","CompletionContext","explicit","abortListeners","tokenBefore","matchBefore","expr","ensureAnchor","toSet","chars","words","prefixMatch","label","completeFromList","validFor","ifNotIn","Option","completion","score","addStart","addEnd","pickedCompletion","insertCompletionText","SourceCache","asSource","startCompletionEffect","closeCompletionEffect","FuzzyMatcher","pattern","byWord","upper","astral","firstSize","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","wordAdjacent","prevType","completionConfig","activateOnTyping","selectOnOpen","closeOnBlur","maxRenderedOptions","tooltipClass","optionClass","aboveCursor","icons","addToOptions","positionInfo","defaultPositionInfo","compareCompletions","localeCompare","interactionDelay","joinClass","info","narrow","maxWidth","spaceLeft","spaceRight","infoWidth","infoHeight","spaceBelow","moveCompletionSelection","cState","completionState","disabled","timestamp","step","offsetHeight","setSelectedEffect","acceptCompletion","applyCompletion","startCompletion","closeCompletion","RunningQuery","updates","DebounceTime","MaxUpdateCount","MinAbortTime","completionPlugin","debounceUpdate","running","debounceAccept","startQuery","doesReset","getUserEvent","_query$updates","q","startUpdate","explicitPos","aborted","scheduleAccept","accept","ActiveResult","hasResult","ActiveSource","setActiveEffect","dialog","optionContent","_icon$classList","icon","_s","labelElt","detailElt","rangeAroundSelected","CompletionTooltip","stateField","placeInfoReq","measureInfo","placeInfo","currentClass","_cState$open","updateTooltipClass","createListBox","prevState","updateSelectedOption","infoResult","addInfoPane","opt","hasAttribute","listRect","infoRect","selRect","ul","curSection","_options$i","section","header","li","completionTooltip","boost","sortOptions","addOption","getMatch","matcher","sectionOrder","cmp","CompletionDialog","setSelected","makeAttrs","selectedValue","CompletionState","sameResults","baseAttrs","handleUserEvent","handleChange","_ActiveSource","checkValid","maxWidth_fallback","maxHeight","listStyle","textOverflow","FieldPos","FieldRange","Snippet","fieldPositions","instantiate","lineObj","tabs","template","esc","fieldMarker","fieldRange","ActiveSnippet","selectionInsideField","moveToField","snippetState","fieldSelection","snippet","_snippet$instantiate","addSnippetKeymap","snippetPointerHandler","moveField","clearSnippet","nextSnippetField","prevSnippetField","defaultSnippetKeymap","snippetKeymap","maps","snippetCompletion","stringPrefixes","closeBracketEffect","closedBracket","bracketState","prevLineStart","closeBrackets","definedClosing","compositionStarted","insertBracket","deleteBracketPair","dont","prevChar","closeBracketsKeymap","tok","handleSame","handleOpen","closedBracketAt","handleClose","closeBefore","_open","allowTriple","isTriple","canStartStringAt","probablyInString","quoteToken","prefixes","maxPrefix","quotePos","charCat","autocompletion","completionKeymapExt","completionKeymap","SelectedDiagnostic","diagnostic","LintState","diagnostics","markedDiagnostics","diagnosticFilter","lintConfig","markerFilter","DiagnosticWidget","severity","findDiagnostic","hideTooltip","setDiagnosticsEffect","maybeEnableLint","lintState","lintExtensions","movePanelSelection","selPos","LintPanel","activeMark","lintTooltip","_view$state$field","stackStart","stackEnd","tooltipFilter","diagnosticsTooltip","renderDiagnostic","openLintPanel","closeLintPanel","nextDiagnostic","lintKeymap","delay","needsRefresh","u","assignKeys","actions","assigned","inPanel","renderMessage","message","action","fired","keyIndex","nameElt","onmousedown","PanelItem","items","moveSelection","selectedIndex","_this$view$state$fiel","needsSync","newSelectedItem","_start","_end","svg","encodeURIComponent","underline","overflowY","background_fallback","color_fallback","_state$field","basicSetup"],"mappings":"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G,KAAK,CAAC,GAAGA,KAAK,CAAC7B,QAAQ,MAAM,IAAI,IAAIr5B,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACogB,IAAI,KAAK,IAAI,CAAA;AACrI,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAAqjC,UAAA,CAAA;AAAA,CAAA,GAAA;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,UAAU,CAACxyB,WAAW,GAAGA,WAAW,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACAwyB,UAAU,CAACv0B,YAAY,GAAGA,cAAY,CAAA;AACtC;AACA;AACA;AACA;AACAu0B,UAAU,CAACt0B,iBAAiB,GAAGA,iBAAiB,CAAA;AAChD;AACA;AACA;AACA;AACA;AACA;AACAs0B,UAAU,CAACr0B,oBAAoB,GAAGA,oBAAoB,CAAA;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACAq0B,UAAU,CAACz0B,aAAa,GAAGA,aAAa,CAAA;AACxC;AACA;AACA;AACA;AACAy0B,UAAU,CAACx0B,cAAc,GAAGA,cAAc,CAAA;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAw0B,UAAU,CAAC1zB,QAAQ,GAAGA,QAAQ,CAAA;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA0zB,UAAU,CAAC10B,mBAAmB,GAAGA,mBAAmB,CAAA;AACpD;AACA;AACA;AACA;AACA;AACA;AACA00B,UAAU,CAAC7d,kBAAkB,GAAG9W,oBAAoB,CAAA;AACpD;AACA;AACA;AACA;AACA;AACA;AACA20B,UAAU,CAAC50B,uBAAuB,GAAGA,uBAAuB,CAAA;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA40B,UAAU,CAACl1B,WAAW,GAAGA,WAAW,CAAA;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAk1B,UAAU,CAAC3yB,YAAY,GAAGA,YAAY,CAAA;AACtC;AACA;AACA;AACA;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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}