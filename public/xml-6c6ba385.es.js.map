{"version":3,"file":"xml-6c6ba385.es.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.38.0/node_modules/monaco-editor/esm/vs/basic-languages/xml/xml.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.38.0(0e330ae453813de4e6cf272460fb79c7117073d0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/basic-languages/xml/xml.ts\nvar conf = {\n  comments: {\n    blockComment: [\"<!--\", \"-->\"]\n  },\n  brackets: [[\"<\", \">\"]],\n  autoClosingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  surroundingPairs: [\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  onEnterRules: [\n    {\n      beforeText: new RegExp(`<([_:\\\\w][_:\\\\w-.\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      afterText: /^<\\/([_:\\w][_:\\w-.\\d]*)\\s*>$/i,\n      action: {\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\n      }\n    },\n    {\n      beforeText: new RegExp(`<(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`, \"i\"),\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\n    }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".xml\",\n  ignoreCase: true,\n  qualifiedName: /(?:[\\w\\.\\-]+:)?[\\w\\.\\-]+/,\n  tokenizer: {\n    root: [\n      [/[^<&]+/, \"\"],\n      { include: \"@whitespace\" },\n      [/(<)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"tag\", next: \"@tag\" }]],\n      [\n        /(<\\/)(@qualifiedName)(\\s*)(>)/,\n        [{ token: \"delimiter\" }, { token: \"tag\" }, \"\", { token: \"delimiter\" }]\n      ],\n      [/(<\\?)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/(<\\!)(@qualifiedName)/, [{ token: \"delimiter\" }, { token: \"metatag\", next: \"@tag\" }]],\n      [/<\\!\\[CDATA\\[/, { token: \"delimiter.cdata\", next: \"@cdata\" }],\n      [/&\\w+;/, \"string.escape\"]\n    ],\n    cdata: [\n      [/[^\\]]+/, \"\"],\n      [/\\]\\]>/, { token: \"delimiter.cdata\", next: \"@pop\" }],\n      [/\\]/, \"\"]\n    ],\n    tag: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\"]*\"|'[^']*')/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [\n        /(@qualifiedName)(\\s*=\\s*)(\"[^\">?\\/]*|'[^'>?\\/]*)(?=[\\?\\/]\\>)/,\n        [\"attribute.name\", \"\", \"attribute.value\"]\n      ],\n      [/(@qualifiedName)(\\s*=\\s*)(\"[^\">]*|'[^'>]*)/, [\"attribute.name\", \"\", \"attribute.value\"]],\n      [/@qualifiedName/, \"attribute.name\"],\n      [/\\?>/, { token: \"delimiter\", next: \"@pop\" }],\n      [/(\\/)(>)/, [{ token: \"tag\" }, { token: \"delimiter\", next: \"@pop\" }]],\n      [/>/, { token: \"delimiter\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/<!--/, { token: \"comment\", next: \"@comment\" }]\n    ],\n    comment: [\n      [/[^<\\-]+/, \"comment.content\"],\n      [/-->/, { token: \"comment\", next: \"@pop\" }],\n      [/<!--/, \"comment.content.invalid\"],\n      [/[<\\-]/, \"comment.content\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","_typeof","_iterator","_createForOfIteratorHelper","_step","_loop","key","value","call","get","enumerable","s","n","done","err","e","f","__reExport","target","mod","secondTarget","monaco_editor_core_exports","monaco_editor_core_star","conf","comments","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","afterText","action","indentAction","languages","IndentAction","IndentOutdent","Indent","language","defaultToken","tokenPostfix","ignoreCase","qualifiedName","tokenizer","root","include","token","next","cdata","tag","whitespace","comment"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,SAAS,GAAGC,MAAM,CAACC,cAAc,CAAA;AACrC,IAAIC,gBAAgB,GAAGF,MAAM,CAACG,wBAAwB,CAAA;AACtD,IAAIC,iBAAiB,GAAGJ,MAAM,CAACK,mBAAmB,CAAA;AAClD,IAAIC,YAAY,GAAGN,MAAM,CAACO,SAAS,CAACC,cAAc,CAAA;AAClD,IAAIC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,EAAE,EAAEC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAK;AAC5C,EAAA,IAAIF,IAAI,IAAIG,OAAA,CAAOH,IAAI,CAAA,KAAK,QAAQ,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAE;AAAA,IAAA,IAAAI,SAAA,GAAAC,0BAAA,CAClDZ,iBAAiB,CAACO,IAAI,CAAC,CAAA;MAAAM,KAAA,CAAA;AAAA,IAAA,IAAA;MAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACrC;AAAA,QAAA,IADOC,GAAG,GAAAF,KAAA,CAAAG,KAAA,CAAA;AACV,QAAA,IAAI,CAACd,YAAY,CAACe,IAAI,CAACX,EAAE,EAAES,GAAG,CAAC,IAAIA,GAAG,KAAKP,MAAM,EAC/Cb,SAAS,CAACW,EAAE,EAAES,GAAG,EAAE;UAAEG,GAAG,EAAE,SAAAA,GAAA,GAAA;YAAA,OAAMX,IAAI,CAACQ,GAAG,CAAC,CAAA;AAAA,WAAA;AAAEI,UAAAA,UAAU,EAAE,EAAEV,IAAI,GAAGX,gBAAgB,CAACS,IAAI,EAAEQ,GAAG,CAAC,CAAC,IAAIN,IAAI,CAACU,UAAAA;AAAW,SAAC,CAAC,CAAA;OAAC,CAAA;MAFvH,KAAAR,SAAA,CAAAS,CAAA,EAAAP,EAAAA,CAAAA,CAAAA,KAAA,GAAAF,SAAA,CAAAU,CAAA,EAAA,EAAAC,IAAA,GAAA;QAAAR,KAAA,EAAA,CAAA;AAAA,OAAA;AAEuH,KAAA,CAAA,OAAAS,GAAA,EAAA;MAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA,CAAA,CAAA;AAAA,KAAA,SAAA;AAAAZ,MAAAA,SAAA,CAAAc,CAAA,EAAA,CAAA;AAAA,KAAA;AACzH,GAAA;AACA,EAAA,OAAOnB,EAAE,CAAA;AACX,CAAC,CAAA;AACD,IAAIoB,UAAU,GAAG,SAAbA,UAAUA,CAAIC,MAAM,EAAEC,GAAG,EAAEC,YAAY,EAAA;AAAA,EAAA,OAAMxB,WAAW,CAACsB,MAAM,EAAEC,GAAG,EAAE,SAAS,CAAC,EAAEC,YAAY,IAAIxB,WAAW,CAACwB,YAAY,EAAED,GAAG,EAAE,SAAS,CAAC,CAAA;AAAA,CAAC,CAAA;;AAEhJ;AACA,IAAIE,0BAA0B,GAAG,EAAE,CAAA;AACnCJ,UAAU,CAACI,0BAA0B,EAAEC,uBAAuB,CAAC,CAAA;;AAG/D;AACA,IAAIC,IAAI,GAAG;AACTC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAAC,MAAM,EAAE,KAAK,CAAA;GAC7B;AACDC,EAAAA,QAAQ,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACtBC,EAAAA,gBAAgB,EAAE,CAChB;AAAEC,IAAAA,IAAI,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAA;AAAI,GAAC,EACzB;AAAED,IAAAA,IAAI,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAA;AAAI,GAAC,EACzB;AAAED,IAAAA,IAAI,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAA;AAAI,GAAC,CAC1B;AACDC,EAAAA,gBAAgB,EAAE,CAChB;AAAEF,IAAAA,IAAI,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAA;AAAI,GAAC,EACzB;AAAED,IAAAA,IAAI,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAA;AAAI,GAAC,EACzB;AAAED,IAAAA,IAAI,EAAE,GAAG;AAAEC,IAAAA,KAAK,EAAE,GAAA;AAAI,GAAC,CAC1B;AACDE,EAAAA,YAAY,EAAE,CACZ;AACEC,IAAAA,UAAU,EAAE,IAAIC,MAAM,CAAA,6CAAA,EAAgD,GAAG,CAAC;AAC1EC,IAAAA,SAAS,EAAE,+BAA+B;AAC1CC,IAAAA,MAAM,EAAE;AACNC,MAAAA,YAAY,EAAEf,0BAA0B,CAACgB,SAAS,CAACC,YAAY,CAACC,aAAAA;AAClE,KAAA;AACF,GAAC,EACD;AACEP,IAAAA,UAAU,EAAE,IAAIC,MAAM,CAAA,qCAAA,EAAwC,GAAG,CAAC;AAClEE,IAAAA,MAAM,EAAE;AAAEC,MAAAA,YAAY,EAAEf,0BAA0B,CAACgB,SAAS,CAACC,YAAY,CAACE,MAAAA;AAAO,KAAA;GAClF,CAAA;AAEL,EAAC;AACD,IAAIC,QAAQ,GAAG;AACbC,EAAAA,YAAY,EAAE,EAAE;AAChBC,EAAAA,YAAY,EAAE,MAAM;AACpBC,EAAAA,UAAU,EAAE,IAAI;AAChBC,EAAAA,aAAa,EAAE,0BAA0B;AACzCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CACJ,CAAC,QAAQ,EAAE,EAAE,CAAC,EACd;AAAEC,MAAAA,OAAO,EAAE,aAAA;AAAc,KAAC,EAC1B,CAAC,qBAAqB,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE,WAAA;AAAY,KAAC,EAAE;AAAEA,MAAAA,KAAK,EAAE,KAAK;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,CAAC,EACjF,CACE,+BAA+B,EAC/B,CAAC;AAAED,MAAAA,KAAK,EAAE,WAAA;AAAY,KAAC,EAAE;AAAEA,MAAAA,KAAK,EAAE,KAAA;KAAO,EAAE,EAAE,EAAE;AAAEA,MAAAA,KAAK,EAAE,WAAA;AAAY,KAAC,CAAC,CACvE,EACD,CAAC,uBAAuB,EAAE,CAAC;AAAEA,MAAAA,KAAK,EAAE,WAAA;AAAY,KAAC,EAAE;AAAEA,MAAAA,KAAK,EAAE,SAAS;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,CAAC,EACvF,CAAC,uBAAuB,EAAE,CAAC;AAAED,MAAAA,KAAK,EAAE,WAAA;AAAY,KAAC,EAAE;AAAEA,MAAAA,KAAK,EAAE,SAAS;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,CAAC,EACvF,CAAC,cAAc,EAAE;AAAED,MAAAA,KAAK,EAAE,iBAAiB;AAAEC,MAAAA,IAAI,EAAE,QAAA;AAAS,KAAC,CAAC,EAC9D,CAAC,OAAO,EAAE,eAAe,CAAC,CAC3B;IACDC,KAAK,EAAE,CACL,CAAC,QAAQ,EAAE,EAAE,CAAC,EACd,CAAC,OAAO,EAAE;AAAEF,MAAAA,KAAK,EAAE,iBAAiB;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,EACrD,CAAC,IAAI,EAAE,EAAE,CAAC,CACX;IACDE,GAAG,EAAE,CACH,CAAC,YAAY,EAAE,EAAE,CAAC,EAClB,CAAC,4CAA4C,EAAE,CAAC,gBAAgB,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC,EACzF,CACE,8DAA8D,EAC9D,CAAC,gBAAgB,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAC1C,EACD,CAAC,4CAA4C,EAAE,CAAC,gBAAgB,EAAE,EAAE,EAAE,iBAAiB,CAAC,CAAC,EACzF,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,EACpC,CAAC,KAAK,EAAE;AAAEH,MAAAA,KAAK,EAAE,WAAW;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,EAC7C,CAAC,SAAS,EAAE,CAAC;AAAED,MAAAA,KAAK,EAAE,KAAA;AAAM,KAAC,EAAE;AAAEA,MAAAA,KAAK,EAAE,WAAW;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,CAAC,EACrE,CAAC,GAAG,EAAE;AAAED,MAAAA,KAAK,EAAE,WAAW;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,CAC5C;IACDG,UAAU,EAAE,CACV,CAAC,YAAY,EAAE,EAAE,CAAC,EAClB,CAAC,MAAM,EAAE;AAAEJ,MAAAA,KAAK,EAAE,SAAS;AAAEC,MAAAA,IAAI,EAAE,UAAA;AAAW,KAAC,CAAC,CACjD;IACDI,OAAO,EAAE,CACP,CAAC,SAAS,EAAE,iBAAiB,CAAC,EAC9B,CAAC,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAE,SAAS;AAAEC,MAAAA,IAAI,EAAE,MAAA;AAAO,KAAC,CAAC,EAC3C,CAAC,MAAM,EAAE,yBAAyB,CAAC,EACnC,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAA;AAEhC,GAAA;AACF;;;;","x_google_ignoreList":[0]}