{"version":3,"file":"csharp-d35593e5.es.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.38.0/node_modules/monaco-editor/esm/vs/basic-languages/csharp/csharp.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.38.0(0e330ae453813de4e6cf272460fb79c7117073d0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/csharp/csharp.ts\nvar conf = {\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\$\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: \"<\", close: \">\" },\n    { open: \"'\", close: \"'\" },\n    { open: '\"', close: '\"' }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*#region\\\\b\"),\n      end: new RegExp(\"^\\\\s*#endregion\\\\b\")\n    }\n  }\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".cs\",\n  brackets: [\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\n  ],\n  keywords: [\n    \"extern\",\n    \"alias\",\n    \"using\",\n    \"bool\",\n    \"decimal\",\n    \"sbyte\",\n    \"byte\",\n    \"short\",\n    \"ushort\",\n    \"int\",\n    \"uint\",\n    \"long\",\n    \"ulong\",\n    \"char\",\n    \"float\",\n    \"double\",\n    \"object\",\n    \"dynamic\",\n    \"string\",\n    \"assembly\",\n    \"is\",\n    \"as\",\n    \"ref\",\n    \"out\",\n    \"this\",\n    \"base\",\n    \"new\",\n    \"typeof\",\n    \"void\",\n    \"checked\",\n    \"unchecked\",\n    \"default\",\n    \"delegate\",\n    \"var\",\n    \"const\",\n    \"if\",\n    \"else\",\n    \"switch\",\n    \"case\",\n    \"while\",\n    \"do\",\n    \"for\",\n    \"foreach\",\n    \"in\",\n    \"break\",\n    \"continue\",\n    \"goto\",\n    \"return\",\n    \"throw\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"lock\",\n    \"yield\",\n    \"from\",\n    \"let\",\n    \"where\",\n    \"join\",\n    \"on\",\n    \"equals\",\n    \"into\",\n    \"orderby\",\n    \"ascending\",\n    \"descending\",\n    \"select\",\n    \"group\",\n    \"by\",\n    \"namespace\",\n    \"partial\",\n    \"class\",\n    \"field\",\n    \"event\",\n    \"method\",\n    \"param\",\n    \"public\",\n    \"protected\",\n    \"internal\",\n    \"private\",\n    \"abstract\",\n    \"sealed\",\n    \"static\",\n    \"struct\",\n    \"readonly\",\n    \"volatile\",\n    \"virtual\",\n    \"override\",\n    \"params\",\n    \"get\",\n    \"set\",\n    \"add\",\n    \"remove\",\n    \"operator\",\n    \"true\",\n    \"false\",\n    \"implicit\",\n    \"explicit\",\n    \"interface\",\n    \"enum\",\n    \"null\",\n    \"async\",\n    \"await\",\n    \"fixed\",\n    \"sizeof\",\n    \"stackalloc\",\n    \"unsafe\",\n    \"nameof\",\n    \"when\"\n  ],\n  namespaceFollows: [\"namespace\", \"using\"],\n  parenFollows: [\"if\", \"for\", \"while\", \"switch\", \"foreach\", \"using\", \"catch\", \"when\"],\n  operators: [\n    \"=\",\n    \"??\",\n    \"||\",\n    \"&&\",\n    \"|\",\n    \"^\",\n    \"&\",\n    \"==\",\n    \"!=\",\n    \"<=\",\n    \">=\",\n    \"<<\",\n    \"+\",\n    \"-\",\n    \"*\",\n    \"/\",\n    \"%\",\n    \"!\",\n    \"~\",\n    \"++\",\n    \"--\",\n    \"+=\",\n    \"-=\",\n    \"*=\",\n    \"/=\",\n    \"%=\",\n    \"&=\",\n    \"|=\",\n    \"^=\",\n    \"<<=\",\n    \">>=\",\n    \">>\",\n    \"=>\"\n  ],\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  tokenizer: {\n    root: [\n      [\n        /\\@?[a-zA-Z_]\\w*/,\n        {\n          cases: {\n            \"@namespaceFollows\": {\n              token: \"keyword.$0\",\n              next: \"@namespace\"\n            },\n            \"@keywords\": {\n              token: \"keyword.$0\",\n              next: \"@qualified\"\n            },\n            \"@default\": { token: \"identifier\", next: \"@qualified\" }\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [\n        /}/,\n        {\n          cases: {\n            \"$S2==interpolatedstring\": {\n              token: \"string.quote\",\n              next: \"@pop\"\n            },\n            \"$S2==litinterpstring\": {\n              token: \"string.quote\",\n              next: \"@pop\"\n            },\n            \"@default\": \"@brackets\"\n          }\n        }\n      ],\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[<>](?!@symbols)/, \"@brackets\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"delimiter\",\n            \"@default\": \"\"\n          }\n        }\n      ],\n      [/[0-9_]*\\.[0-9_]+([eE][\\-+]?\\d+)?[fFdD]?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F_]+/, \"number.hex\"],\n      [/0[bB][01_]+/, \"number.hex\"],\n      [/[0-9_]+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, { token: \"string.quote\", next: \"@string\" }],\n      [/\\$\\@\"/, { token: \"string.quote\", next: \"@litinterpstring\" }],\n      [/\\@\"/, { token: \"string.quote\", next: \"@litstring\" }],\n      [/\\$\"/, { token: \"string.quote\", next: \"@interpolatedstring\" }],\n      [/'[^\\\\']'/, \"string\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\n      [/'/, \"string.invalid\"]\n    ],\n    qualified: [\n      [\n        /[a-zA-Z_][\\w]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      [/\\./, \"delimiter\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    namespace: [\n      { include: \"@whitespace\" },\n      [/[A-Z]\\w*/, \"namespace\"],\n      [/[\\.=]/, \"delimiter\"],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [\"\\\\*/\", \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    litstring: [\n      [/[^\"]+/, \"string\"],\n      [/\"\"/, \"string.escape\"],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    litinterpstring: [\n      [/[^\"{]+/, \"string\"],\n      [/\"\"/, \"string.escape\"],\n      [/{{/, \"string.escape\"],\n      [/}}/, \"string.escape\"],\n      [/{/, { token: \"string.quote\", next: \"root.litinterpstring\" }],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    interpolatedstring: [\n      [/[^\\\\\"{]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/{{/, \"string.escape\"],\n      [/}}/, \"string.escape\"],\n      [/{/, { token: \"string.quote\", next: \"root.interpolatedstring\" }],\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/^[ \\t\\v\\f]*#((r)|(load))(?=\\s)/, \"directive.csx\"],\n      [/^[ \\t\\v\\f]*#\\w.*$/, \"namespace.cpp\"],\n      [/[ \\t\\v\\f\\r\\n]+/, \"\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","token","keywords","namespaceFollows","parenFollows","operators","symbols","escapes","tokenizer","root","cases","next","include","qualified","namespace","comment","string","litstring","litinterpstring","interpolatedstring","whitespace"],"mappings":"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","x_google_ignoreList":[0]}