{"version":3,"file":"graphql-aa7a72bd.es.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.38.0/node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.38.0(0e330ae453813de4e6cf272460fb79c7117073d0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/graphql/graphql.ts\nvar conf = {\n  comments: {\n    lineComment: \"#\"\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"\"\"', close: '\"\"\"', notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"\"\"', close: '\"\"\"' },\n    { open: '\"', close: '\"' }\n  ],\n  folding: {\n    offSide: true\n  }\n};\nvar language = {\n  defaultToken: \"invalid\",\n  tokenPostfix: \".gql\",\n  keywords: [\n    \"null\",\n    \"true\",\n    \"false\",\n    \"query\",\n    \"mutation\",\n    \"subscription\",\n    \"extend\",\n    \"schema\",\n    \"directive\",\n    \"scalar\",\n    \"type\",\n    \"interface\",\n    \"union\",\n    \"enum\",\n    \"input\",\n    \"implements\",\n    \"fragment\",\n    \"on\"\n  ],\n  typeKeywords: [\"Int\", \"Float\", \"String\", \"Boolean\", \"ID\"],\n  directiveLocations: [\n    \"SCHEMA\",\n    \"SCALAR\",\n    \"OBJECT\",\n    \"FIELD_DEFINITION\",\n    \"ARGUMENT_DEFINITION\",\n    \"INTERFACE\",\n    \"UNION\",\n    \"ENUM\",\n    \"ENUM_VALUE\",\n    \"INPUT_OBJECT\",\n    \"INPUT_FIELD_DEFINITION\",\n    \"QUERY\",\n    \"MUTATION\",\n    \"SUBSCRIPTION\",\n    \"FIELD\",\n    \"FRAGMENT_DEFINITION\",\n    \"FRAGMENT_SPREAD\",\n    \"INLINE_FRAGMENT\",\n    \"VARIABLE_DEFINITION\"\n  ],\n  operators: [\"=\", \"!\", \"?\", \":\", \"&\", \"|\"],\n  symbols: /[=!?:&|]+/,\n  escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\n  tokenizer: {\n    root: [\n      [\n        /[a-z_][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"key.identifier\"\n          }\n        }\n      ],\n      [\n        /[$][\\w$]*/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@default\": \"argument.identifier\"\n          }\n        }\n      ],\n      [\n        /[A-Z][\\w\\$]*/,\n        {\n          cases: {\n            \"@typeKeywords\": \"keyword\",\n            \"@default\": \"type.identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, { token: \"annotation\", log: \"annotation token: $0\" }],\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\n      [/\\d+/, \"number\"],\n      [/[;,.]/, \"delimiter\"],\n      [/\"\"\"/, { token: \"string\", next: \"@mlstring\", nextEmbedded: \"markdown\" }],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }]\n    ],\n    mlstring: [\n      [/[^\"]+/, \"string\"],\n      ['\"\"\"', { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }]\n    ],\n    string: [\n      [/[^\\\\\"]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"\"],\n      [/#.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","offSide","language","defaultToken","tokenPostfix","keywords","typeKeywords","directiveLocations","operators","symbols","escapes","tokenizer","root","cases","include","token","log","next","nextEmbedded","bracket","mlstring","string","whitespace"],"mappings":"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","x_google_ignoreList":[0]}