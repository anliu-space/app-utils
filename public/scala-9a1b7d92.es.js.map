{"version":3,"file":"scala-9a1b7d92.es.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.38.0/node_modules/monaco-editor/esm/vs/basic-languages/scala/scala.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.38.0(0e330ae453813de4e6cf272460fb79c7117073d0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/scala/scala.ts\nvar conf = {\n  wordPattern: /(unary_[@~!#%^&*()\\-=+\\\\|:<>\\/?]+)|([a-zA-Z_$][\\w$]*?_=)|(`[^`]+`)|([a-zA-Z_$][\\w$]*)/g,\n  comments: {\n    lineComment: \"//\",\n    blockComment: [\"/*\", \"*/\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  surroundingPairs: [\n    { open: \"{\", close: \"}\" },\n    { open: \"[\", close: \"]\" },\n    { open: \"(\", close: \")\" },\n    { open: '\"', close: '\"' },\n    { open: \"'\", close: \"'\" }\n  ],\n  folding: {\n    markers: {\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\n    }\n  }\n};\nvar language = {\n  tokenPostfix: \".scala\",\n  keywords: [\n    \"asInstanceOf\",\n    \"catch\",\n    \"class\",\n    \"classOf\",\n    \"def\",\n    \"do\",\n    \"else\",\n    \"extends\",\n    \"finally\",\n    \"for\",\n    \"foreach\",\n    \"forSome\",\n    \"if\",\n    \"import\",\n    \"isInstanceOf\",\n    \"macro\",\n    \"match\",\n    \"new\",\n    \"object\",\n    \"package\",\n    \"return\",\n    \"throw\",\n    \"trait\",\n    \"try\",\n    \"type\",\n    \"until\",\n    \"val\",\n    \"var\",\n    \"while\",\n    \"with\",\n    \"yield\",\n    \"given\",\n    \"enum\",\n    \"then\"\n  ],\n  softKeywords: [\"as\", \"export\", \"extension\", \"end\", \"derives\", \"on\"],\n  constants: [\"true\", \"false\", \"null\", \"this\", \"super\"],\n  modifiers: [\n    \"abstract\",\n    \"final\",\n    \"implicit\",\n    \"lazy\",\n    \"override\",\n    \"private\",\n    \"protected\",\n    \"sealed\"\n  ],\n  softModifiers: [\"inline\", \"opaque\", \"open\", \"transparent\", \"using\"],\n  name: /(?:[a-z_$][\\w$]*|`[^`]+`)/,\n  type: /(?:[A-Z][\\w$]*)/,\n  symbols: /[=><!~?:&|+\\-*\\/^\\\\%@#]+/,\n  digits: /\\d+(_+\\d+)*/,\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\n  escapes: /\\\\(?:[btnfr\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  fstring_conv: /[bBhHsScCdoxXeEfgGaAt]|[Tn](?:[HIklMSLNpzZsQ]|[BbhAaCYyjmde]|[RTrDFC])/,\n  tokenizer: {\n    root: [\n      [/\\braw\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstringt\" }],\n      [/\\braw\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@rawstring\" }],\n      [/\\bs\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstringt\" }],\n      [/\\bs\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@sstring\" }],\n      [/\\bf\"\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstringt\" }],\n      [/\\bf\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@fstring\" }],\n      [/\"\"\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@stringt\" }],\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }],\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\", \"@allowMethod\"],\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\", \"@allowMethod\"],\n      [/(@digits)[fFdD]/, \"number.float\", \"@allowMethod\"],\n      [/(@digits)[lL]?/, \"number\", \"@allowMethod\"],\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bimport\\b/, \"keyword\", \"@import\"],\n      [/\\b(case)([ \\t]+)(class)\\b/, [\"keyword.modifier\", \"white\", \"keyword\"]],\n      [/\\bcase\\b/, \"keyword\", \"@case\"],\n      [/\\bva[lr]\\b/, \"keyword\", \"@vardef\"],\n      [\n        /\\b(def)([ \\t]+)((?:unary_)?@symbols|@name(?:_=)|@name)/,\n        [\"keyword\", \"white\", \"identifier\"]\n      ],\n      [/@name(?=[ \\t]*:(?!:))/, \"variable\"],\n      [/(\\.)(@name|@symbols)/, [\"operator\", { token: \"@rematch\", next: \"@allowMethod\" }]],\n      [/([{(])(\\s*)(@name(?=\\s*=>))/, [\"@brackets\", \"white\", \"variable\"]],\n      [\n        /@name/,\n        {\n          cases: {\n            \"@keywords\": \"keyword\",\n            \"@softKeywords\": \"keyword\",\n            \"@modifiers\": \"keyword.modifier\",\n            \"@softModifiers\": \"keyword.modifier\",\n            \"@constants\": {\n              token: \"constant\",\n              next: \"@allowMethod\"\n            },\n            \"@default\": {\n              token: \"identifier\",\n              next: \"@allowMethod\"\n            }\n          }\n        }\n      ],\n      [/@type/, \"type\", \"@allowMethod\"],\n      { include: \"@whitespace\" },\n      [/@[a-zA-Z_$][\\w$]*(?:\\.[a-zA-Z_$][\\w$]*)*/, \"annotation\"],\n      [/[{(]/, \"@brackets\"],\n      [/[})]/, \"@brackets\", \"@allowMethod\"],\n      [/\\[/, \"operator.square\"],\n      [/](?!\\s*(?:va[rl]|def|type)\\b)/, \"operator.square\", \"@allowMethod\"],\n      [/]/, \"operator.square\"],\n      [/([=-]>|<-|>:|<:|:>|<%)(?=[\\s\\w()[\\]{},\\.\"'`])/, \"keyword\"],\n      [/@symbols/, \"operator\"],\n      [/[;,\\.]/, \"delimiter\"],\n      [/'[a-zA-Z$][\\w$]*(?!')/, \"attribute.name\"],\n      [/'[^\\\\']'/, \"string\", \"@allowMethod\"],\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", { token: \"string\", next: \"@allowMethod\" }]],\n      [/'/, \"string.invalid\"]\n    ],\n    import: [\n      [/;/, \"delimiter\", \"@pop\"],\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/@name|@type/, \"type\"],\n      [/[(){}]/, \"@brackets\"],\n      [/[[\\]]/, \"operator.square\"],\n      [/[\\.,]/, \"delimiter\"]\n    ],\n    allowMethod: [\n      [/^|$/, \"\", \"@pop\"],\n      [/[ \\t]+/, \"white\"],\n      [/[\\n\\r]+/, \"white\", \"@pop\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/(?==>[\\s\\w([{])/, \"keyword\", \"@pop\"],\n      [\n        /(@name|@symbols)(?=[ \\t]*[[({\"'`]|[ \\t]+(?:[+-]?\\.?\\d|\\w))/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword\", next: \"@pop\" },\n            \"->|<-|>:|<:|<%\": { token: \"keyword\", next: \"@pop\" },\n            \"@default\": { token: \"@rematch\", next: \"@pop\" }\n          }\n        }\n      ],\n      [\"\", \"\", \"@pop\"]\n    ],\n    comment: [\n      [/[^\\/*]+/, \"comment\"],\n      [/\\/\\*/, \"comment\", \"@push\"],\n      [/\\*\\//, \"comment\", \"@pop\"],\n      [/[\\/*]/, \"comment\"]\n    ],\n    case: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\", \"@allowMethod\"],\n      [/\\bif\\b|=>/, \"keyword\", \"@pop\"],\n      [/`[^`]+`/, \"identifier\", \"@allowMethod\"],\n      [/@name/, \"variable\", \"@allowMethod\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      { include: \"@root\" }\n    ],\n    vardef: [\n      [/\\b_\\*/, \"key\"],\n      [/\\b(_|true|false|null|this|super)\\b/, \"keyword\"],\n      [/@name/, \"variable\"],\n      [/:::?|\\||@(?![a-z_$])/, \"keyword\"],\n      [/=|:(?!:)/, \"operator\", \"@pop\"],\n      [/$/, \"white\", \"@pop\"],\n      { include: \"@root\" }\n    ],\n    string: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    stringt: [\n      [/[^\\\\\"\\n\\r]+/, \"string\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"string.escape.invalid\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    fstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    fstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/%%/, \"string\"],\n      [\n        /(%)([\\-#+ 0,(])(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/,\n        [\"metatag\", \"keyword.modifier\", \"number\", \"metatag\"]\n      ],\n      [/(%)(\\d+|\\.\\d+|\\d+\\.\\d+)(@fstring_conv)/, [\"metatag\", \"number\", \"metatag\"]],\n      [/(%)([\\-#+ 0,(])(@fstring_conv)/, [\"metatag\", \"keyword.modifier\", \"metatag\"]],\n      [/(%)(@fstring_conv)/, [\"metatag\", \"metatag\"]],\n      [/./, \"string\"]\n    ],\n    sstring: [\n      [/@escapes/, \"string.escape\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    sstringt: [\n      [/@escapes/, \"string.escape\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\\$\\$/, \"string\"],\n      [/(\\$)([a-z_]\\w*)/, [\"operator\", \"identifier\"]],\n      [/\\$\\{/, \"operator\", \"@interp\"],\n      [/./, \"string\"]\n    ],\n    interp: [[/{/, \"operator\", \"@push\"], [/}/, \"operator\", \"@pop\"], { include: \"@root\" }],\n    rawstring: [\n      [/[^\"]/, \"string\"],\n      [\n        /\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ]\n    ],\n    rawstringt: [\n      [/[^\"]/, \"string\"],\n      [/\"(?=\"\"\")/, \"string\"],\n      [\n        /\"\"\"/,\n        {\n          token: \"string.quote\",\n          bracket: \"@close\",\n          switchTo: \"@allowMethod\"\n        }\n      ],\n      [/\"/, \"string\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\/\\*/, \"comment\", \"@comment\"],\n      [/\\/\\/.*$/, \"comment\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","wordPattern","comments","lineComment","blockComment","brackets","autoClosingPairs","open","close","surroundingPairs","folding","markers","start","RegExp","end","language","tokenPostfix","keywords","softKeywords","constants","modifiers","softModifiers","name","type","symbols","digits","hexdigits","escapes","fstring_conv","tokenizer","root","token","bracket","next","cases","include","allowMethod","comment","vardef","string","switchTo","stringt","fstring","fstringt","sstring","sstringt","interp","rawstring","rawstringt","whitespace"],"mappings":"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","x_google_ignoreList":[0]}