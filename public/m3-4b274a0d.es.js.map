{"version":3,"file":"m3-4b274a0d.es.js","sources":["../../../node_modules/.pnpm/monaco-editor@0.38.0/node_modules/monaco-editor/esm/vs/basic-languages/m3/m3.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.38.0(0e330ae453813de4e6cf272460fb79c7117073d0)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/m3/m3.ts\nvar conf = {\n  comments: {\n    blockComment: [\"(*\", \"*)\"]\n  },\n  brackets: [\n    [\"{\", \"}\"],\n    [\"[\", \"]\"],\n    [\"(\", \")\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: \"{\", close: \"}\" },\n    { open: \"(\", close: \")\" },\n    { open: \"(*\", close: \"*)\" },\n    { open: \"<*\", close: \"*>\" },\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  tokenPostfix: \".m3\",\n  brackets: [\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" }\n  ],\n  keywords: [\n    \"AND\",\n    \"ANY\",\n    \"ARRAY\",\n    \"AS\",\n    \"BEGIN\",\n    \"BITS\",\n    \"BRANDED\",\n    \"BY\",\n    \"CASE\",\n    \"CONST\",\n    \"DIV\",\n    \"DO\",\n    \"ELSE\",\n    \"ELSIF\",\n    \"END\",\n    \"EVAL\",\n    \"EXCEPT\",\n    \"EXCEPTION\",\n    \"EXIT\",\n    \"EXPORTS\",\n    \"FINALLY\",\n    \"FOR\",\n    \"FROM\",\n    \"GENERIC\",\n    \"IF\",\n    \"IMPORT\",\n    \"IN\",\n    \"INTERFACE\",\n    \"LOCK\",\n    \"LOOP\",\n    \"METHODS\",\n    \"MOD\",\n    \"MODULE\",\n    \"NOT\",\n    \"OBJECT\",\n    \"OF\",\n    \"OR\",\n    \"OVERRIDES\",\n    \"PROCEDURE\",\n    \"RAISE\",\n    \"RAISES\",\n    \"READONLY\",\n    \"RECORD\",\n    \"REF\",\n    \"REPEAT\",\n    \"RETURN\",\n    \"REVEAL\",\n    \"SET\",\n    \"THEN\",\n    \"TO\",\n    \"TRY\",\n    \"TYPE\",\n    \"TYPECASE\",\n    \"UNSAFE\",\n    \"UNTIL\",\n    \"UNTRACED\",\n    \"VALUE\",\n    \"VAR\",\n    \"WHILE\",\n    \"WITH\"\n  ],\n  reservedConstNames: [\n    \"ABS\",\n    \"ADR\",\n    \"ADRSIZE\",\n    \"BITSIZE\",\n    \"BYTESIZE\",\n    \"CEILING\",\n    \"DEC\",\n    \"DISPOSE\",\n    \"FALSE\",\n    \"FIRST\",\n    \"FLOAT\",\n    \"FLOOR\",\n    \"INC\",\n    \"ISTYPE\",\n    \"LAST\",\n    \"LOOPHOLE\",\n    \"MAX\",\n    \"MIN\",\n    \"NARROW\",\n    \"NEW\",\n    \"NIL\",\n    \"NUMBER\",\n    \"ORD\",\n    \"ROUND\",\n    \"SUBARRAY\",\n    \"TRUE\",\n    \"TRUNC\",\n    \"TYPECODE\",\n    \"VAL\"\n  ],\n  reservedTypeNames: [\n    \"ADDRESS\",\n    \"ANY\",\n    \"BOOLEAN\",\n    \"CARDINAL\",\n    \"CHAR\",\n    \"EXTENDED\",\n    \"INTEGER\",\n    \"LONGCARD\",\n    \"LONGINT\",\n    \"LONGREAL\",\n    \"MUTEX\",\n    \"NULL\",\n    \"REAL\",\n    \"REFANY\",\n    \"ROOT\",\n    \"TEXT\"\n  ],\n  operators: [\"+\", \"-\", \"*\", \"/\", \"&\", \"^\", \".\"],\n  relations: [\"=\", \"#\", \"<\", \"<=\", \">\", \">=\", \"<:\", \":\"],\n  delimiters: [\"|\", \"..\", \"=>\", \",\", \";\", \":=\"],\n  symbols: /[>=<#.,:;+\\-*/&^]+/,\n  escapes: /\\\\(?:[\\\\fnrt\"']|[0-7]{3})/,\n  tokenizer: {\n    root: [\n      [/_\\w*/, \"invalid\"],\n      [\n        /[a-zA-Z][a-zA-Z0-9_]*/,\n        {\n          cases: {\n            \"@keywords\": { token: \"keyword.$0\" },\n            \"@reservedConstNames\": { token: \"constant.reserved.$0\" },\n            \"@reservedTypeNames\": { token: \"type.reserved.$0\" },\n            \"@default\": \"identifier\"\n          }\n        }\n      ],\n      { include: \"@whitespace\" },\n      [/[{}()\\[\\]]/, \"@brackets\"],\n      [/[0-9]+\\.[0-9]+(?:[DdEeXx][\\+\\-]?[0-9]+)?/, \"number.float\"],\n      [/[0-9]+(?:\\_[0-9a-fA-F]+)?L?/, \"number\"],\n      [\n        /@symbols/,\n        {\n          cases: {\n            \"@operators\": \"operators\",\n            \"@relations\": \"operators\",\n            \"@delimiters\": \"delimiter\",\n            \"@default\": \"invalid\"\n          }\n        }\n      ],\n      [/'[^\\\\']'/, \"string.char\"],\n      [/(')(@escapes)(')/, [\"string.char\", \"string.escape\", \"string.char\"]],\n      [/'/, \"invalid\"],\n      [/\"([^\"\\\\]|\\\\.)*$/, \"invalid\"],\n      [/\"/, \"string.text\", \"@text\"]\n    ],\n    text: [\n      [/[^\\\\\"]+/, \"string.text\"],\n      [/@escapes/, \"string.escape\"],\n      [/\\\\./, \"invalid\"],\n      [/\"/, \"string.text\", \"@pop\"]\n    ],\n    comment: [\n      [/\\(\\*/, \"comment\", \"@push\"],\n      [/\\*\\)/, \"comment\", \"@pop\"],\n      [/./, \"comment\"]\n    ],\n    pragma: [\n      [/<\\*/, \"keyword.pragma\", \"@push\"],\n      [/\\*>/, \"keyword.pragma\", \"@pop\"],\n      [/./, \"keyword.pragma\"]\n    ],\n    whitespace: [\n      [/[ \\t\\r\\n]+/, \"white\"],\n      [/\\(\\*/, \"comment\", \"@comment\"],\n      [/<\\*/, \"keyword.pragma\", \"@pragma\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","token","keywords","reservedConstNames","reservedTypeNames","operators","relations","delimiters","symbols","escapes","tokenizer","root","cases","include","text","comment","pragma","whitespace"],"mappings":"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","x_google_ignoreList":[0]}